// Compiled by ClojureScript 0.0-2760 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2760";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__15241__delegate = function (args){
return console.log.apply(console,(function (){var G__15240 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__15240) : cljs.core.into_array.call(null,G__15240));
})());
};
var G__15241 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15242__i = 0, G__15242__a = new Array(arguments.length -  0);
while (G__15242__i < G__15242__a.length) {G__15242__a[G__15242__i] = arguments[G__15242__i + 0]; ++G__15242__i;}
  args = new cljs.core.IndexedSeq(G__15242__a,0);
} 
return G__15241__delegate.call(this,args);};
G__15241.cljs$lang$maxFixedArity = 0;
G__15241.cljs$lang$applyTo = (function (arglist__15243){
var args = cljs.core.seq(arglist__15243);
return G__15241__delegate(args);
});
G__15241.cljs$core$IFn$_invoke$arity$variadic = G__15241__delegate;
return G__15241;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__15245 = x;
return goog.isString(G__15245);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__15247 = x__$1;
return goog.typeOf(G__15247);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__13726__auto__ = ty;
if(cljs.core.truth_(and__13726__auto__)){
return ty.cljs$lang$type;
} else {
return and__13726__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__15249 = obj;
return goog.typeOf(G__15249);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__15251 = Symbol;
return goog.typeOf(G__15251);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__14625__auto___15253 = len;
var i_15254 = (0);
while(true){
if((i_15254 < n__14625__auto___15253)){
(new_arr[i_15254] = (arr[i_15254]));

var G__15255 = (i_15254 + (1));
i_15254 = G__15255;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__15256 = (i + (1));
i = G__15256;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__15265__delegate = function (array,i,idxs){
var G__15262 = aget;
var G__15263 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__15264 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__15262,G__15263,G__15264) : cljs.core.apply.call(null,G__15262,G__15263,G__15264));
};
var G__15265 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__15266__i = 0, G__15266__a = new Array(arguments.length -  2);
while (G__15266__i < G__15266__a.length) {G__15266__a[G__15266__i] = arguments[G__15266__i + 2]; ++G__15266__i;}
  idxs = new cljs.core.IndexedSeq(G__15266__a,0);
} 
return G__15265__delegate.call(this,array,i,idxs);};
G__15265.cljs$lang$maxFixedArity = 2;
G__15265.cljs$lang$applyTo = (function (arglist__15267){
var array = cljs.core.first(arglist__15267);
arglist__15267 = cljs.core.next(arglist__15267);
var i = cljs.core.first(arglist__15267);
var idxs = cljs.core.rest(arglist__15267);
return G__15265__delegate(array,i,idxs);
});
G__15265.cljs$core$IFn$_invoke$arity$variadic = G__15265__delegate;
return G__15265;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__15268 = null;
if (arguments.length > 2) {
var G__15269__i = 0, G__15269__a = new Array(arguments.length -  2);
while (G__15269__i < G__15269__a.length) {G__15269__a[G__15269__i] = arguments[G__15269__i + 2]; ++G__15269__i;}
G__15268 = new cljs.core.IndexedSeq(G__15269__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__15268);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__15278__delegate = function (array,idx,idx2,idxv){
var G__15274 = aset;
var G__15275 = (array[idx]);
var G__15276 = idx2;
var G__15277 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__15274,G__15275,G__15276,G__15277) : cljs.core.apply.call(null,G__15274,G__15275,G__15276,G__15277));
};
var G__15278 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__15279__i = 0, G__15279__a = new Array(arguments.length -  3);
while (G__15279__i < G__15279__a.length) {G__15279__a[G__15279__i] = arguments[G__15279__i + 3]; ++G__15279__i;}
  idxv = new cljs.core.IndexedSeq(G__15279__a,0);
} 
return G__15278__delegate.call(this,array,idx,idx2,idxv);};
G__15278.cljs$lang$maxFixedArity = 3;
G__15278.cljs$lang$applyTo = (function (arglist__15280){
var array = cljs.core.first(arglist__15280);
arglist__15280 = cljs.core.next(arglist__15280);
var idx = cljs.core.first(arglist__15280);
arglist__15280 = cljs.core.next(arglist__15280);
var idx2 = cljs.core.first(arglist__15280);
var idxv = cljs.core.rest(arglist__15280);
return G__15278__delegate(array,idx,idx2,idxv);
});
G__15278.cljs$core$IFn$_invoke$arity$variadic = G__15278__delegate;
return G__15278;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__15281 = null;
if (arguments.length > 3) {
var G__15282__i = 0, G__15282__a = new Array(arguments.length -  3);
while (G__15282__i < G__15282__a.length) {G__15282__a[G__15282__i] = arguments[G__15282__i + 3]; ++G__15282__i;}
G__15281 = new cljs.core.IndexedSeq(G__15282__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__15281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__15288 = (function (a,x){
a.push(x);

return a;
});
var G__15289 = [];
var G__15290 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__15288,G__15289,G__15290) : cljs.core.reduce.call(null,G__15288,G__15289,G__15290));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__15291__i = 0, G__15291__a = new Array(arguments.length -  2);
while (G__15291__i < G__15291__a.length) {G__15291__a[G__15291__i] = arguments[G__15291__i + 2]; ++G__15291__i;}
  args = new cljs.core.IndexedSeq(G__15291__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__15292){
var obj = cljs.core.first(arglist__15292);
arglist__15292 = cljs.core.next(arglist__15292);
var s = cljs.core.first(arglist__15292);
var args = cljs.core.rest(arglist__15292);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj15294 = {};
return obj15294;
})();


cljs.core.IFn = (function (){var obj15296 = {};
return obj15296;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15342 = x__14382__auto__;
return goog.typeOf(G__15342);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15344 = x__14382__auto__;
return goog.typeOf(G__15344);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15346 = x__14382__auto__;
return goog.typeOf(G__15346);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15348 = x__14382__auto__;
return goog.typeOf(G__15348);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15350 = x__14382__auto__;
return goog.typeOf(G__15350);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15352 = x__14382__auto__;
return goog.typeOf(G__15352);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15354 = x__14382__auto__;
return goog.typeOf(G__15354);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15356 = x__14382__auto__;
return goog.typeOf(G__15356);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15358 = x__14382__auto__;
return goog.typeOf(G__15358);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15360 = x__14382__auto__;
return goog.typeOf(G__15360);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15362 = x__14382__auto__;
return goog.typeOf(G__15362);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15364 = x__14382__auto__;
return goog.typeOf(G__15364);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15366 = x__14382__auto__;
return goog.typeOf(G__15366);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15368 = x__14382__auto__;
return goog.typeOf(G__15368);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15370 = x__14382__auto__;
return goog.typeOf(G__15370);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15372 = x__14382__auto__;
return goog.typeOf(G__15372);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15374 = x__14382__auto__;
return goog.typeOf(G__15374);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15376 = x__14382__auto__;
return goog.typeOf(G__15376);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15378 = x__14382__auto__;
return goog.typeOf(G__15378);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15380 = x__14382__auto__;
return goog.typeOf(G__15380);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15382 = x__14382__auto__;
return goog.typeOf(G__15382);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._invoke[(function (){var G__15384 = x__14382__auto__;
return goog.typeOf(G__15384);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._invoke["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj15386 = {};
return obj15386;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__13726__auto__ = value;
if(and__13726__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__13726__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__14382__auto__ = (((value == null))?null:value);
return (function (){var or__13738__auto__ = (cljs.core._clone[(function (){var G__15390 = x__14382__auto__;
return goog.typeOf(G__15390);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._clone["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj15392 = {};
return obj15392;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._count[(function (){var G__15396 = x__14382__auto__;
return goog.typeOf(G__15396);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._count["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj15398 = {};
return obj15398;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._empty[(function (){var G__15402 = x__14382__auto__;
return goog.typeOf(G__15402);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._empty["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj15404 = {};
return obj15404;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._conj[(function (){var G__15408 = x__14382__auto__;
return goog.typeOf(G__15408);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._conj["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj15410 = {};
return obj15410;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._nth[(function (){var G__15416 = x__14382__auto__;
return goog.typeOf(G__15416);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._nth["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._nth[(function (){var G__15418 = x__14382__auto__;
return goog.typeOf(G__15418);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._nth["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj15420 = {};
return obj15420;
})();


cljs.core.ISeq = (function (){var obj15422 = {};
return obj15422;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._first[(function (){var G__15426 = x__14382__auto__;
return goog.typeOf(G__15426);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._first["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._rest[(function (){var G__15430 = x__14382__auto__;
return goog.typeOf(G__15430);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._rest["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj15432 = {};
return obj15432;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._next[(function (){var G__15436 = x__14382__auto__;
return goog.typeOf(G__15436);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._next["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj15438 = {};
return obj15438;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._lookup[(function (){var G__15444 = x__14382__auto__;
return goog.typeOf(G__15444);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._lookup["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._lookup[(function (){var G__15446 = x__14382__auto__;
return goog.typeOf(G__15446);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._lookup["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj15448 = {};
return obj15448;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__15452 = x__14382__auto__;
return goog.typeOf(G__15452);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._assoc[(function (){var G__15456 = x__14382__auto__;
return goog.typeOf(G__15456);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._assoc["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj15458 = {};
return obj15458;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._dissoc[(function (){var G__15462 = x__14382__auto__;
return goog.typeOf(G__15462);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._dissoc["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj15464 = {};
return obj15464;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._key[(function (){var G__15468 = x__14382__auto__;
return goog.typeOf(G__15468);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._key["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._val[(function (){var G__15472 = x__14382__auto__;
return goog.typeOf(G__15472);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._val["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj15474 = {};
return obj15474;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._disjoin[(function (){var G__15478 = x__14382__auto__;
return goog.typeOf(G__15478);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._disjoin["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj15480 = {};
return obj15480;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._peek[(function (){var G__15484 = x__14382__auto__;
return goog.typeOf(G__15484);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._peek["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._pop[(function (){var G__15488 = x__14382__auto__;
return goog.typeOf(G__15488);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._pop["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj15490 = {};
return obj15490;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._assoc_n[(function (){var G__15494 = x__14382__auto__;
return goog.typeOf(G__15494);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj15496 = {};
return obj15496;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._deref[(function (){var G__15500 = x__14382__auto__;
return goog.typeOf(G__15500);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._deref["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj15502 = {};
return obj15502;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._deref_with_timeout[(function (){var G__15506 = x__14382__auto__;
return goog.typeOf(G__15506);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj15508 = {};
return obj15508;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._meta[(function (){var G__15512 = x__14382__auto__;
return goog.typeOf(G__15512);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._meta["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj15514 = {};
return obj15514;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._with_meta[(function (){var G__15518 = x__14382__auto__;
return goog.typeOf(G__15518);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._with_meta["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj15520 = {};
return obj15520;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._reduce[(function (){var G__15526 = x__14382__auto__;
return goog.typeOf(G__15526);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._reduce["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._reduce[(function (){var G__15528 = x__14382__auto__;
return goog.typeOf(G__15528);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._reduce["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj15530 = {};
return obj15530;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._kv_reduce[(function (){var G__15534 = x__14382__auto__;
return goog.typeOf(G__15534);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj15536 = {};
return obj15536;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._equiv[(function (){var G__15540 = x__14382__auto__;
return goog.typeOf(G__15540);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._equiv["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj15542 = {};
return obj15542;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._hash[(function (){var G__15546 = x__14382__auto__;
return goog.typeOf(G__15546);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._hash["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj15548 = {};
return obj15548;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._seq[(function (){var G__15552 = x__14382__auto__;
return goog.typeOf(G__15552);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._seq["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj15554 = {};
return obj15554;
})();


cljs.core.IList = (function (){var obj15556 = {};
return obj15556;
})();


cljs.core.IRecord = (function (){var obj15558 = {};
return obj15558;
})();


cljs.core.IReversible = (function (){var obj15560 = {};
return obj15560;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._rseq[(function (){var G__15564 = x__14382__auto__;
return goog.typeOf(G__15564);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._rseq["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj15566 = {};
return obj15566;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._sorted_seq[(function (){var G__15570 = x__14382__auto__;
return goog.typeOf(G__15570);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._sorted_seq_from[(function (){var G__15574 = x__14382__auto__;
return goog.typeOf(G__15574);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._entry_key[(function (){var G__15578 = x__14382__auto__;
return goog.typeOf(G__15578);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._entry_key["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._comparator[(function (){var G__15582 = x__14382__auto__;
return goog.typeOf(G__15582);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._comparator["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj15584 = {};
return obj15584;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__13726__auto__ = writer;
if(and__13726__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__13726__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__14382__auto__ = (((writer == null))?null:writer);
return (function (){var or__13738__auto__ = (cljs.core._write[(function (){var G__15588 = x__14382__auto__;
return goog.typeOf(G__15588);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._write["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__13726__auto__ = writer;
if(and__13726__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__13726__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__14382__auto__ = (((writer == null))?null:writer);
return (function (){var or__13738__auto__ = (cljs.core._flush[(function (){var G__15592 = x__14382__auto__;
return goog.typeOf(G__15592);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._flush["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj15594 = {};
return obj15594;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._pr_writer[(function (){var G__15598 = x__14382__auto__;
return goog.typeOf(G__15598);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj15600 = {};
return obj15600;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__13726__auto__ = d;
if(and__13726__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__13726__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__14382__auto__ = (((d == null))?null:d);
return (function (){var or__13738__auto__ = (cljs.core._realized_QMARK_[(function (){var G__15604 = x__14382__auto__;
return goog.typeOf(G__15604);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj15606 = {};
return obj15606;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._notify_watches[(function (){var G__15610 = x__14382__auto__;
return goog.typeOf(G__15610);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._add_watch[(function (){var G__15614 = x__14382__auto__;
return goog.typeOf(G__15614);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._add_watch["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__13726__auto__ = this$;
if(and__13726__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__13726__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__14382__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13738__auto__ = (cljs.core._remove_watch[(function (){var G__15618 = x__14382__auto__;
return goog.typeOf(G__15618);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj15620 = {};
return obj15620;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._as_transient[(function (){var G__15624 = x__14382__auto__;
return goog.typeOf(G__15624);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._as_transient["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj15626 = {};
return obj15626;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__13726__auto__ = tcoll;
if(and__13726__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__13726__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__14382__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13738__auto__ = (cljs.core._conj_BANG_[(function (){var G__15630 = x__14382__auto__;
return goog.typeOf(G__15630);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__13726__auto__ = tcoll;
if(and__13726__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__13726__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__14382__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13738__auto__ = (cljs.core._persistent_BANG_[(function (){var G__15634 = x__14382__auto__;
return goog.typeOf(G__15634);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj15636 = {};
return obj15636;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__13726__auto__ = tcoll;
if(and__13726__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__13726__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__14382__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13738__auto__ = (cljs.core._assoc_BANG_[(function (){var G__15640 = x__14382__auto__;
return goog.typeOf(G__15640);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj15642 = {};
return obj15642;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__13726__auto__ = tcoll;
if(and__13726__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__13726__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__14382__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13738__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__15646 = x__14382__auto__;
return goog.typeOf(G__15646);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj15648 = {};
return obj15648;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__13726__auto__ = tcoll;
if(and__13726__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__13726__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__14382__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13738__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__15652 = x__14382__auto__;
return goog.typeOf(G__15652);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__13726__auto__ = tcoll;
if(and__13726__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__13726__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__14382__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13738__auto__ = (cljs.core._pop_BANG_[(function (){var G__15656 = x__14382__auto__;
return goog.typeOf(G__15656);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj15658 = {};
return obj15658;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__13726__auto__ = tcoll;
if(and__13726__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__13726__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__14382__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13738__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__15662 = x__14382__auto__;
return goog.typeOf(G__15662);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj15664 = {};
return obj15664;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__13726__auto__ = x;
if(and__13726__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__13726__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__14382__auto__ = (((x == null))?null:x);
return (function (){var or__13738__auto__ = (cljs.core._compare[(function (){var G__15668 = x__14382__auto__;
return goog.typeOf(G__15668);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._compare["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj15670 = {};
return obj15670;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._drop_first[(function (){var G__15674 = x__14382__auto__;
return goog.typeOf(G__15674);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._drop_first["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj15676 = {};
return obj15676;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._chunked_first[(function (){var G__15680 = x__14382__auto__;
return goog.typeOf(G__15680);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._chunked_rest[(function (){var G__15684 = x__14382__auto__;
return goog.typeOf(G__15684);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj15686 = {};
return obj15686;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._chunked_next[(function (){var G__15690 = x__14382__auto__;
return goog.typeOf(G__15690);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj15692 = {};
return obj15692;
})();

cljs.core._name = (function _name(x){
if((function (){var and__13726__auto__ = x;
if(and__13726__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__13726__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__14382__auto__ = (((x == null))?null:x);
return (function (){var or__13738__auto__ = (cljs.core._name[(function (){var G__15696 = x__14382__auto__;
return goog.typeOf(G__15696);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._name["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__13726__auto__ = x;
if(and__13726__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__13726__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__14382__auto__ = (((x == null))?null:x);
return (function (){var or__13738__auto__ = (cljs.core._namespace[(function (){var G__15700 = x__14382__auto__;
return goog.typeOf(G__15700);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._namespace["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj15702 = {};
return obj15702;
})();


cljs.core.IReset = (function (){var obj15704 = {};
return obj15704;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._reset_BANG_[(function (){var G__15708 = x__14382__auto__;
return goog.typeOf(G__15708);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj15710 = {};
return obj15710;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._swap_BANG_[(function (){var G__15720 = x__14382__auto__;
return goog.typeOf(G__15720);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._swap_BANG_[(function (){var G__15722 = x__14382__auto__;
return goog.typeOf(G__15722);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._swap_BANG_[(function (){var G__15724 = x__14382__auto__;
return goog.typeOf(G__15724);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._swap_BANG_[(function (){var G__15726 = x__14382__auto__;
return goog.typeOf(G__15726);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj15728 = {};
return obj15728;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__13726__auto__ = o;
if(and__13726__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__13726__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__14382__auto__ = (((o == null))?null:o);
return (function (){var or__13738__auto__ = (cljs.core._vreset_BANG_[(function (){var G__15732 = x__14382__auto__;
return goog.typeOf(G__15732);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj15734 = {};
return obj15734;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__13726__auto__ = coll;
if(and__13726__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__13726__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__14382__auto__ = (((coll == null))?null:coll);
return (function (){var or__13738__auto__ = (cljs.core._iterator[(function (){var G__15738 = x__14382__auto__;
return goog.typeOf(G__15738);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._iterator["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__15741 = (4294967295);
var G__15742 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__15741,G__15742) : Math.imul.call(null,G__15741,G__15742));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__15745 = a;
var G__15746 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__15745,G__15746) : Math.imul.call(null,G__15745,G__15746));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__15747 = (i + (2));
var G__15748 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__15747;
h1 = G__15748;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj15750 = {};
return obj15750;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__15751 = (i + (1));
var G__15752 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__15751;
hash = G__15752;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj15756 = {};
return obj15756;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__15759 = o;
if(G__15759){
var bit__14412__auto__ = (G__15759.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__14412__auto__) || (G__15759.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__15760 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__15760) : Math.floor.call(null,G__15760));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13726__auto__ = cljs.core.not(a.ns);
if(and__13726__auto__){
return b.ns;
} else {
return and__13726__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__15767 = a.ns;
var G__15768 = b.ns;
return goog.array.defaultCompare(G__15767,G__15768);
})();
if(((0) === nsc)){
var G__15769 = a.name;
var G__15770 = b.name;
return goog.array.defaultCompare(G__15769,G__15770);
} else {
return nsc;
}
}
} else {
var G__15771 = a.name;
var G__15772 = b.name;
return goog.array.defaultCompare(G__15771,G__15772);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__14159__auto__ = self__._hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__15774 = null;
var G__15774__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__15774__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__15774 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__15774__2.call(this,self__,coll);
case 3:
return G__15774__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15774.cljs$core$IFn$_invoke$arity$2 = G__15774__2;
G__15774.cljs$core$IFn$_invoke$arity$3 = G__15774__3;
return G__15774;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args15773){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15773)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__15822 = null;
var G__15822__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__15822__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__15822__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__15822__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__15822__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__15822__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__15822__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__15822__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__15822__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__15822__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__15822__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__15822__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__15822__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__15822__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__15822__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__15822__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__15822__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__15822__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__15822__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__15822__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__15822__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__15822__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15778 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__15779 = a;
var G__15780 = b;
var G__15781 = c;
var G__15782 = d;
var G__15783 = e;
var G__15784 = f;
var G__15785 = g;
var G__15786 = h;
var G__15787 = i;
var G__15788 = j;
var G__15789 = k;
var G__15790 = l;
var G__15791 = m;
var G__15792 = n;
var G__15793 = o;
var G__15794 = p;
var G__15795 = q;
var G__15796 = r;
var G__15797 = s;
var G__15798 = t;
var G__15799 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787,G__15788,G__15789,G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799) : cljs.core.apply.call(null,G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786,G__15787,G__15788,G__15789,G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799));
});
G__15822 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__15822__1.call(this,self__);
case 2:
return G__15822__2.call(this,self__,a);
case 3:
return G__15822__3.call(this,self__,a,b);
case 4:
return G__15822__4.call(this,self__,a,b,c);
case 5:
return G__15822__5.call(this,self__,a,b,c,d);
case 6:
return G__15822__6.call(this,self__,a,b,c,d,e);
case 7:
return G__15822__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__15822__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__15822__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__15822__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__15822__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__15822__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__15822__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__15822__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__15822__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__15822__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__15822__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__15822__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__15822__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__15822__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__15822__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__15822__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15822.cljs$core$IFn$_invoke$arity$1 = G__15822__1;
G__15822.cljs$core$IFn$_invoke$arity$2 = G__15822__2;
G__15822.cljs$core$IFn$_invoke$arity$3 = G__15822__3;
G__15822.cljs$core$IFn$_invoke$arity$4 = G__15822__4;
G__15822.cljs$core$IFn$_invoke$arity$5 = G__15822__5;
G__15822.cljs$core$IFn$_invoke$arity$6 = G__15822__6;
G__15822.cljs$core$IFn$_invoke$arity$7 = G__15822__7;
G__15822.cljs$core$IFn$_invoke$arity$8 = G__15822__8;
G__15822.cljs$core$IFn$_invoke$arity$9 = G__15822__9;
G__15822.cljs$core$IFn$_invoke$arity$10 = G__15822__10;
G__15822.cljs$core$IFn$_invoke$arity$11 = G__15822__11;
G__15822.cljs$core$IFn$_invoke$arity$12 = G__15822__12;
G__15822.cljs$core$IFn$_invoke$arity$13 = G__15822__13;
G__15822.cljs$core$IFn$_invoke$arity$14 = G__15822__14;
G__15822.cljs$core$IFn$_invoke$arity$15 = G__15822__15;
G__15822.cljs$core$IFn$_invoke$arity$16 = G__15822__16;
G__15822.cljs$core$IFn$_invoke$arity$17 = G__15822__17;
G__15822.cljs$core$IFn$_invoke$arity$18 = G__15822__18;
G__15822.cljs$core$IFn$_invoke$arity$19 = G__15822__19;
G__15822.cljs$core$IFn$_invoke$arity$20 = G__15822__20;
G__15822.cljs$core$IFn$_invoke$arity$21 = G__15822__21;
G__15822.cljs$core$IFn$_invoke$arity$22 = G__15822__22;
return G__15822;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args15777){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15777)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__15800 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__15801 = a;
var G__15802 = b;
var G__15803 = c;
var G__15804 = d;
var G__15805 = e;
var G__15806 = f;
var G__15807 = g;
var G__15808 = h;
var G__15809 = i;
var G__15810 = j;
var G__15811 = k;
var G__15812 = l;
var G__15813 = m;
var G__15814 = n;
var G__15815 = o;
var G__15816 = p;
var G__15817 = q;
var G__15818 = r;
var G__15819 = s;
var G__15820 = t;
var G__15821 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__15800,G__15801,G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813,G__15814,G__15815,G__15816,G__15817,G__15818,G__15819,G__15820,G__15821) : cljs.core.apply.call(null,G__15800,G__15801,G__15802,G__15803,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813,G__15814,G__15815,G__15816,G__15817,G__15818,G__15819,G__15820,G__15821));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__15824 = x;
if(G__15824){
var bit__14419__auto__ = null;
if(cljs.core.truth_((function (){var or__13738__auto__ = bit__14419__auto__;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return G__15824.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__15824.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__15824);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__15824);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__15826 = value;
if(G__15826){
var bit__14419__auto__ = (G__15826.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__14419__auto__) || (G__15826.cljs$core$ICloneable$)){
return true;
} else {
if((!G__15826.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__15826);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__15826);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__15828 = coll;
if(G__15828){
var bit__14412__auto__ = (G__15828.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__14412__auto__) || (G__15828.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__15830 = coll;
if(G__15830){
var bit__14412__auto__ = (G__15830.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14412__auto__) || (G__15830.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__15832 = coll;
if(G__15832){
var bit__14412__auto__ = (G__15832.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14412__auto__) || (G__15832.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__15834 = coll;
if(G__15834){
var bit__14412__auto__ = (G__15834.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14412__auto__) || (G__15834.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__15839__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__15840 = y;
var G__15841 = cljs.core.first(more);
var G__15842 = cljs.core.next(more);
x = G__15840;
y = G__15841;
more = G__15842;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__15839 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15843__i = 0, G__15843__a = new Array(arguments.length -  2);
while (G__15843__i < G__15843__a.length) {G__15843__a[G__15843__i] = arguments[G__15843__i + 2]; ++G__15843__i;}
  more = new cljs.core.IndexedSeq(G__15843__a,0);
} 
return G__15839__delegate.call(this,x,y,more);};
G__15839.cljs$lang$maxFixedArity = 2;
G__15839.cljs$lang$applyTo = (function (arglist__15844){
var x = cljs.core.first(arglist__15844);
arglist__15844 = cljs.core.next(arglist__15844);
var y = cljs.core.first(arglist__15844);
var more = cljs.core.rest(arglist__15844);
return G__15839__delegate(x,y,more);
});
G__15839.cljs$core$IFn$_invoke$arity$variadic = G__15839__delegate;
return G__15839;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__15845 = null;
if (arguments.length > 2) {
var G__15846__i = 0, G__15846__a = new Array(arguments.length -  2);
while (G__15846__i < G__15846__a.length) {G__15846__a[G__15846__i] = arguments[G__15846__i + 2]; ++G__15846__i;}
G__15845 = new cljs.core.IndexedSeq(G__15846__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15845);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__15847 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__15847) : cljs.core.es6_iterator_seq.call(null,G__15847));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__15848 = (n + (1));
var G__15849 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__15850 = cljs.core.next(coll__$1);
n = G__15848;
hash_code = G__15849;
coll__$1 = G__15850;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__15851 = (n + (1));
var G__15852 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__15853 = cljs.core.next(coll__$1);
n = G__15851;
hash_code = G__15852;
coll__$1 = G__15853;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__15854 = o;
return goog.getUid(G__15854);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__15856 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15856) : cljs.core.deref.call(null,G__15856));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__15863 = val;
var G__15864 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15863,G__15864) : f.call(null,G__15863,G__15864));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15869 = nval;
var G__15870 = (n + (1));
val = G__15869;
n = G__15870;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__15865 = val__$1;
var G__15866 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15865,G__15866) : f.call(null,G__15865,G__15866));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15871 = nval;
var G__15872 = (n + (1));
val__$1 = G__15871;
n = G__15872;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__15867 = val__$1;
var G__15868 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15867,G__15868) : f.call(null,G__15867,G__15868));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15873 = nval;
var G__15874 = (n + (1));
val__$1 = G__15873;
n = G__15874;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__15881 = val;
var G__15882 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15881,G__15882) : f.call(null,G__15881,G__15882));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15887 = nval;
var G__15888 = (n + (1));
val = G__15887;
n = G__15888;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__15883 = val__$1;
var G__15884 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15883,G__15884) : f.call(null,G__15883,G__15884));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15889 = nval;
var G__15890 = (n + (1));
val__$1 = G__15889;
n = G__15890;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__15885 = val__$1;
var G__15886 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15885,G__15886) : f.call(null,G__15885,G__15886));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__15891 = nval;
var G__15892 = (n + (1));
val__$1 = G__15891;
n = G__15892;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__15894 = x;
if(G__15894){
var bit__14419__auto__ = (G__15894.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__14419__auto__) || (G__15894.cljs$core$ICounted$)){
return true;
} else {
if((!G__15894.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__15894);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__15894);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__15896 = x;
if(G__15896){
var bit__14419__auto__ = (G__15896.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14419__auto__) || (G__15896.cljs$core$IIndexed$)){
return true;
} else {
if((!G__15896.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__15896);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__15896);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__15897 = coll__$1;
var G__15898 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__15897,G__15898) : cljs.core.equiv_sequential.call(null,G__15897,G__15898));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15899 = o;
var G__15900 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__15899,G__15900) : cljs.core.cons.call(null,G__15899,G__15900));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__15903 = coll__$1;
var G__15904 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__15903,G__15904) : cljs.core.equiv_sequential.call(null,G__15903,G__15904));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15905 = cljs.core.List.EMPTY;
var G__15906 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__15905,G__15906) : cljs.core.with_meta.call(null,G__15905,G__15906));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__15907 = f;
var G__15908 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__15907,G__15908) : cljs.core.seq_reduce.call(null,G__15907,G__15908));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__15909 = f;
var G__15910 = start;
var G__15911 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__15909,G__15910,G__15911) : cljs.core.seq_reduce.call(null,G__15909,G__15910,G__15911));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15912 = o;
var G__15913 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__15912,G__15913) : cljs.core.cons.call(null,G__15912,G__15913));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__15914 = sn;
s = G__15914;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__15919__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__15920 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__15921 = cljs.core.first(xs);
var G__15922 = cljs.core.next(xs);
coll = G__15920;
x = G__15921;
xs = G__15922;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__15919 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__15923__i = 0, G__15923__a = new Array(arguments.length -  2);
while (G__15923__i < G__15923__a.length) {G__15923__a[G__15923__i] = arguments[G__15923__i + 2]; ++G__15923__i;}
  xs = new cljs.core.IndexedSeq(G__15923__a,0);
} 
return G__15919__delegate.call(this,coll,x,xs);};
G__15919.cljs$lang$maxFixedArity = 2;
G__15919.cljs$lang$applyTo = (function (arglist__15924){
var coll = cljs.core.first(arglist__15924);
arglist__15924 = cljs.core.next(arglist__15924);
var x = cljs.core.first(arglist__15924);
var xs = cljs.core.rest(arglist__15924);
return G__15919__delegate(coll,x,xs);
});
G__15919.cljs$core$IFn$_invoke$arity$variadic = G__15919__delegate;
return G__15919;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__15925 = null;
if (arguments.length > 2) {
var G__15926__i = 0, G__15926__a = new Array(arguments.length -  2);
while (G__15926__i < G__15926__a.length) {G__15926__a[G__15926__i] = arguments[G__15926__i + 2]; ++G__15926__i;}
G__15925 = new cljs.core.IndexedSeq(G__15926__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__15925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__15927 = cljs.core.next(s);
var G__15928 = (acc + (1));
s = G__15927;
acc = G__15928;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__15930 = coll;
if(G__15930){
var bit__14412__auto__ = (G__15930.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__14412__auto__) || (G__15930.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__15931 = cljs.core.next(coll);
var G__15932 = (n - (1));
coll = G__15931;
n = G__15932;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__15933 = cljs.core.next(coll);
var G__15934 = (n - (1));
var G__15935 = not_found;
coll = G__15933;
n = G__15934;
not_found = G__15935;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__15940 = coll;
if(G__15940){
var bit__14412__auto__ = (G__15940.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14412__auto__) || (G__15940.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__15941 = coll;
if(G__15941){
var bit__14419__auto__ = (G__15941.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14419__auto__) || (G__15941.cljs$core$ISeq$)){
return true;
} else {
if((!G__15941.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15941);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15941);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__15942 = coll;
if(G__15942){
var bit__14412__auto__ = (G__15942.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14412__auto__) || (G__15942.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__15943 = coll;
if(G__15943){
var bit__14419__auto__ = (G__15943.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14419__auto__) || (G__15943.cljs$core$ISeq$)){
return true;
} else {
if((!G__15943.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15943);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__15943);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__15944 = (n__$1 - (1));
var G__15945 = cljs.core.rest(xs);
n__$1 = G__15944;
xs = G__15945;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__15948 = o;
if(G__15948){
var bit__14412__auto__ = (G__15948.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14412__auto__) || (G__15948.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__15949 = o;
if(G__15949){
var bit__14412__auto__ = (G__15949.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14412__auto__) || (G__15949.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__15953__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__15954 = ret;
var G__15955 = cljs.core.first(kvs);
var G__15956 = cljs.core.second(kvs);
var G__15957 = cljs.core.nnext(kvs);
coll = G__15954;
k = G__15955;
v = G__15956;
kvs = G__15957;
continue;
} else {
return ret;
}
break;
}
};
var G__15953 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__15958__i = 0, G__15958__a = new Array(arguments.length -  3);
while (G__15958__i < G__15958__a.length) {G__15958__a[G__15958__i] = arguments[G__15958__i + 3]; ++G__15958__i;}
  kvs = new cljs.core.IndexedSeq(G__15958__a,0);
} 
return G__15953__delegate.call(this,coll,k,v,kvs);};
G__15953.cljs$lang$maxFixedArity = 3;
G__15953.cljs$lang$applyTo = (function (arglist__15959){
var coll = cljs.core.first(arglist__15959);
arglist__15959 = cljs.core.next(arglist__15959);
var k = cljs.core.first(arglist__15959);
arglist__15959 = cljs.core.next(arglist__15959);
var v = cljs.core.first(arglist__15959);
var kvs = cljs.core.rest(arglist__15959);
return G__15953__delegate(coll,k,v,kvs);
});
G__15953.cljs$core$IFn$_invoke$arity$variadic = G__15953__delegate;
return G__15953;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__15960 = null;
if (arguments.length > 3) {
var G__15961__i = 0, G__15961__a = new Array(arguments.length -  3);
while (G__15961__i < G__15961__a.length) {G__15961__a[G__15961__i] = arguments[G__15961__i + 3]; ++G__15961__i;}
G__15960 = new cljs.core.IndexedSeq(G__15961__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__15960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__15964__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__15965 = ret;
var G__15966 = cljs.core.first(ks);
var G__15967 = cljs.core.next(ks);
coll = G__15965;
k = G__15966;
ks = G__15967;
continue;
} else {
return ret;
}
}
break;
}
};
var G__15964 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__15968__i = 0, G__15968__a = new Array(arguments.length -  2);
while (G__15968__i < G__15968__a.length) {G__15968__a[G__15968__i] = arguments[G__15968__i + 2]; ++G__15968__i;}
  ks = new cljs.core.IndexedSeq(G__15968__a,0);
} 
return G__15964__delegate.call(this,coll,k,ks);};
G__15964.cljs$lang$maxFixedArity = 2;
G__15964.cljs$lang$applyTo = (function (arglist__15969){
var coll = cljs.core.first(arglist__15969);
arglist__15969 = cljs.core.next(arglist__15969);
var k = cljs.core.first(arglist__15969);
var ks = cljs.core.rest(arglist__15969);
return G__15964__delegate(coll,k,ks);
});
G__15964.cljs$core$IFn$_invoke$arity$variadic = G__15964__delegate;
return G__15964;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__15970 = null;
if (arguments.length > 2) {
var G__15971__i = 0, G__15971__a = new Array(arguments.length -  2);
while (G__15971__i < G__15971__a.length) {G__15971__a[G__15971__i] = arguments[G__15971__i + 2]; ++G__15971__i;}
G__15970 = new cljs.core.IndexedSeq(G__15971__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__15970);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__13738__auto__ = (function (){var G__15976 = f;
return goog.isFunction(G__15976);
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var G__15977 = f;
if(G__15977){
var bit__14419__auto__ = null;
if(cljs.core.truth_((function (){var or__13738__auto____$1 = bit__14419__auto__;
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
return G__15977.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__15977.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__15977);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__15977);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__16443 = null;
var G__16443__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__16443__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15979 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__15979) : self__.afn.call(null,G__15979));
});
var G__16443__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15980 = a;
var G__15981 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__15980,G__15981) : self__.afn.call(null,G__15980,G__15981));
});
var G__16443__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15982 = a;
var G__15983 = b;
var G__15984 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__15982,G__15983,G__15984) : self__.afn.call(null,G__15982,G__15983,G__15984));
});
var G__16443__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15985 = a;
var G__15986 = b;
var G__15987 = c;
var G__15988 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__15985,G__15986,G__15987,G__15988) : self__.afn.call(null,G__15985,G__15986,G__15987,G__15988));
});
var G__16443__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15989 = a;
var G__15990 = b;
var G__15991 = c;
var G__15992 = d;
var G__15993 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__15989,G__15990,G__15991,G__15992,G__15993) : self__.afn.call(null,G__15989,G__15990,G__15991,G__15992,G__15993));
});
var G__16443__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__15994 = a;
var G__15995 = b;
var G__15996 = c;
var G__15997 = d;
var G__15998 = e;
var G__15999 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__15994,G__15995,G__15996,G__15997,G__15998,G__15999) : self__.afn.call(null,G__15994,G__15995,G__15996,G__15997,G__15998,G__15999));
});
var G__16443__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16000 = a;
var G__16001 = b;
var G__16002 = c;
var G__16003 = d;
var G__16004 = e;
var G__16005 = f;
var G__16006 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__16000,G__16001,G__16002,G__16003,G__16004,G__16005,G__16006) : self__.afn.call(null,G__16000,G__16001,G__16002,G__16003,G__16004,G__16005,G__16006));
});
var G__16443__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16007 = a;
var G__16008 = b;
var G__16009 = c;
var G__16010 = d;
var G__16011 = e;
var G__16012 = f;
var G__16013 = g;
var G__16014 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__16007,G__16008,G__16009,G__16010,G__16011,G__16012,G__16013,G__16014) : self__.afn.call(null,G__16007,G__16008,G__16009,G__16010,G__16011,G__16012,G__16013,G__16014));
});
var G__16443__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16015 = a;
var G__16016 = b;
var G__16017 = c;
var G__16018 = d;
var G__16019 = e;
var G__16020 = f;
var G__16021 = g;
var G__16022 = h;
var G__16023 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__16015,G__16016,G__16017,G__16018,G__16019,G__16020,G__16021,G__16022,G__16023) : self__.afn.call(null,G__16015,G__16016,G__16017,G__16018,G__16019,G__16020,G__16021,G__16022,G__16023));
});
var G__16443__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16024 = a;
var G__16025 = b;
var G__16026 = c;
var G__16027 = d;
var G__16028 = e;
var G__16029 = f;
var G__16030 = g;
var G__16031 = h;
var G__16032 = i;
var G__16033 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__16024,G__16025,G__16026,G__16027,G__16028,G__16029,G__16030,G__16031,G__16032,G__16033) : self__.afn.call(null,G__16024,G__16025,G__16026,G__16027,G__16028,G__16029,G__16030,G__16031,G__16032,G__16033));
});
var G__16443__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16034 = a;
var G__16035 = b;
var G__16036 = c;
var G__16037 = d;
var G__16038 = e;
var G__16039 = f;
var G__16040 = g;
var G__16041 = h;
var G__16042 = i;
var G__16043 = j;
var G__16044 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__16034,G__16035,G__16036,G__16037,G__16038,G__16039,G__16040,G__16041,G__16042,G__16043,G__16044) : self__.afn.call(null,G__16034,G__16035,G__16036,G__16037,G__16038,G__16039,G__16040,G__16041,G__16042,G__16043,G__16044));
});
var G__16443__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16045 = a;
var G__16046 = b;
var G__16047 = c;
var G__16048 = d;
var G__16049 = e;
var G__16050 = f;
var G__16051 = g;
var G__16052 = h;
var G__16053 = i;
var G__16054 = j;
var G__16055 = k;
var G__16056 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__16045,G__16046,G__16047,G__16048,G__16049,G__16050,G__16051,G__16052,G__16053,G__16054,G__16055,G__16056) : self__.afn.call(null,G__16045,G__16046,G__16047,G__16048,G__16049,G__16050,G__16051,G__16052,G__16053,G__16054,G__16055,G__16056));
});
var G__16443__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16057 = a;
var G__16058 = b;
var G__16059 = c;
var G__16060 = d;
var G__16061 = e;
var G__16062 = f;
var G__16063 = g;
var G__16064 = h;
var G__16065 = i;
var G__16066 = j;
var G__16067 = k;
var G__16068 = l;
var G__16069 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__16057,G__16058,G__16059,G__16060,G__16061,G__16062,G__16063,G__16064,G__16065,G__16066,G__16067,G__16068,G__16069) : self__.afn.call(null,G__16057,G__16058,G__16059,G__16060,G__16061,G__16062,G__16063,G__16064,G__16065,G__16066,G__16067,G__16068,G__16069));
});
var G__16443__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16070 = a;
var G__16071 = b;
var G__16072 = c;
var G__16073 = d;
var G__16074 = e;
var G__16075 = f;
var G__16076 = g;
var G__16077 = h;
var G__16078 = i;
var G__16079 = j;
var G__16080 = k;
var G__16081 = l;
var G__16082 = m;
var G__16083 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__16070,G__16071,G__16072,G__16073,G__16074,G__16075,G__16076,G__16077,G__16078,G__16079,G__16080,G__16081,G__16082,G__16083) : self__.afn.call(null,G__16070,G__16071,G__16072,G__16073,G__16074,G__16075,G__16076,G__16077,G__16078,G__16079,G__16080,G__16081,G__16082,G__16083));
});
var G__16443__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16084 = a;
var G__16085 = b;
var G__16086 = c;
var G__16087 = d;
var G__16088 = e;
var G__16089 = f;
var G__16090 = g;
var G__16091 = h;
var G__16092 = i;
var G__16093 = j;
var G__16094 = k;
var G__16095 = l;
var G__16096 = m;
var G__16097 = n;
var G__16098 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__16084,G__16085,G__16086,G__16087,G__16088,G__16089,G__16090,G__16091,G__16092,G__16093,G__16094,G__16095,G__16096,G__16097,G__16098) : self__.afn.call(null,G__16084,G__16085,G__16086,G__16087,G__16088,G__16089,G__16090,G__16091,G__16092,G__16093,G__16094,G__16095,G__16096,G__16097,G__16098));
});
var G__16443__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16099 = a;
var G__16100 = b;
var G__16101 = c;
var G__16102 = d;
var G__16103 = e;
var G__16104 = f;
var G__16105 = g;
var G__16106 = h;
var G__16107 = i;
var G__16108 = j;
var G__16109 = k;
var G__16110 = l;
var G__16111 = m;
var G__16112 = n;
var G__16113 = o;
var G__16114 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__16099,G__16100,G__16101,G__16102,G__16103,G__16104,G__16105,G__16106,G__16107,G__16108,G__16109,G__16110,G__16111,G__16112,G__16113,G__16114) : self__.afn.call(null,G__16099,G__16100,G__16101,G__16102,G__16103,G__16104,G__16105,G__16106,G__16107,G__16108,G__16109,G__16110,G__16111,G__16112,G__16113,G__16114));
});
var G__16443__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16115 = a;
var G__16116 = b;
var G__16117 = c;
var G__16118 = d;
var G__16119 = e;
var G__16120 = f;
var G__16121 = g;
var G__16122 = h;
var G__16123 = i;
var G__16124 = j;
var G__16125 = k;
var G__16126 = l;
var G__16127 = m;
var G__16128 = n;
var G__16129 = o;
var G__16130 = p;
var G__16131 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__16115,G__16116,G__16117,G__16118,G__16119,G__16120,G__16121,G__16122,G__16123,G__16124,G__16125,G__16126,G__16127,G__16128,G__16129,G__16130,G__16131) : self__.afn.call(null,G__16115,G__16116,G__16117,G__16118,G__16119,G__16120,G__16121,G__16122,G__16123,G__16124,G__16125,G__16126,G__16127,G__16128,G__16129,G__16130,G__16131));
});
var G__16443__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16132 = a;
var G__16133 = b;
var G__16134 = c;
var G__16135 = d;
var G__16136 = e;
var G__16137 = f;
var G__16138 = g;
var G__16139 = h;
var G__16140 = i;
var G__16141 = j;
var G__16142 = k;
var G__16143 = l;
var G__16144 = m;
var G__16145 = n;
var G__16146 = o;
var G__16147 = p;
var G__16148 = q;
var G__16149 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__16132,G__16133,G__16134,G__16135,G__16136,G__16137,G__16138,G__16139,G__16140,G__16141,G__16142,G__16143,G__16144,G__16145,G__16146,G__16147,G__16148,G__16149) : self__.afn.call(null,G__16132,G__16133,G__16134,G__16135,G__16136,G__16137,G__16138,G__16139,G__16140,G__16141,G__16142,G__16143,G__16144,G__16145,G__16146,G__16147,G__16148,G__16149));
});
var G__16443__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16150 = a;
var G__16151 = b;
var G__16152 = c;
var G__16153 = d;
var G__16154 = e;
var G__16155 = f;
var G__16156 = g;
var G__16157 = h;
var G__16158 = i;
var G__16159 = j;
var G__16160 = k;
var G__16161 = l;
var G__16162 = m;
var G__16163 = n;
var G__16164 = o;
var G__16165 = p;
var G__16166 = q;
var G__16167 = r;
var G__16168 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__16150,G__16151,G__16152,G__16153,G__16154,G__16155,G__16156,G__16157,G__16158,G__16159,G__16160,G__16161,G__16162,G__16163,G__16164,G__16165,G__16166,G__16167,G__16168) : self__.afn.call(null,G__16150,G__16151,G__16152,G__16153,G__16154,G__16155,G__16156,G__16157,G__16158,G__16159,G__16160,G__16161,G__16162,G__16163,G__16164,G__16165,G__16166,G__16167,G__16168));
});
var G__16443__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16169 = a;
var G__16170 = b;
var G__16171 = c;
var G__16172 = d;
var G__16173 = e;
var G__16174 = f;
var G__16175 = g;
var G__16176 = h;
var G__16177 = i;
var G__16178 = j;
var G__16179 = k;
var G__16180 = l;
var G__16181 = m;
var G__16182 = n;
var G__16183 = o;
var G__16184 = p;
var G__16185 = q;
var G__16186 = r;
var G__16187 = s;
var G__16188 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__16169,G__16170,G__16171,G__16172,G__16173,G__16174,G__16175,G__16176,G__16177,G__16178,G__16179,G__16180,G__16181,G__16182,G__16183,G__16184,G__16185,G__16186,G__16187,G__16188) : self__.afn.call(null,G__16169,G__16170,G__16171,G__16172,G__16173,G__16174,G__16175,G__16176,G__16177,G__16178,G__16179,G__16180,G__16181,G__16182,G__16183,G__16184,G__16185,G__16186,G__16187,G__16188));
});
var G__16443__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__16189 = self__.afn;
var G__16190 = a;
var G__16191 = b;
var G__16192 = c;
var G__16193 = d;
var G__16194 = e;
var G__16195 = f;
var G__16196 = g;
var G__16197 = h;
var G__16198 = i;
var G__16199 = j;
var G__16200 = k;
var G__16201 = l;
var G__16202 = m;
var G__16203 = n;
var G__16204 = o;
var G__16205 = p;
var G__16206 = q;
var G__16207 = r;
var G__16208 = s;
var G__16209 = t;
var G__16210 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16189,G__16190,G__16191,G__16192,G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199,G__16200,G__16201,G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209,G__16210) : cljs.core.apply.call(null,G__16189,G__16190,G__16191,G__16192,G__16193,G__16194,G__16195,G__16196,G__16197,G__16198,G__16199,G__16200,G__16201,G__16202,G__16203,G__16204,G__16205,G__16206,G__16207,G__16208,G__16209,G__16210));
});
G__16443 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__16443__1.call(this,self__);
case 2:
return G__16443__2.call(this,self__,a);
case 3:
return G__16443__3.call(this,self__,a,b);
case 4:
return G__16443__4.call(this,self__,a,b,c);
case 5:
return G__16443__5.call(this,self__,a,b,c,d);
case 6:
return G__16443__6.call(this,self__,a,b,c,d,e);
case 7:
return G__16443__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__16443__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__16443__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__16443__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__16443__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__16443__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__16443__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__16443__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__16443__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__16443__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__16443__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__16443__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__16443__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__16443__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__16443__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__16443__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16443.cljs$core$IFn$_invoke$arity$1 = G__16443__1;
G__16443.cljs$core$IFn$_invoke$arity$2 = G__16443__2;
G__16443.cljs$core$IFn$_invoke$arity$3 = G__16443__3;
G__16443.cljs$core$IFn$_invoke$arity$4 = G__16443__4;
G__16443.cljs$core$IFn$_invoke$arity$5 = G__16443__5;
G__16443.cljs$core$IFn$_invoke$arity$6 = G__16443__6;
G__16443.cljs$core$IFn$_invoke$arity$7 = G__16443__7;
G__16443.cljs$core$IFn$_invoke$arity$8 = G__16443__8;
G__16443.cljs$core$IFn$_invoke$arity$9 = G__16443__9;
G__16443.cljs$core$IFn$_invoke$arity$10 = G__16443__10;
G__16443.cljs$core$IFn$_invoke$arity$11 = G__16443__11;
G__16443.cljs$core$IFn$_invoke$arity$12 = G__16443__12;
G__16443.cljs$core$IFn$_invoke$arity$13 = G__16443__13;
G__16443.cljs$core$IFn$_invoke$arity$14 = G__16443__14;
G__16443.cljs$core$IFn$_invoke$arity$15 = G__16443__15;
G__16443.cljs$core$IFn$_invoke$arity$16 = G__16443__16;
G__16443.cljs$core$IFn$_invoke$arity$17 = G__16443__17;
G__16443.cljs$core$IFn$_invoke$arity$18 = G__16443__18;
G__16443.cljs$core$IFn$_invoke$arity$19 = G__16443__19;
G__16443.cljs$core$IFn$_invoke$arity$20 = G__16443__20;
G__16443.cljs$core$IFn$_invoke$arity$21 = G__16443__21;
G__16443.cljs$core$IFn$_invoke$arity$22 = G__16443__22;
return G__16443;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args15978){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15978)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__16211 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__16211) : self__.afn.call(null,G__16211));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__16212 = a;
var G__16213 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__16212,G__16213) : self__.afn.call(null,G__16212,G__16213));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__16214 = a;
var G__16215 = b;
var G__16216 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__16214,G__16215,G__16216) : self__.afn.call(null,G__16214,G__16215,G__16216));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__16217 = a;
var G__16218 = b;
var G__16219 = c;
var G__16220 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__16217,G__16218,G__16219,G__16220) : self__.afn.call(null,G__16217,G__16218,G__16219,G__16220));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__16221 = a;
var G__16222 = b;
var G__16223 = c;
var G__16224 = d;
var G__16225 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__16221,G__16222,G__16223,G__16224,G__16225) : self__.afn.call(null,G__16221,G__16222,G__16223,G__16224,G__16225));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__16226 = a;
var G__16227 = b;
var G__16228 = c;
var G__16229 = d;
var G__16230 = e;
var G__16231 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__16226,G__16227,G__16228,G__16229,G__16230,G__16231) : self__.afn.call(null,G__16226,G__16227,G__16228,G__16229,G__16230,G__16231));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__16232 = a;
var G__16233 = b;
var G__16234 = c;
var G__16235 = d;
var G__16236 = e;
var G__16237 = f;
var G__16238 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238) : self__.afn.call(null,G__16232,G__16233,G__16234,G__16235,G__16236,G__16237,G__16238));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__16239 = a;
var G__16240 = b;
var G__16241 = c;
var G__16242 = d;
var G__16243 = e;
var G__16244 = f;
var G__16245 = g;
var G__16246 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__16239,G__16240,G__16241,G__16242,G__16243,G__16244,G__16245,G__16246) : self__.afn.call(null,G__16239,G__16240,G__16241,G__16242,G__16243,G__16244,G__16245,G__16246));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__16247 = a;
var G__16248 = b;
var G__16249 = c;
var G__16250 = d;
var G__16251 = e;
var G__16252 = f;
var G__16253 = g;
var G__16254 = h;
var G__16255 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__16247,G__16248,G__16249,G__16250,G__16251,G__16252,G__16253,G__16254,G__16255) : self__.afn.call(null,G__16247,G__16248,G__16249,G__16250,G__16251,G__16252,G__16253,G__16254,G__16255));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__16256 = a;
var G__16257 = b;
var G__16258 = c;
var G__16259 = d;
var G__16260 = e;
var G__16261 = f;
var G__16262 = g;
var G__16263 = h;
var G__16264 = i;
var G__16265 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264,G__16265) : self__.afn.call(null,G__16256,G__16257,G__16258,G__16259,G__16260,G__16261,G__16262,G__16263,G__16264,G__16265));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__16266 = a;
var G__16267 = b;
var G__16268 = c;
var G__16269 = d;
var G__16270 = e;
var G__16271 = f;
var G__16272 = g;
var G__16273 = h;
var G__16274 = i;
var G__16275 = j;
var G__16276 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__16266,G__16267,G__16268,G__16269,G__16270,G__16271,G__16272,G__16273,G__16274,G__16275,G__16276) : self__.afn.call(null,G__16266,G__16267,G__16268,G__16269,G__16270,G__16271,G__16272,G__16273,G__16274,G__16275,G__16276));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__16277 = a;
var G__16278 = b;
var G__16279 = c;
var G__16280 = d;
var G__16281 = e;
var G__16282 = f;
var G__16283 = g;
var G__16284 = h;
var G__16285 = i;
var G__16286 = j;
var G__16287 = k;
var G__16288 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__16277,G__16278,G__16279,G__16280,G__16281,G__16282,G__16283,G__16284,G__16285,G__16286,G__16287,G__16288) : self__.afn.call(null,G__16277,G__16278,G__16279,G__16280,G__16281,G__16282,G__16283,G__16284,G__16285,G__16286,G__16287,G__16288));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__16289 = a;
var G__16290 = b;
var G__16291 = c;
var G__16292 = d;
var G__16293 = e;
var G__16294 = f;
var G__16295 = g;
var G__16296 = h;
var G__16297 = i;
var G__16298 = j;
var G__16299 = k;
var G__16300 = l;
var G__16301 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__16289,G__16290,G__16291,G__16292,G__16293,G__16294,G__16295,G__16296,G__16297,G__16298,G__16299,G__16300,G__16301) : self__.afn.call(null,G__16289,G__16290,G__16291,G__16292,G__16293,G__16294,G__16295,G__16296,G__16297,G__16298,G__16299,G__16300,G__16301));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__16302 = a;
var G__16303 = b;
var G__16304 = c;
var G__16305 = d;
var G__16306 = e;
var G__16307 = f;
var G__16308 = g;
var G__16309 = h;
var G__16310 = i;
var G__16311 = j;
var G__16312 = k;
var G__16313 = l;
var G__16314 = m;
var G__16315 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__16302,G__16303,G__16304,G__16305,G__16306,G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313,G__16314,G__16315) : self__.afn.call(null,G__16302,G__16303,G__16304,G__16305,G__16306,G__16307,G__16308,G__16309,G__16310,G__16311,G__16312,G__16313,G__16314,G__16315));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__16316 = a;
var G__16317 = b;
var G__16318 = c;
var G__16319 = d;
var G__16320 = e;
var G__16321 = f;
var G__16322 = g;
var G__16323 = h;
var G__16324 = i;
var G__16325 = j;
var G__16326 = k;
var G__16327 = l;
var G__16328 = m;
var G__16329 = n;
var G__16330 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__16316,G__16317,G__16318,G__16319,G__16320,G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329,G__16330) : self__.afn.call(null,G__16316,G__16317,G__16318,G__16319,G__16320,G__16321,G__16322,G__16323,G__16324,G__16325,G__16326,G__16327,G__16328,G__16329,G__16330));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__16331 = a;
var G__16332 = b;
var G__16333 = c;
var G__16334 = d;
var G__16335 = e;
var G__16336 = f;
var G__16337 = g;
var G__16338 = h;
var G__16339 = i;
var G__16340 = j;
var G__16341 = k;
var G__16342 = l;
var G__16343 = m;
var G__16344 = n;
var G__16345 = o;
var G__16346 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__16331,G__16332,G__16333,G__16334,G__16335,G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345,G__16346) : self__.afn.call(null,G__16331,G__16332,G__16333,G__16334,G__16335,G__16336,G__16337,G__16338,G__16339,G__16340,G__16341,G__16342,G__16343,G__16344,G__16345,G__16346));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__16347 = a;
var G__16348 = b;
var G__16349 = c;
var G__16350 = d;
var G__16351 = e;
var G__16352 = f;
var G__16353 = g;
var G__16354 = h;
var G__16355 = i;
var G__16356 = j;
var G__16357 = k;
var G__16358 = l;
var G__16359 = m;
var G__16360 = n;
var G__16361 = o;
var G__16362 = p;
var G__16363 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__16347,G__16348,G__16349,G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360,G__16361,G__16362,G__16363) : self__.afn.call(null,G__16347,G__16348,G__16349,G__16350,G__16351,G__16352,G__16353,G__16354,G__16355,G__16356,G__16357,G__16358,G__16359,G__16360,G__16361,G__16362,G__16363));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__16364 = a;
var G__16365 = b;
var G__16366 = c;
var G__16367 = d;
var G__16368 = e;
var G__16369 = f;
var G__16370 = g;
var G__16371 = h;
var G__16372 = i;
var G__16373 = j;
var G__16374 = k;
var G__16375 = l;
var G__16376 = m;
var G__16377 = n;
var G__16378 = o;
var G__16379 = p;
var G__16380 = q;
var G__16381 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__16364,G__16365,G__16366,G__16367,G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381) : self__.afn.call(null,G__16364,G__16365,G__16366,G__16367,G__16368,G__16369,G__16370,G__16371,G__16372,G__16373,G__16374,G__16375,G__16376,G__16377,G__16378,G__16379,G__16380,G__16381));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__16382 = a;
var G__16383 = b;
var G__16384 = c;
var G__16385 = d;
var G__16386 = e;
var G__16387 = f;
var G__16388 = g;
var G__16389 = h;
var G__16390 = i;
var G__16391 = j;
var G__16392 = k;
var G__16393 = l;
var G__16394 = m;
var G__16395 = n;
var G__16396 = o;
var G__16397 = p;
var G__16398 = q;
var G__16399 = r;
var G__16400 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400) : self__.afn.call(null,G__16382,G__16383,G__16384,G__16385,G__16386,G__16387,G__16388,G__16389,G__16390,G__16391,G__16392,G__16393,G__16394,G__16395,G__16396,G__16397,G__16398,G__16399,G__16400));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__16401 = a;
var G__16402 = b;
var G__16403 = c;
var G__16404 = d;
var G__16405 = e;
var G__16406 = f;
var G__16407 = g;
var G__16408 = h;
var G__16409 = i;
var G__16410 = j;
var G__16411 = k;
var G__16412 = l;
var G__16413 = m;
var G__16414 = n;
var G__16415 = o;
var G__16416 = p;
var G__16417 = q;
var G__16418 = r;
var G__16419 = s;
var G__16420 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__16401,G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413,G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420) : self__.afn.call(null,G__16401,G__16402,G__16403,G__16404,G__16405,G__16406,G__16407,G__16408,G__16409,G__16410,G__16411,G__16412,G__16413,G__16414,G__16415,G__16416,G__16417,G__16418,G__16419,G__16420));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__16421 = self__.afn;
var G__16422 = a;
var G__16423 = b;
var G__16424 = c;
var G__16425 = d;
var G__16426 = e;
var G__16427 = f;
var G__16428 = g;
var G__16429 = h;
var G__16430 = i;
var G__16431 = j;
var G__16432 = k;
var G__16433 = l;
var G__16434 = m;
var G__16435 = n;
var G__16436 = o;
var G__16437 = p;
var G__16438 = q;
var G__16439 = r;
var G__16440 = s;
var G__16441 = t;
var G__16442 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16421,G__16422,G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442) : cljs.core.apply.call(null,G__16421,G__16422,G__16423,G__16424,G__16425,G__16426,G__16427,G__16428,G__16429,G__16430,G__16431,G__16432,G__16433,G__16434,G__16435,G__16436,G__16437,G__16438,G__16439,G__16440,G__16441,G__16442));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__16447 = o;
if(G__16447){
var bit__14419__auto__ = (G__16447.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__14419__auto__) || (G__16447.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__16447.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__16447);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__16447);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__13726__auto__ = !((o == null));
if(and__13726__auto__){
var G__16451 = o;
if(G__16451){
var bit__14419__auto__ = (G__16451.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14419__auto__) || (G__16451.cljs$core$IMeta$)){
return true;
} else {
if((!G__16451.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16451);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16451);
}
} else {
return and__13726__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__16454__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__16455 = ret;
var G__16456 = cljs.core.first(ks);
var G__16457 = cljs.core.next(ks);
coll = G__16455;
k = G__16456;
ks = G__16457;
continue;
} else {
return ret;
}
}
break;
}
};
var G__16454 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__16458__i = 0, G__16458__a = new Array(arguments.length -  2);
while (G__16458__i < G__16458__a.length) {G__16458__a[G__16458__i] = arguments[G__16458__i + 2]; ++G__16458__i;}
  ks = new cljs.core.IndexedSeq(G__16458__a,0);
} 
return G__16454__delegate.call(this,coll,k,ks);};
G__16454.cljs$lang$maxFixedArity = 2;
G__16454.cljs$lang$applyTo = (function (arglist__16459){
var coll = cljs.core.first(arglist__16459);
arglist__16459 = cljs.core.next(arglist__16459);
var k = cljs.core.first(arglist__16459);
var ks = cljs.core.rest(arglist__16459);
return G__16454__delegate(coll,k,ks);
});
G__16454.cljs$core$IFn$_invoke$arity$variadic = G__16454__delegate;
return G__16454;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__16460 = null;
if (arguments.length > 2) {
var G__16461__i = 0, G__16461__a = new Array(arguments.length -  2);
while (G__16461__i < G__16461__a.length) {G__16461__a[G__16461__i] = arguments[G__16461__i + 2]; ++G__16461__i;}
G__16460 = new cljs.core.IndexedSeq(G__16461__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__16460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__16463 = x;
if(G__16463){
var bit__14419__auto__ = (G__16463.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__14419__auto__) || (G__16463.cljs$core$ICollection$)){
return true;
} else {
if((!G__16463.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__16463);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__16463);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__16465 = x;
if(G__16465){
var bit__14419__auto__ = (G__16465.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__14419__auto__) || (G__16465.cljs$core$ISet$)){
return true;
} else {
if((!G__16465.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__16465);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__16465);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__16467 = x;
if(G__16467){
var bit__14419__auto__ = (G__16467.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__14419__auto__) || (G__16467.cljs$core$IAssociative$)){
return true;
} else {
if((!G__16467.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__16467);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__16467);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__16469 = x;
if(G__16469){
var bit__14419__auto__ = (G__16469.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__14419__auto__) || (G__16469.cljs$core$ISequential$)){
return true;
} else {
if((!G__16469.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__16469);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__16469);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__16471 = x;
if(G__16471){
var bit__14419__auto__ = (G__16471.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__14419__auto__) || (G__16471.cljs$core$ISorted$)){
return true;
} else {
if((!G__16471.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__16471);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__16471);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__16473 = x;
if(G__16473){
var bit__14419__auto__ = (G__16473.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14419__auto__) || (G__16473.cljs$core$IReduce$)){
return true;
} else {
if((!G__16473.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__16473);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__16473);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__16475 = x;
if(G__16475){
var bit__14419__auto__ = (G__16475.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__14419__auto__) || (G__16475.cljs$core$IMap$)){
return true;
} else {
if((!G__16475.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__16475);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__16475);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__16477 = x;
if(G__16477){
var bit__14419__auto__ = (G__16477.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__14419__auto__) || (G__16477.cljs$core$IVector$)){
return true;
} else {
if((!G__16477.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__16477);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__16477);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__16479 = x;
if(G__16479){
var bit__14412__auto__ = (G__16479.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__14412__auto__) || (G__16479.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj16485 = {};
return obj16485;
});
var js_obj__1 = (function() { 
var G__16488__delegate = function (keyvals){
var G__16486 = goog.object.create;
var G__16487 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__16486,G__16487) : cljs.core.apply.call(null,G__16486,G__16487));
};
var G__16488 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16489__i = 0, G__16489__a = new Array(arguments.length -  0);
while (G__16489__i < G__16489__a.length) {G__16489__a[G__16489__i] = arguments[G__16489__i + 0]; ++G__16489__i;}
  keyvals = new cljs.core.IndexedSeq(G__16489__a,0);
} 
return G__16488__delegate.call(this,keyvals);};
G__16488.cljs$lang$maxFixedArity = 0;
G__16488.cljs$lang$applyTo = (function (arglist__16490){
var keyvals = cljs.core.seq(arglist__16490);
return G__16488__delegate(keyvals);
});
G__16488.cljs$core$IFn$_invoke$arity$variadic = G__16488__delegate;
return G__16488;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__16491 = null;
if (arguments.length > 0) {
var G__16492__i = 0, G__16492__a = new Array(arguments.length -  0);
while (G__16492__i < G__16492__a.length) {G__16492__a[G__16492__i] = arguments[G__16492__i + 0]; ++G__16492__i;}
G__16491 = new cljs.core.IndexedSeq(G__16492__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__16491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__16495_16497 = obj;
var G__16496_16498 = ((function (G__16495_16497,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__16495_16497,keys))
;
goog.object.forEach(G__16495_16497,G__16496_16498);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__16499 = (i__$1 + (1));
var G__16500 = (j__$1 + (1));
var G__16501 = (len__$1 - (1));
i__$1 = G__16499;
j__$1 = G__16500;
len__$1 = G__16501;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__16502 = (i__$1 - (1));
var G__16503 = (j__$1 - (1));
var G__16504 = (len__$1 - (1));
i__$1 = G__16502;
j__$1 = G__16503;
len__$1 = G__16504;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj16506 = {};
return obj16506;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__16508 = s;
if(G__16508){
var bit__14419__auto__ = (G__16508.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14419__auto__) || (G__16508.cljs$core$ISeq$)){
return true;
} else {
if((!G__16508.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__16508);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__16508);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__16510 = s;
if(G__16510){
var bit__14419__auto__ = (G__16510.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__14419__auto__) || (G__16510.cljs$core$ISeqable$)){
return true;
} else {
if((!G__16510.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__16510);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__16510);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__13738__auto__ = cljs.core.fn_QMARK_(f);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var G__16514 = f;
if(G__16514){
var bit__14419__auto__ = (G__16514.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__14419__auto__) || (G__16514.cljs$core$IFn$)){
return true;
} else {
if((!G__16514.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__16514);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__16514);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__16527 = n;
return isNaN(G__16527);
})())) && (!((n === Infinity))) && (((function (){var G__16528 = n;
return parseFloat(G__16528);
})() === (function (){var G__16529 = n;
var G__16530 = (10);
return parseInt(G__16529,G__16530);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__16531__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__16532 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__16533 = etc;
s = G__16532;
xs = G__16533;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__16531 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16534__i = 0, G__16534__a = new Array(arguments.length -  2);
while (G__16534__i < G__16534__a.length) {G__16534__a[G__16534__i] = arguments[G__16534__i + 2]; ++G__16534__i;}
  more = new cljs.core.IndexedSeq(G__16534__a,0);
} 
return G__16531__delegate.call(this,x,y,more);};
G__16531.cljs$lang$maxFixedArity = 2;
G__16531.cljs$lang$applyTo = (function (arglist__16535){
var x = cljs.core.first(arglist__16535);
arglist__16535 = cljs.core.next(arglist__16535);
var y = cljs.core.first(arglist__16535);
var more = cljs.core.rest(arglist__16535);
return G__16531__delegate(x,y,more);
});
G__16531.cljs$core$IFn$_invoke$arity$variadic = G__16531__delegate;
return G__16531;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__16536 = null;
if (arguments.length > 2) {
var G__16537__i = 0, G__16537__a = new Array(arguments.length -  2);
while (G__16537__i < G__16537__a.length) {G__16537__a[G__16537__i] = arguments[G__16537__i + 2]; ++G__16537__i;}
G__16536 = new cljs.core.IndexedSeq(G__16537__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__16541 = x;
if(G__16541){
var bit__14412__auto__ = (G__16541.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__14412__auto__) || (G__16541.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__16542 = x;
var G__16543 = y;
return goog.array.defaultCompare(G__16542,G__16543);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__16548 = xs;
var G__16549 = ys;
var G__16550 = len;
var G__16551 = (n + (1));
xs = G__16548;
ys = G__16549;
len = G__16550;
n = G__16551;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__16556 = x;
var G__16557 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16556,G__16557) : f.call(null,G__16556,G__16557));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__16558 = y;
var G__16559 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16558,G__16559) : f.call(null,G__16558,G__16559));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__16565 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__16565) : cljs.core.to_array.call(null,G__16565));
})();
var G__16566_16568 = a;
var G__16567_16569 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__16566_16568,G__16567_16569);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__16575 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16575) : keyfn.call(null,G__16575));
})(),(function (){var G__16576 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16576) : keyfn.call(null,G__16576));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__16582 = f;
var G__16583 = cljs.core.first(s);
var G__16584 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__16582,G__16583,G__16584) : cljs.core.reduce.call(null,G__16582,G__16583,G__16584));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__16585 = val__$1;
var G__16586 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16585,G__16586) : f.call(null,G__16585,G__16586));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__16587 = nval;
var G__16588 = cljs.core.next(coll__$1);
val__$1 = G__16587;
coll__$1 = G__16588;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__16592 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__16592) : cljs.core.to_array.call(null,G__16592));
})();
var G__16593_16595 = a;
goog.array.shuffle(G__16593_16595);

var G__16594 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__16594) : cljs.core.vec.call(null,G__16594));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__16598 = coll;
if(G__16598){
var bit__14412__auto__ = (G__16598.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14412__auto__) || (G__16598.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__16599 = coll;
if(G__16599){
var bit__14412__auto__ = (G__16599.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14412__auto__) || (G__16599.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__16608 = null;
var G__16608__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__16608__1 = (function (x){
var G__16605 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__16605) : cf.call(null,G__16605));
});
var G__16608__2 = (function (x,y){
var G__16606 = x;
var G__16607 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16606,G__16607) : f.call(null,G__16606,G__16607));
});
G__16608 = function(x,y){
switch(arguments.length){
case 0:
return G__16608__0.call(this);
case 1:
return G__16608__1.call(this,x);
case 2:
return G__16608__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16608.cljs$core$IFn$_invoke$arity$0 = G__16608__0;
G__16608.cljs$core$IFn$_invoke$arity$1 = G__16608__1;
G__16608.cljs$core$IFn$_invoke$arity$2 = G__16608__2;
return G__16608;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__16615 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__16615) : xform.call(null,G__16615));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__16616 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__16616) : f__$1.call(null,G__16616));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__16617__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__16617 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16618__i = 0, G__16618__a = new Array(arguments.length -  2);
while (G__16618__i < G__16618__a.length) {G__16618__a[G__16618__i] = arguments[G__16618__i + 2]; ++G__16618__i;}
  more = new cljs.core.IndexedSeq(G__16618__a,0);
} 
return G__16617__delegate.call(this,x,y,more);};
G__16617.cljs$lang$maxFixedArity = 2;
G__16617.cljs$lang$applyTo = (function (arglist__16619){
var x = cljs.core.first(arglist__16619);
arglist__16619 = cljs.core.next(arglist__16619);
var y = cljs.core.first(arglist__16619);
var more = cljs.core.rest(arglist__16619);
return G__16617__delegate(x,y,more);
});
G__16617.cljs$core$IFn$_invoke$arity$variadic = G__16617__delegate;
return G__16617;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__16620 = null;
if (arguments.length > 2) {
var G__16621__i = 0, G__16621__a = new Array(arguments.length -  2);
while (G__16621__i < G__16621__a.length) {G__16621__a[G__16621__i] = arguments[G__16621__i + 2]; ++G__16621__i;}
G__16620 = new cljs.core.IndexedSeq(G__16621__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__16622__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__16622 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16623__i = 0, G__16623__a = new Array(arguments.length -  2);
while (G__16623__i < G__16623__a.length) {G__16623__a[G__16623__i] = arguments[G__16623__i + 2]; ++G__16623__i;}
  more = new cljs.core.IndexedSeq(G__16623__a,0);
} 
return G__16622__delegate.call(this,x,y,more);};
G__16622.cljs$lang$maxFixedArity = 2;
G__16622.cljs$lang$applyTo = (function (arglist__16624){
var x = cljs.core.first(arglist__16624);
arglist__16624 = cljs.core.next(arglist__16624);
var y = cljs.core.first(arglist__16624);
var more = cljs.core.rest(arglist__16624);
return G__16622__delegate(x,y,more);
});
G__16622.cljs$core$IFn$_invoke$arity$variadic = G__16622__delegate;
return G__16622;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__16625 = null;
if (arguments.length > 2) {
var G__16626__i = 0, G__16626__a = new Array(arguments.length -  2);
while (G__16626__i < G__16626__a.length) {G__16626__a[G__16626__i] = arguments[G__16626__i + 2]; ++G__16626__i;}
G__16625 = new cljs.core.IndexedSeq(G__16626__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16625);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__16627__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__16627 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16628__i = 0, G__16628__a = new Array(arguments.length -  2);
while (G__16628__i < G__16628__a.length) {G__16628__a[G__16628__i] = arguments[G__16628__i + 2]; ++G__16628__i;}
  more = new cljs.core.IndexedSeq(G__16628__a,0);
} 
return G__16627__delegate.call(this,x,y,more);};
G__16627.cljs$lang$maxFixedArity = 2;
G__16627.cljs$lang$applyTo = (function (arglist__16629){
var x = cljs.core.first(arglist__16629);
arglist__16629 = cljs.core.next(arglist__16629);
var y = cljs.core.first(arglist__16629);
var more = cljs.core.rest(arglist__16629);
return G__16627__delegate(x,y,more);
});
G__16627.cljs$core$IFn$_invoke$arity$variadic = G__16627__delegate;
return G__16627;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__16630 = null;
if (arguments.length > 2) {
var G__16631__i = 0, G__16631__a = new Array(arguments.length -  2);
while (G__16631__i < G__16631__a.length) {G__16631__a[G__16631__i] = arguments[G__16631__i + 2]; ++G__16631__i;}
G__16630 = new cljs.core.IndexedSeq(G__16631__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16630);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__16636__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__16636 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16637__i = 0, G__16637__a = new Array(arguments.length -  2);
while (G__16637__i < G__16637__a.length) {G__16637__a[G__16637__i] = arguments[G__16637__i + 2]; ++G__16637__i;}
  more = new cljs.core.IndexedSeq(G__16637__a,0);
} 
return G__16636__delegate.call(this,x,y,more);};
G__16636.cljs$lang$maxFixedArity = 2;
G__16636.cljs$lang$applyTo = (function (arglist__16638){
var x = cljs.core.first(arglist__16638);
arglist__16638 = cljs.core.next(arglist__16638);
var y = cljs.core.first(arglist__16638);
var more = cljs.core.rest(arglist__16638);
return G__16636__delegate(x,y,more);
});
G__16636.cljs$core$IFn$_invoke$arity$variadic = G__16636__delegate;
return G__16636;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__16639 = null;
if (arguments.length > 2) {
var G__16640__i = 0, G__16640__a = new Array(arguments.length -  2);
while (G__16640__i < G__16640__a.length) {G__16640__a[G__16640__i] = arguments[G__16640__i + 2]; ++G__16640__i;}
G__16639 = new cljs.core.IndexedSeq(G__16640__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__16641__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__16642 = y;
var G__16643 = cljs.core.first(more);
var G__16644 = cljs.core.next(more);
x = G__16642;
y = G__16643;
more = G__16644;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16641 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16645__i = 0, G__16645__a = new Array(arguments.length -  2);
while (G__16645__i < G__16645__a.length) {G__16645__a[G__16645__i] = arguments[G__16645__i + 2]; ++G__16645__i;}
  more = new cljs.core.IndexedSeq(G__16645__a,0);
} 
return G__16641__delegate.call(this,x,y,more);};
G__16641.cljs$lang$maxFixedArity = 2;
G__16641.cljs$lang$applyTo = (function (arglist__16646){
var x = cljs.core.first(arglist__16646);
arglist__16646 = cljs.core.next(arglist__16646);
var y = cljs.core.first(arglist__16646);
var more = cljs.core.rest(arglist__16646);
return G__16641__delegate(x,y,more);
});
G__16641.cljs$core$IFn$_invoke$arity$variadic = G__16641__delegate;
return G__16641;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__16647 = null;
if (arguments.length > 2) {
var G__16648__i = 0, G__16648__a = new Array(arguments.length -  2);
while (G__16648__i < G__16648__a.length) {G__16648__a[G__16648__i] = arguments[G__16648__i + 2]; ++G__16648__i;}
G__16647 = new cljs.core.IndexedSeq(G__16648__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16647);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__16649__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__16650 = y;
var G__16651 = cljs.core.first(more);
var G__16652 = cljs.core.next(more);
x = G__16650;
y = G__16651;
more = G__16652;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16649 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16653__i = 0, G__16653__a = new Array(arguments.length -  2);
while (G__16653__i < G__16653__a.length) {G__16653__a[G__16653__i] = arguments[G__16653__i + 2]; ++G__16653__i;}
  more = new cljs.core.IndexedSeq(G__16653__a,0);
} 
return G__16649__delegate.call(this,x,y,more);};
G__16649.cljs$lang$maxFixedArity = 2;
G__16649.cljs$lang$applyTo = (function (arglist__16654){
var x = cljs.core.first(arglist__16654);
arglist__16654 = cljs.core.next(arglist__16654);
var y = cljs.core.first(arglist__16654);
var more = cljs.core.rest(arglist__16654);
return G__16649__delegate(x,y,more);
});
G__16649.cljs$core$IFn$_invoke$arity$variadic = G__16649__delegate;
return G__16649;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__16655 = null;
if (arguments.length > 2) {
var G__16656__i = 0, G__16656__a = new Array(arguments.length -  2);
while (G__16656__i < G__16656__a.length) {G__16656__a[G__16656__i] = arguments[G__16656__i + 2]; ++G__16656__i;}
G__16655 = new cljs.core.IndexedSeq(G__16656__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__16657__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__16658 = y;
var G__16659 = cljs.core.first(more);
var G__16660 = cljs.core.next(more);
x = G__16658;
y = G__16659;
more = G__16660;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16657 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16661__i = 0, G__16661__a = new Array(arguments.length -  2);
while (G__16661__i < G__16661__a.length) {G__16661__a[G__16661__i] = arguments[G__16661__i + 2]; ++G__16661__i;}
  more = new cljs.core.IndexedSeq(G__16661__a,0);
} 
return G__16657__delegate.call(this,x,y,more);};
G__16657.cljs$lang$maxFixedArity = 2;
G__16657.cljs$lang$applyTo = (function (arglist__16662){
var x = cljs.core.first(arglist__16662);
arglist__16662 = cljs.core.next(arglist__16662);
var y = cljs.core.first(arglist__16662);
var more = cljs.core.rest(arglist__16662);
return G__16657__delegate(x,y,more);
});
G__16657.cljs$core$IFn$_invoke$arity$variadic = G__16657__delegate;
return G__16657;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__16663 = null;
if (arguments.length > 2) {
var G__16664__i = 0, G__16664__a = new Array(arguments.length -  2);
while (G__16664__i < G__16664__a.length) {G__16664__a[G__16664__i] = arguments[G__16664__i + 2]; ++G__16664__i;}
G__16663 = new cljs.core.IndexedSeq(G__16664__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__16665__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__16666 = y;
var G__16667 = cljs.core.first(more);
var G__16668 = cljs.core.next(more);
x = G__16666;
y = G__16667;
more = G__16668;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16665 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16669__i = 0, G__16669__a = new Array(arguments.length -  2);
while (G__16669__i < G__16669__a.length) {G__16669__a[G__16669__i] = arguments[G__16669__i + 2]; ++G__16669__i;}
  more = new cljs.core.IndexedSeq(G__16669__a,0);
} 
return G__16665__delegate.call(this,x,y,more);};
G__16665.cljs$lang$maxFixedArity = 2;
G__16665.cljs$lang$applyTo = (function (arglist__16670){
var x = cljs.core.first(arglist__16670);
arglist__16670 = cljs.core.next(arglist__16670);
var y = cljs.core.first(arglist__16670);
var more = cljs.core.rest(arglist__16670);
return G__16665__delegate(x,y,more);
});
G__16665.cljs$core$IFn$_invoke$arity$variadic = G__16665__delegate;
return G__16665;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__16671 = null;
if (arguments.length > 2) {
var G__16672__i = 0, G__16672__a = new Array(arguments.length -  2);
while (G__16672__i < G__16672__a.length) {G__16672__a[G__16672__i] = arguments[G__16672__i + 2]; ++G__16672__i;}
G__16671 = new cljs.core.IndexedSeq(G__16672__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__14055__auto__ = x;
var y__14056__auto__ = y;
return ((x__14055__auto__ > y__14056__auto__) ? x__14055__auto__ : y__14056__auto__);
});
var max__3 = (function() { 
var G__16673__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__14055__auto__ = x;
var y__14056__auto__ = y;
return ((x__14055__auto__ > y__14056__auto__) ? x__14055__auto__ : y__14056__auto__);
})(),more);
};
var G__16673 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16674__i = 0, G__16674__a = new Array(arguments.length -  2);
while (G__16674__i < G__16674__a.length) {G__16674__a[G__16674__i] = arguments[G__16674__i + 2]; ++G__16674__i;}
  more = new cljs.core.IndexedSeq(G__16674__a,0);
} 
return G__16673__delegate.call(this,x,y,more);};
G__16673.cljs$lang$maxFixedArity = 2;
G__16673.cljs$lang$applyTo = (function (arglist__16675){
var x = cljs.core.first(arglist__16675);
arglist__16675 = cljs.core.next(arglist__16675);
var y = cljs.core.first(arglist__16675);
var more = cljs.core.rest(arglist__16675);
return G__16673__delegate(x,y,more);
});
G__16673.cljs$core$IFn$_invoke$arity$variadic = G__16673__delegate;
return G__16673;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__16676 = null;
if (arguments.length > 2) {
var G__16677__i = 0, G__16677__a = new Array(arguments.length -  2);
while (G__16677__i < G__16677__a.length) {G__16677__a[G__16677__i] = arguments[G__16677__i + 2]; ++G__16677__i;}
G__16676 = new cljs.core.IndexedSeq(G__16677__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16676);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__14062__auto__ = x;
var y__14063__auto__ = y;
return ((x__14062__auto__ < y__14063__auto__) ? x__14062__auto__ : y__14063__auto__);
});
var min__3 = (function() { 
var G__16678__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__14062__auto__ = x;
var y__14063__auto__ = y;
return ((x__14062__auto__ < y__14063__auto__) ? x__14062__auto__ : y__14063__auto__);
})(),more);
};
var G__16678 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16679__i = 0, G__16679__a = new Array(arguments.length -  2);
while (G__16679__i < G__16679__a.length) {G__16679__a[G__16679__i] = arguments[G__16679__i + 2]; ++G__16679__i;}
  more = new cljs.core.IndexedSeq(G__16679__a,0);
} 
return G__16678__delegate.call(this,x,y,more);};
G__16678.cljs$lang$maxFixedArity = 2;
G__16678.cljs$lang$applyTo = (function (arglist__16680){
var x = cljs.core.first(arglist__16680);
arglist__16680 = cljs.core.next(arglist__16680);
var y = cljs.core.first(arglist__16680);
var more = cljs.core.rest(arglist__16680);
return G__16678__delegate(x,y,more);
});
G__16678.cljs$core$IFn$_invoke$arity$variadic = G__16678__delegate;
return G__16678;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__16681 = null;
if (arguments.length > 2) {
var G__16682__i = 0, G__16682__a = new Array(arguments.length -  2);
while (G__16682__i < G__16682__a.length) {G__16682__a[G__16682__i] = arguments[G__16682__i + 2]; ++G__16682__i;}
G__16681 = new cljs.core.IndexedSeq(G__16682__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16681);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__16683__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__16683 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16684__i = 0, G__16684__a = new Array(arguments.length -  2);
while (G__16684__i < G__16684__a.length) {G__16684__a[G__16684__i] = arguments[G__16684__i + 2]; ++G__16684__i;}
  more = new cljs.core.IndexedSeq(G__16684__a,0);
} 
return G__16683__delegate.call(this,x,y,more);};
G__16683.cljs$lang$maxFixedArity = 2;
G__16683.cljs$lang$applyTo = (function (arglist__16685){
var x = cljs.core.first(arglist__16685);
arglist__16685 = cljs.core.next(arglist__16685);
var y = cljs.core.first(arglist__16685);
var more = cljs.core.rest(arglist__16685);
return G__16683__delegate(x,y,more);
});
G__16683.cljs$core$IFn$_invoke$arity$variadic = G__16683__delegate;
return G__16683;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__16686 = null;
if (arguments.length > 2) {
var G__16687__i = 0, G__16687__a = new Array(arguments.length -  2);
while (G__16687__i < G__16687__a.length) {G__16687__a[G__16687__i] = arguments[G__16687__i + 2]; ++G__16687__i;}
G__16686 = new cljs.core.IndexedSeq(G__16687__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16686);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__16688__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__16688 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16689__i = 0, G__16689__a = new Array(arguments.length -  2);
while (G__16689__i < G__16689__a.length) {G__16689__a[G__16689__i] = arguments[G__16689__i + 2]; ++G__16689__i;}
  more = new cljs.core.IndexedSeq(G__16689__a,0);
} 
return G__16688__delegate.call(this,x,y,more);};
G__16688.cljs$lang$maxFixedArity = 2;
G__16688.cljs$lang$applyTo = (function (arglist__16690){
var x = cljs.core.first(arglist__16690);
arglist__16690 = cljs.core.next(arglist__16690);
var y = cljs.core.first(arglist__16690);
var more = cljs.core.rest(arglist__16690);
return G__16688__delegate(x,y,more);
});
G__16688.cljs$core$IFn$_invoke$arity$variadic = G__16688__delegate;
return G__16688;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__16691 = null;
if (arguments.length > 2) {
var G__16692__i = 0, G__16692__a = new Array(arguments.length -  2);
while (G__16692__i < G__16692__a.length) {G__16692__a[G__16692__i] = arguments[G__16692__i + 2]; ++G__16692__i;}
G__16691 = new cljs.core.IndexedSeq(G__16692__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__16697__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__16697 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16698__i = 0, G__16698__a = new Array(arguments.length -  2);
while (G__16698__i < G__16698__a.length) {G__16698__a[G__16698__i] = arguments[G__16698__i + 2]; ++G__16698__i;}
  more = new cljs.core.IndexedSeq(G__16698__a,0);
} 
return G__16697__delegate.call(this,x,y,more);};
G__16697.cljs$lang$maxFixedArity = 2;
G__16697.cljs$lang$applyTo = (function (arglist__16699){
var x = cljs.core.first(arglist__16699);
arglist__16699 = cljs.core.next(arglist__16699);
var y = cljs.core.first(arglist__16699);
var more = cljs.core.rest(arglist__16699);
return G__16697__delegate(x,y,more);
});
G__16697.cljs$core$IFn$_invoke$arity$variadic = G__16697__delegate;
return G__16697;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__16700 = null;
if (arguments.length > 2) {
var G__16701__i = 0, G__16701__a = new Array(arguments.length -  2);
while (G__16701__i < G__16701__a.length) {G__16701__a[G__16701__i] = arguments[G__16701__i + 2]; ++G__16701__i;}
G__16700 = new cljs.core.IndexedSeq(G__16701__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16700);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__16702__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__16702 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16703__i = 0, G__16703__a = new Array(arguments.length -  2);
while (G__16703__i < G__16703__a.length) {G__16703__a[G__16703__i] = arguments[G__16703__i + 2]; ++G__16703__i;}
  more = new cljs.core.IndexedSeq(G__16703__a,0);
} 
return G__16702__delegate.call(this,x,y,more);};
G__16702.cljs$lang$maxFixedArity = 2;
G__16702.cljs$lang$applyTo = (function (arglist__16704){
var x = cljs.core.first(arglist__16704);
arglist__16704 = cljs.core.next(arglist__16704);
var y = cljs.core.first(arglist__16704);
var more = cljs.core.rest(arglist__16704);
return G__16702__delegate(x,y,more);
});
G__16702.cljs$core$IFn$_invoke$arity$variadic = G__16702__delegate;
return G__16702;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__16705 = null;
if (arguments.length > 2) {
var G__16706__i = 0, G__16706__a = new Array(arguments.length -  2);
while (G__16706__i < G__16706__a.length) {G__16706__a[G__16706__i] = arguments[G__16706__i + 2]; ++G__16706__i;}
G__16705 = new cljs.core.IndexedSeq(G__16706__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16705);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__16707__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__16707 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16708__i = 0, G__16708__a = new Array(arguments.length -  2);
while (G__16708__i < G__16708__a.length) {G__16708__a[G__16708__i] = arguments[G__16708__i + 2]; ++G__16708__i;}
  more = new cljs.core.IndexedSeq(G__16708__a,0);
} 
return G__16707__delegate.call(this,x,y,more);};
G__16707.cljs$lang$maxFixedArity = 2;
G__16707.cljs$lang$applyTo = (function (arglist__16709){
var x = cljs.core.first(arglist__16709);
arglist__16709 = cljs.core.next(arglist__16709);
var y = cljs.core.first(arglist__16709);
var more = cljs.core.rest(arglist__16709);
return G__16707__delegate(x,y,more);
});
G__16707.cljs$core$IFn$_invoke$arity$variadic = G__16707__delegate;
return G__16707;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__16710 = null;
if (arguments.length > 2) {
var G__16711__i = 0, G__16711__a = new Array(arguments.length -  2);
while (G__16711__i < G__16711__a.length) {G__16711__a[G__16711__i] = arguments[G__16711__i + 2]; ++G__16711__i;}
G__16710 = new cljs.core.IndexedSeq(G__16711__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__16714 = x;
var G__16715 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__16714,G__16715) : cljs.core.mod.call(null,G__16714,G__16715));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__16716__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__16716 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16717__i = 0, G__16717__a = new Array(arguments.length -  2);
while (G__16717__i < G__16717__a.length) {G__16717__a[G__16717__i] = arguments[G__16717__i + 2]; ++G__16717__i;}
  more = new cljs.core.IndexedSeq(G__16717__a,0);
} 
return G__16716__delegate.call(this,x,y,more);};
G__16716.cljs$lang$maxFixedArity = 2;
G__16716.cljs$lang$applyTo = (function (arglist__16718){
var x = cljs.core.first(arglist__16718);
arglist__16718 = cljs.core.next(arglist__16718);
var y = cljs.core.first(arglist__16718);
var more = cljs.core.rest(arglist__16718);
return G__16716__delegate(x,y,more);
});
G__16716.cljs$core$IFn$_invoke$arity$variadic = G__16716__delegate;
return G__16716;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__16719 = null;
if (arguments.length > 2) {
var G__16720__i = 0, G__16720__a = new Array(arguments.length -  2);
while (G__16720__i < G__16720__a.length) {G__16720__a[G__16720__i] = arguments[G__16720__i + 2]; ++G__16720__i;}
G__16719 = new cljs.core.IndexedSeq(G__16720__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__16721__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__16721 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16722__i = 0, G__16722__a = new Array(arguments.length -  2);
while (G__16722__i < G__16722__a.length) {G__16722__a[G__16722__i] = arguments[G__16722__i + 2]; ++G__16722__i;}
  more = new cljs.core.IndexedSeq(G__16722__a,0);
} 
return G__16721__delegate.call(this,x,y,more);};
G__16721.cljs$lang$maxFixedArity = 2;
G__16721.cljs$lang$applyTo = (function (arglist__16723){
var x = cljs.core.first(arglist__16723);
arglist__16723 = cljs.core.next(arglist__16723);
var y = cljs.core.first(arglist__16723);
var more = cljs.core.rest(arglist__16723);
return G__16721__delegate(x,y,more);
});
G__16721.cljs$core$IFn$_invoke$arity$variadic = G__16721__delegate;
return G__16721;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__16724 = null;
if (arguments.length > 2) {
var G__16725__i = 0, G__16725__a = new Array(arguments.length -  2);
while (G__16725__i < G__16725__a.length) {G__16725__a[G__16725__i] = arguments[G__16725__i + 2]; ++G__16725__i;}
G__16724 = new cljs.core.IndexedSeq(G__16725__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__16728 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16728) : Math.floor.call(null,G__16728));
} else {
var G__16729 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16729) : Math.ceil.call(null,G__16729));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__16730__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__16730 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16731__i = 0, G__16731__a = new Array(arguments.length -  2);
while (G__16731__i < G__16731__a.length) {G__16731__a[G__16731__i] = arguments[G__16731__i + 2]; ++G__16731__i;}
  more = new cljs.core.IndexedSeq(G__16731__a,0);
} 
return G__16730__delegate.call(this,x,y,more);};
G__16730.cljs$lang$maxFixedArity = 2;
G__16730.cljs$lang$applyTo = (function (arglist__16732){
var x = cljs.core.first(arglist__16732);
arglist__16732 = cljs.core.next(arglist__16732);
var y = cljs.core.first(arglist__16732);
var more = cljs.core.rest(arglist__16732);
return G__16730__delegate(x,y,more);
});
G__16730.cljs$core$IFn$_invoke$arity$variadic = G__16730__delegate;
return G__16730;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__16733 = null;
if (arguments.length > 2) {
var G__16734__i = 0, G__16734__a = new Array(arguments.length -  2);
while (G__16734__i < G__16734__a.length) {G__16734__a[G__16734__i] = arguments[G__16734__i + 2]; ++G__16734__i;}
G__16733 = new cljs.core.IndexedSeq(G__16734__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__16735__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__16735 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16736__i = 0, G__16736__a = new Array(arguments.length -  2);
while (G__16736__i < G__16736__a.length) {G__16736__a[G__16736__i] = arguments[G__16736__i + 2]; ++G__16736__i;}
  more = new cljs.core.IndexedSeq(G__16736__a,0);
} 
return G__16735__delegate.call(this,x,y,more);};
G__16735.cljs$lang$maxFixedArity = 2;
G__16735.cljs$lang$applyTo = (function (arglist__16737){
var x = cljs.core.first(arglist__16737);
arglist__16737 = cljs.core.next(arglist__16737);
var y = cljs.core.first(arglist__16737);
var more = cljs.core.rest(arglist__16737);
return G__16735__delegate(x,y,more);
});
G__16735.cljs$core$IFn$_invoke$arity$variadic = G__16735__delegate;
return G__16735;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__16738 = null;
if (arguments.length > 2) {
var G__16739__i = 0, G__16739__a = new Array(arguments.length -  2);
while (G__16739__i < G__16739__a.length) {G__16739__a[G__16739__i] = arguments[G__16739__i + 2]; ++G__16739__i;}
G__16738 = new cljs.core.IndexedSeq(G__16739__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__16740__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__16740 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16741__i = 0, G__16741__a = new Array(arguments.length -  2);
while (G__16741__i < G__16741__a.length) {G__16741__a[G__16741__i] = arguments[G__16741__i + 2]; ++G__16741__i;}
  more = new cljs.core.IndexedSeq(G__16741__a,0);
} 
return G__16740__delegate.call(this,x,y,more);};
G__16740.cljs$lang$maxFixedArity = 2;
G__16740.cljs$lang$applyTo = (function (arglist__16742){
var x = cljs.core.first(arglist__16742);
arglist__16742 = cljs.core.next(arglist__16742);
var y = cljs.core.first(arglist__16742);
var more = cljs.core.rest(arglist__16742);
return G__16740__delegate(x,y,more);
});
G__16740.cljs$core$IFn$_invoke$arity$variadic = G__16740__delegate;
return G__16740;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__16743 = null;
if (arguments.length > 2) {
var G__16744__i = 0, G__16744__a = new Array(arguments.length -  2);
while (G__16744__i < G__16744__a.length) {G__16744__a[G__16744__i] = arguments[G__16744__i + 2]; ++G__16744__i;}
G__16743 = new cljs.core.IndexedSeq(G__16744__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__16745__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__16745 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16746__i = 0, G__16746__a = new Array(arguments.length -  2);
while (G__16746__i < G__16746__a.length) {G__16746__a[G__16746__i] = arguments[G__16746__i + 2]; ++G__16746__i;}
  more = new cljs.core.IndexedSeq(G__16746__a,0);
} 
return G__16745__delegate.call(this,x,y,more);};
G__16745.cljs$lang$maxFixedArity = 2;
G__16745.cljs$lang$applyTo = (function (arglist__16747){
var x = cljs.core.first(arglist__16747);
arglist__16747 = cljs.core.next(arglist__16747);
var y = cljs.core.first(arglist__16747);
var more = cljs.core.rest(arglist__16747);
return G__16745__delegate(x,y,more);
});
G__16745.cljs$core$IFn$_invoke$arity$variadic = G__16745__delegate;
return G__16745;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__16748 = null;
if (arguments.length > 2) {
var G__16749__i = 0, G__16749__a = new Array(arguments.length -  2);
while (G__16749__i < G__16749__a.length) {G__16749__a[G__16749__i] = arguments[G__16749__i + 2]; ++G__16749__i;}
G__16748 = new cljs.core.IndexedSeq(G__16749__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__16754__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__16755 = y;
var G__16756 = cljs.core.first(more);
var G__16757 = cljs.core.next(more);
x = G__16755;
y = G__16756;
more = G__16757;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__16754 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__16758__i = 0, G__16758__a = new Array(arguments.length -  2);
while (G__16758__i < G__16758__a.length) {G__16758__a[G__16758__i] = arguments[G__16758__i + 2]; ++G__16758__i;}
  more = new cljs.core.IndexedSeq(G__16758__a,0);
} 
return G__16754__delegate.call(this,x,y,more);};
G__16754.cljs$lang$maxFixedArity = 2;
G__16754.cljs$lang$applyTo = (function (arglist__16759){
var x = cljs.core.first(arglist__16759);
arglist__16759 = cljs.core.next(arglist__16759);
var y = cljs.core.first(arglist__16759);
var more = cljs.core.rest(arglist__16759);
return G__16754__delegate(x,y,more);
});
G__16754.cljs$core$IFn$_invoke$arity$variadic = G__16754__delegate;
return G__16754;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__16760 = null;
if (arguments.length > 2) {
var G__16761__i = 0, G__16761__a = new Array(arguments.length -  2);
while (G__16761__i < G__16761__a.length) {G__16761__a[G__16761__i] = arguments[G__16761__i + 2]; ++G__16761__i;}
G__16760 = new cljs.core.IndexedSeq(G__16761__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__16762 = (n__$1 - (1));
var G__16763 = cljs.core.next(xs);
n__$1 = G__16762;
xs = G__16763;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__16767 = x;
return goog.string.buildString(G__16767);
}
});
var str__2 = (function() { 
var G__16768__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__16769 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__16770 = cljs.core.next(more);
sb = G__16769;
more = G__16770;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__16768 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__16771__i = 0, G__16771__a = new Array(arguments.length -  1);
while (G__16771__i < G__16771__a.length) {G__16771__a[G__16771__i] = arguments[G__16771__i + 1]; ++G__16771__i;}
  ys = new cljs.core.IndexedSeq(G__16771__a,0);
} 
return G__16768__delegate.call(this,x,ys);};
G__16768.cljs$lang$maxFixedArity = 1;
G__16768.cljs$lang$applyTo = (function (arglist__16772){
var x = cljs.core.first(arglist__16772);
var ys = cljs.core.rest(arglist__16772);
return G__16768__delegate(x,ys);
});
G__16768.cljs$core$IFn$_invoke$arity$variadic = G__16768__delegate;
return G__16768;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__16773 = null;
if (arguments.length > 1) {
var G__16774__i = 0, G__16774__a = new Array(arguments.length -  1);
while (G__16774__i < G__16774__a.length) {G__16774__a[G__16774__i] = arguments[G__16774__i + 1]; ++G__16774__i;}
G__16773 = new cljs.core.IndexedSeq(G__16774__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__16775 = cljs.core.next(xs);
var G__16776 = cljs.core.next(ys);
xs = G__16775;
ys = G__16776;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__16777 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__16778 = cljs.core.next(s);
res = G__16777;
s = G__16778;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__16783 = ((h + (cljs.core.hash((function (){var G__16781 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16781) : cljs.core.key.call(null,G__16781));
})()) ^ cljs.core.hash((function (){var G__16782 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16782) : cljs.core.val.call(null,G__16782));
})()))) % (4503599627370496));
var G__16784 = cljs.core.next(s);
h = G__16783;
s = G__16784;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__16785 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__16786 = cljs.core.next(s__$1);
h = G__16785;
s__$1 = G__16786;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__16797_16807 = cljs.core.seq(fn_map);
var chunk__16798_16808 = null;
var count__16799_16809 = (0);
var i__16800_16810 = (0);
while(true){
if((i__16800_16810 < count__16799_16809)){
var vec__16801_16811 = chunk__16798_16808.cljs$core$IIndexed$_nth$arity$2(null,i__16800_16810);
var key_name_16812 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16801_16811,(0),null);
var f_16813 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16801_16811,(1),null);
var str_name_16814 = (function (){var G__16802 = key_name_16812;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__16802) : cljs.core.name.call(null,G__16802));
})();
(obj[str_name_16814] = f_16813);

var G__16815 = seq__16797_16807;
var G__16816 = chunk__16798_16808;
var G__16817 = count__16799_16809;
var G__16818 = (i__16800_16810 + (1));
seq__16797_16807 = G__16815;
chunk__16798_16808 = G__16816;
count__16799_16809 = G__16817;
i__16800_16810 = G__16818;
continue;
} else {
var temp__4126__auto___16819 = cljs.core.seq(seq__16797_16807);
if(temp__4126__auto___16819){
var seq__16797_16820__$1 = temp__4126__auto___16819;
if(cljs.core.chunked_seq_QMARK_(seq__16797_16820__$1)){
var c__14525__auto___16821 = (function (){var G__16803 = seq__16797_16820__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__16803) : cljs.core.chunk_first.call(null,G__16803));
})();
var G__16822 = (function (){var G__16804 = seq__16797_16820__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__16804) : cljs.core.chunk_rest.call(null,G__16804));
})();
var G__16823 = c__14525__auto___16821;
var G__16824 = cljs.core.count(c__14525__auto___16821);
var G__16825 = (0);
seq__16797_16807 = G__16822;
chunk__16798_16808 = G__16823;
count__16799_16809 = G__16824;
i__16800_16810 = G__16825;
continue;
} else {
var vec__16805_16826 = cljs.core.first(seq__16797_16820__$1);
var key_name_16827 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16805_16826,(0),null);
var f_16828 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16805_16826,(1),null);
var str_name_16829 = (function (){var G__16806 = key_name_16827;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__16806) : cljs.core.name.call(null,G__16806));
})();
(obj[str_name_16829] = f_16828);

var G__16830 = cljs.core.next(seq__16797_16820__$1);
var G__16831 = null;
var G__16832 = (0);
var G__16833 = (0);
seq__16797_16807 = G__16830;
chunk__16798_16808 = G__16831;
count__16799_16809 = G__16832;
i__16800_16810 = G__16833;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__16835 = coll;
if(G__16835){
var bit__14419__auto__ = (G__16835.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__14419__auto__) || (G__16835.cljs$core$IReversible$)){
return true;
} else {
if((!G__16835.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__16835);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__16835);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__16836 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__16836;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__16837 = (i - (1));
var G__16838 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__16837;
r = G__16838;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__16839__i = 0, G__16839__a = new Array(arguments.length -  0);
while (G__16839__i < G__16839__a.length) {G__16839__a[G__16839__i] = arguments[G__16839__i + 0]; ++G__16839__i;}
  xs = new cljs.core.IndexedSeq(G__16839__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__16840){
var xs = cljs.core.seq(arglist__16840);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__13738__auto__ = (coll == null);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var G__16844 = coll;
if(G__16844){
var bit__14412__auto__ = (G__16844.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14412__auto__) || (G__16844.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__16846 = x;
if(G__16846){
var bit__14419__auto__ = (G__16846.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__14419__auto__) || (G__16846.cljs$core$IList$)){
return true;
} else {
if((!G__16846.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__16846);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__16846);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13726__auto__ = cljs.core.not(a.ns);
if(and__13726__auto__){
return b.ns;
} else {
return and__13726__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__16853 = a.ns;
var G__16854 = b.ns;
return goog.array.defaultCompare(G__16853,G__16854);
})();
if(((0) === nsc)){
var G__16855 = a.name;
var G__16856 = b.name;
return goog.array.defaultCompare(G__16855,G__16856);
} else {
return nsc;
}
}
} else {
var G__16857 = a.name;
var G__16858 = b.name;
return goog.array.defaultCompare(G__16857,G__16858);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__14159__auto__ = self__._hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__16860 = null;
var G__16860__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__16860__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__16860 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__16860__2.call(this,self__,coll);
case 3:
return G__16860__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16860.cljs$core$IFn$_invoke$arity$2 = G__16860__2;
G__16860.cljs$core$IFn$_invoke$arity$3 = G__16860__3;
return G__16860;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args16859){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16859)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__16862 = x;
if(G__16862){
var bit__14412__auto__ = (G__16862.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__14412__auto__) || (G__16862.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__16864 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__16864) : cljs.core.name.call(null,G__16864));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__16865 = ls.sval();
ls = G__16865;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__16867 = s;
if(G__16867){
var bit__14412__auto__ = (G__16867.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__14412__auto__) || (G__16867.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__16868 = cljs.core.next(s__$1);
s__$1 = G__16868;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_16869 = (0);
var xs_16870 = cljs.core.seq(coll);
while(true){
if(xs_16870){
(ret[i_16869] = cljs.core.to_array(cljs.core.first(xs_16870)));

var G__16871 = (i_16869 + (1));
var G__16872 = cljs.core.next(xs_16870);
i_16869 = G__16871;
xs_16870 = G__16872;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16875 = (i + (1));
var G__16876 = cljs.core.next(s__$1);
i = G__16875;
s__$1 = G__16876;
continue;
} else {
return a;
}
break;
}
} else {
var n__14625__auto___16877 = size;
var i_16878 = (0);
while(true){
if((i_16878 < n__14625__auto___16877)){
(a[i_16878] = init_val_or_seq);

var G__16879 = (i_16878 + (1));
i_16878 = G__16879;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16882 = (i + (1));
var G__16883 = cljs.core.next(s__$1);
i = G__16882;
s__$1 = G__16883;
continue;
} else {
return a;
}
break;
}
} else {
var n__14625__auto___16884 = size;
var i_16885 = (0);
while(true){
if((i_16885 < n__14625__auto___16884)){
(a[i_16885] = init_val_or_seq);

var G__16886 = (i_16885 + (1));
i_16885 = G__16886;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16889 = (i + (1));
var G__16890 = cljs.core.next(s__$1);
i = G__16889;
s__$1 = G__16890;
continue;
} else {
return a;
}
break;
}
} else {
var n__14625__auto___16891 = size;
var i_16892 = (0);
while(true){
if((i_16892 < n__14625__auto___16891)){
(a[i_16892] = init_val_or_seq);

var G__16893 = (i_16892 + (1));
i_16892 = G__16893;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__16896 = (i + (1));
var G__16897 = cljs.core.next(s__$1);
i = G__16896;
s__$1 = G__16897;
continue;
} else {
return a;
}
break;
}
} else {
var n__14625__auto___16898 = size;
var i_16899 = (0);
while(true){
if((i_16899 < n__14625__auto___16898)){
(a[i_16899] = init_val_or_seq);

var G__16900 = (i_16899 + (1));
i_16899 = G__16900;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__16901 = cljs.core.next(s__$1);
var G__16902 = (i - (1));
var G__16903 = (sum + (1));
s__$1 = G__16901;
i = G__16902;
sum = G__16903;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__16923__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__16923 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__16924__i = 0, G__16924__a = new Array(arguments.length -  2);
while (G__16924__i < G__16924__a.length) {G__16924__a[G__16924__i] = arguments[G__16924__i + 2]; ++G__16924__i;}
  zs = new cljs.core.IndexedSeq(G__16924__a,0);
} 
return G__16923__delegate.call(this,x,y,zs);};
G__16923.cljs$lang$maxFixedArity = 2;
G__16923.cljs$lang$applyTo = (function (arglist__16925){
var x = cljs.core.first(arglist__16925);
arglist__16925 = cljs.core.next(arglist__16925);
var y = cljs.core.first(arglist__16925);
var zs = cljs.core.rest(arglist__16925);
return G__16923__delegate(x,y,zs);
});
G__16923.cljs$core$IFn$_invoke$arity$variadic = G__16923__delegate;
return G__16923;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__16926 = null;
if (arguments.length > 2) {
var G__16927__i = 0, G__16927__a = new Array(arguments.length -  2);
while (G__16927__i < G__16927__a.length) {G__16927__a[G__16927__i] = arguments[G__16927__i + 2]; ++G__16927__i;}
G__16926 = new cljs.core.IndexedSeq(G__16927__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__16926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__16928__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__16928 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__16929__i = 0, G__16929__a = new Array(arguments.length -  4);
while (G__16929__i < G__16929__a.length) {G__16929__a[G__16929__i] = arguments[G__16929__i + 4]; ++G__16929__i;}
  more = new cljs.core.IndexedSeq(G__16929__a,0);
} 
return G__16928__delegate.call(this,a,b,c,d,more);};
G__16928.cljs$lang$maxFixedArity = 4;
G__16928.cljs$lang$applyTo = (function (arglist__16930){
var a = cljs.core.first(arglist__16930);
arglist__16930 = cljs.core.next(arglist__16930);
var b = cljs.core.first(arglist__16930);
arglist__16930 = cljs.core.next(arglist__16930);
var c = cljs.core.first(arglist__16930);
arglist__16930 = cljs.core.next(arglist__16930);
var d = cljs.core.first(arglist__16930);
var more = cljs.core.rest(arglist__16930);
return G__16928__delegate(a,b,c,d,more);
});
G__16928.cljs$core$IFn$_invoke$arity$variadic = G__16928__delegate;
return G__16928;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__16931 = null;
if (arguments.length > 4) {
var G__16932__i = 0, G__16932__a = new Array(arguments.length -  4);
while (G__16932__i < G__16932__a.length) {G__16932__a[G__16932__i] = arguments[G__16932__i + 4]; ++G__16932__i;}
G__16931 = new cljs.core.IndexedSeq(G__16932__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__16931);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__16933__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__16934 = ntcoll;
var G__16935 = cljs.core.first(vals);
var G__16936 = cljs.core.next(vals);
tcoll = G__16934;
val = G__16935;
vals = G__16936;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16933 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__16937__i = 0, G__16937__a = new Array(arguments.length -  2);
while (G__16937__i < G__16937__a.length) {G__16937__a[G__16937__i] = arguments[G__16937__i + 2]; ++G__16937__i;}
  vals = new cljs.core.IndexedSeq(G__16937__a,0);
} 
return G__16933__delegate.call(this,tcoll,val,vals);};
G__16933.cljs$lang$maxFixedArity = 2;
G__16933.cljs$lang$applyTo = (function (arglist__16938){
var tcoll = cljs.core.first(arglist__16938);
arglist__16938 = cljs.core.next(arglist__16938);
var val = cljs.core.first(arglist__16938);
var vals = cljs.core.rest(arglist__16938);
return G__16933__delegate(tcoll,val,vals);
});
G__16933.cljs$core$IFn$_invoke$arity$variadic = G__16933__delegate;
return G__16933;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__16939 = null;
if (arguments.length > 2) {
var G__16940__i = 0, G__16940__a = new Array(arguments.length -  2);
while (G__16940__i < G__16940__a.length) {G__16940__a[G__16940__i] = arguments[G__16940__i + 2]; ++G__16940__i;}
G__16939 = new cljs.core.IndexedSeq(G__16940__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__16939);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__16941__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__16942 = ntcoll;
var G__16943 = cljs.core.first(kvs);
var G__16944 = cljs.core.second(kvs);
var G__16945 = cljs.core.nnext(kvs);
tcoll = G__16942;
key = G__16943;
val = G__16944;
kvs = G__16945;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16941 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__16946__i = 0, G__16946__a = new Array(arguments.length -  3);
while (G__16946__i < G__16946__a.length) {G__16946__a[G__16946__i] = arguments[G__16946__i + 3]; ++G__16946__i;}
  kvs = new cljs.core.IndexedSeq(G__16946__a,0);
} 
return G__16941__delegate.call(this,tcoll,key,val,kvs);};
G__16941.cljs$lang$maxFixedArity = 3;
G__16941.cljs$lang$applyTo = (function (arglist__16947){
var tcoll = cljs.core.first(arglist__16947);
arglist__16947 = cljs.core.next(arglist__16947);
var key = cljs.core.first(arglist__16947);
arglist__16947 = cljs.core.next(arglist__16947);
var val = cljs.core.first(arglist__16947);
var kvs = cljs.core.rest(arglist__16947);
return G__16941__delegate(tcoll,key,val,kvs);
});
G__16941.cljs$core$IFn$_invoke$arity$variadic = G__16941__delegate;
return G__16941;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__16948 = null;
if (arguments.length > 3) {
var G__16949__i = 0, G__16949__a = new Array(arguments.length -  3);
while (G__16949__i < G__16949__a.length) {G__16949__a[G__16949__i] = arguments[G__16949__i + 3]; ++G__16949__i;}
G__16948 = new cljs.core.IndexedSeq(G__16949__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__16948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__16950__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__16951 = ntcoll;
var G__16952 = cljs.core.first(ks);
var G__16953 = cljs.core.next(ks);
tcoll = G__16951;
key = G__16952;
ks = G__16953;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16950 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__16954__i = 0, G__16954__a = new Array(arguments.length -  2);
while (G__16954__i < G__16954__a.length) {G__16954__a[G__16954__i] = arguments[G__16954__i + 2]; ++G__16954__i;}
  ks = new cljs.core.IndexedSeq(G__16954__a,0);
} 
return G__16950__delegate.call(this,tcoll,key,ks);};
G__16950.cljs$lang$maxFixedArity = 2;
G__16950.cljs$lang$applyTo = (function (arglist__16955){
var tcoll = cljs.core.first(arglist__16955);
arglist__16955 = cljs.core.next(arglist__16955);
var key = cljs.core.first(arglist__16955);
var ks = cljs.core.rest(arglist__16955);
return G__16950__delegate(tcoll,key,ks);
});
G__16950.cljs$core$IFn$_invoke$arity$variadic = G__16950__delegate;
return G__16950;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__16956 = null;
if (arguments.length > 2) {
var G__16957__i = 0, G__16957__a = new Array(arguments.length -  2);
while (G__16957__i < G__16957__a.length) {G__16957__a[G__16957__i] = arguments[G__16957__i + 2]; ++G__16957__i;}
G__16956 = new cljs.core.IndexedSeq(G__16957__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__16956);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__16958__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__16959 = ntcoll;
var G__16960 = cljs.core.first(vals);
var G__16961 = cljs.core.next(vals);
tcoll = G__16959;
val = G__16960;
vals = G__16961;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__16958 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__16962__i = 0, G__16962__a = new Array(arguments.length -  2);
while (G__16962__i < G__16962__a.length) {G__16962__a[G__16962__i] = arguments[G__16962__i + 2]; ++G__16962__i;}
  vals = new cljs.core.IndexedSeq(G__16962__a,0);
} 
return G__16958__delegate.call(this,tcoll,val,vals);};
G__16958.cljs$lang$maxFixedArity = 2;
G__16958.cljs$lang$applyTo = (function (arglist__16963){
var tcoll = cljs.core.first(arglist__16963);
arglist__16963 = cljs.core.next(arglist__16963);
var val = cljs.core.first(arglist__16963);
var vals = cljs.core.rest(arglist__16963);
return G__16958__delegate(tcoll,val,vals);
});
G__16958.cljs$core$IFn$_invoke$arity$variadic = G__16958__delegate;
return G__16958;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__16964 = null;
if (arguments.length > 2) {
var G__16965__i = 0, G__16965__a = new Array(arguments.length -  2);
while (G__16965__i < G__16965__a.length) {G__16965__a[G__16965__i] = arguments[G__16965__i + 2]; ++G__16965__i;}
G__16964 = new cljs.core.IndexedSeq(G__16965__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__16964);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a14669 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a14669);
} else {
var G__17176 = a14669;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17176) : f.call(null,G__17176));
}
} else {
var b14670 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a14669,b14670);
} else {
var G__17177 = a14669;
var G__17178 = b14670;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17177,G__17178) : f.call(null,G__17177,G__17178));
}
} else {
var c14671 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a14669,b14670,c14671);
} else {
var G__17179 = a14669;
var G__17180 = b14670;
var G__17181 = c14671;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17179,G__17180,G__17181) : f.call(null,G__17179,G__17180,G__17181));
}
} else {
var d14672 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a14669,b14670,c14671,d14672);
} else {
var G__17182 = a14669;
var G__17183 = b14670;
var G__17184 = c14671;
var G__17185 = d14672;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17182,G__17183,G__17184,G__17185) : f.call(null,G__17182,G__17183,G__17184,G__17185));
}
} else {
var e14673 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a14669,b14670,c14671,d14672,e14673);
} else {
var G__17186 = a14669;
var G__17187 = b14670;
var G__17188 = c14671;
var G__17189 = d14672;
var G__17190 = e14673;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17186,G__17187,G__17188,G__17189,G__17190) : f.call(null,G__17186,G__17187,G__17188,G__17189,G__17190));
}
} else {
var f14674 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a14669,b14670,c14671,d14672,e14673,f14674);
} else {
var G__17191 = a14669;
var G__17192 = b14670;
var G__17193 = c14671;
var G__17194 = d14672;
var G__17195 = e14673;
var G__17196 = f14674;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__17191,G__17192,G__17193,G__17194,G__17195,G__17196) : f.call(null,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196));
}
} else {
var g14675 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a14669,b14670,c14671,d14672,e14673,f14674,g14675);
} else {
var G__17197 = a14669;
var G__17198 = b14670;
var G__17199 = c14671;
var G__17200 = d14672;
var G__17201 = e14673;
var G__17202 = f14674;
var G__17203 = g14675;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__17197,G__17198,G__17199,G__17200,G__17201,G__17202,G__17203) : f.call(null,G__17197,G__17198,G__17199,G__17200,G__17201,G__17202,G__17203));
}
} else {
var h14676 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676);
} else {
var G__17204 = a14669;
var G__17205 = b14670;
var G__17206 = c14671;
var G__17207 = d14672;
var G__17208 = e14673;
var G__17209 = f14674;
var G__17210 = g14675;
var G__17211 = h14676;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211) : f.call(null,G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211));
}
} else {
var i14677 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677);
} else {
var G__17212 = a14669;
var G__17213 = b14670;
var G__17214 = c14671;
var G__17215 = d14672;
var G__17216 = e14673;
var G__17217 = f14674;
var G__17218 = g14675;
var G__17219 = h14676;
var G__17220 = i14677;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__17212,G__17213,G__17214,G__17215,G__17216,G__17217,G__17218,G__17219,G__17220) : f.call(null,G__17212,G__17213,G__17214,G__17215,G__17216,G__17217,G__17218,G__17219,G__17220));
}
} else {
var j14678 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678);
} else {
var G__17221 = a14669;
var G__17222 = b14670;
var G__17223 = c14671;
var G__17224 = d14672;
var G__17225 = e14673;
var G__17226 = f14674;
var G__17227 = g14675;
var G__17228 = h14676;
var G__17229 = i14677;
var G__17230 = j14678;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230) : f.call(null,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226,G__17227,G__17228,G__17229,G__17230));
}
} else {
var k14679 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679);
} else {
var G__17231 = a14669;
var G__17232 = b14670;
var G__17233 = c14671;
var G__17234 = d14672;
var G__17235 = e14673;
var G__17236 = f14674;
var G__17237 = g14675;
var G__17238 = h14676;
var G__17239 = i14677;
var G__17240 = j14678;
var G__17241 = k14679;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__17231,G__17232,G__17233,G__17234,G__17235,G__17236,G__17237,G__17238,G__17239,G__17240,G__17241) : f.call(null,G__17231,G__17232,G__17233,G__17234,G__17235,G__17236,G__17237,G__17238,G__17239,G__17240,G__17241));
}
} else {
var l14680 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680);
} else {
var G__17242 = a14669;
var G__17243 = b14670;
var G__17244 = c14671;
var G__17245 = d14672;
var G__17246 = e14673;
var G__17247 = f14674;
var G__17248 = g14675;
var G__17249 = h14676;
var G__17250 = i14677;
var G__17251 = j14678;
var G__17252 = k14679;
var G__17253 = l14680;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253) : f.call(null,G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253));
}
} else {
var m14681 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681);
} else {
var G__17254 = a14669;
var G__17255 = b14670;
var G__17256 = c14671;
var G__17257 = d14672;
var G__17258 = e14673;
var G__17259 = f14674;
var G__17260 = g14675;
var G__17261 = h14676;
var G__17262 = i14677;
var G__17263 = j14678;
var G__17264 = k14679;
var G__17265 = l14680;
var G__17266 = m14681;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__17254,G__17255,G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266) : f.call(null,G__17254,G__17255,G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266));
}
} else {
var n14682 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681,n14682);
} else {
var G__17267 = a14669;
var G__17268 = b14670;
var G__17269 = c14671;
var G__17270 = d14672;
var G__17271 = e14673;
var G__17272 = f14674;
var G__17273 = g14675;
var G__17274 = h14676;
var G__17275 = i14677;
var G__17276 = j14678;
var G__17277 = k14679;
var G__17278 = l14680;
var G__17279 = m14681;
var G__17280 = n14682;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__17267,G__17268,G__17269,G__17270,G__17271,G__17272,G__17273,G__17274,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280) : f.call(null,G__17267,G__17268,G__17269,G__17270,G__17271,G__17272,G__17273,G__17274,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280));
}
} else {
var o14683 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681,n14682,o14683);
} else {
var G__17281 = a14669;
var G__17282 = b14670;
var G__17283 = c14671;
var G__17284 = d14672;
var G__17285 = e14673;
var G__17286 = f14674;
var G__17287 = g14675;
var G__17288 = h14676;
var G__17289 = i14677;
var G__17290 = j14678;
var G__17291 = k14679;
var G__17292 = l14680;
var G__17293 = m14681;
var G__17294 = n14682;
var G__17295 = o14683;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__17281,G__17282,G__17283,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294,G__17295) : f.call(null,G__17281,G__17282,G__17283,G__17284,G__17285,G__17286,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294,G__17295));
}
} else {
var p14684 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681,n14682,o14683,p14684);
} else {
var G__17296 = a14669;
var G__17297 = b14670;
var G__17298 = c14671;
var G__17299 = d14672;
var G__17300 = e14673;
var G__17301 = f14674;
var G__17302 = g14675;
var G__17303 = h14676;
var G__17304 = i14677;
var G__17305 = j14678;
var G__17306 = k14679;
var G__17307 = l14680;
var G__17308 = m14681;
var G__17309 = n14682;
var G__17310 = o14683;
var G__17311 = p14684;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__17296,G__17297,G__17298,G__17299,G__17300,G__17301,G__17302,G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311) : f.call(null,G__17296,G__17297,G__17298,G__17299,G__17300,G__17301,G__17302,G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311));
}
} else {
var q14685 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681,n14682,o14683,p14684,q14685);
} else {
var G__17312 = a14669;
var G__17313 = b14670;
var G__17314 = c14671;
var G__17315 = d14672;
var G__17316 = e14673;
var G__17317 = f14674;
var G__17318 = g14675;
var G__17319 = h14676;
var G__17320 = i14677;
var G__17321 = j14678;
var G__17322 = k14679;
var G__17323 = l14680;
var G__17324 = m14681;
var G__17325 = n14682;
var G__17326 = o14683;
var G__17327 = p14684;
var G__17328 = q14685;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__17312,G__17313,G__17314,G__17315,G__17316,G__17317,G__17318,G__17319,G__17320,G__17321,G__17322,G__17323,G__17324,G__17325,G__17326,G__17327,G__17328) : f.call(null,G__17312,G__17313,G__17314,G__17315,G__17316,G__17317,G__17318,G__17319,G__17320,G__17321,G__17322,G__17323,G__17324,G__17325,G__17326,G__17327,G__17328));
}
} else {
var r14686 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681,n14682,o14683,p14684,q14685,r14686);
} else {
var G__17329 = a14669;
var G__17330 = b14670;
var G__17331 = c14671;
var G__17332 = d14672;
var G__17333 = e14673;
var G__17334 = f14674;
var G__17335 = g14675;
var G__17336 = h14676;
var G__17337 = i14677;
var G__17338 = j14678;
var G__17339 = k14679;
var G__17340 = l14680;
var G__17341 = m14681;
var G__17342 = n14682;
var G__17343 = o14683;
var G__17344 = p14684;
var G__17345 = q14685;
var G__17346 = r14686;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__17329,G__17330,G__17331,G__17332,G__17333,G__17334,G__17335,G__17336,G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343,G__17344,G__17345,G__17346) : f.call(null,G__17329,G__17330,G__17331,G__17332,G__17333,G__17334,G__17335,G__17336,G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343,G__17344,G__17345,G__17346));
}
} else {
var s14687 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681,n14682,o14683,p14684,q14685,r14686,s14687);
} else {
var G__17347 = a14669;
var G__17348 = b14670;
var G__17349 = c14671;
var G__17350 = d14672;
var G__17351 = e14673;
var G__17352 = f14674;
var G__17353 = g14675;
var G__17354 = h14676;
var G__17355 = i14677;
var G__17356 = j14678;
var G__17357 = k14679;
var G__17358 = l14680;
var G__17359 = m14681;
var G__17360 = n14682;
var G__17361 = o14683;
var G__17362 = p14684;
var G__17363 = q14685;
var G__17364 = r14686;
var G__17365 = s14687;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__17347,G__17348,G__17349,G__17350,G__17351,G__17352,G__17353,G__17354,G__17355,G__17356,G__17357,G__17358,G__17359,G__17360,G__17361,G__17362,G__17363,G__17364,G__17365) : f.call(null,G__17347,G__17348,G__17349,G__17350,G__17351,G__17352,G__17353,G__17354,G__17355,G__17356,G__17357,G__17358,G__17359,G__17360,G__17361,G__17362,G__17363,G__17364,G__17365));
}
} else {
var t14688 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a14669,b14670,c14671,d14672,e14673,f14674,g14675,h14676,i14677,j14678,k14679,l14680,m14681,n14682,o14683,p14684,q14685,r14686,s14687,t14688);
} else {
var G__17366 = a14669;
var G__17367 = b14670;
var G__17368 = c14671;
var G__17369 = d14672;
var G__17370 = e14673;
var G__17371 = f14674;
var G__17372 = g14675;
var G__17373 = h14676;
var G__17374 = i14677;
var G__17375 = j14678;
var G__17376 = k14679;
var G__17377 = l14680;
var G__17378 = m14681;
var G__17379 = n14682;
var G__17380 = o14683;
var G__17381 = p14684;
var G__17382 = q14685;
var G__17383 = r14686;
var G__17384 = s14687;
var G__17385 = t14688;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__17366,G__17367,G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375,G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384,G__17385) : f.call(null,G__17366,G__17367,G__17368,G__17369,G__17370,G__17371,G__17372,G__17373,G__17374,G__17375,G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384,G__17385));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__17386__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__17386 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__17387__i = 0, G__17387__a = new Array(arguments.length -  5);
while (G__17387__i < G__17387__a.length) {G__17387__a[G__17387__i] = arguments[G__17387__i + 5]; ++G__17387__i;}
  args = new cljs.core.IndexedSeq(G__17387__a,0);
} 
return G__17386__delegate.call(this,f,a,b,c,d,args);};
G__17386.cljs$lang$maxFixedArity = 5;
G__17386.cljs$lang$applyTo = (function (arglist__17388){
var f = cljs.core.first(arglist__17388);
arglist__17388 = cljs.core.next(arglist__17388);
var a = cljs.core.first(arglist__17388);
arglist__17388 = cljs.core.next(arglist__17388);
var b = cljs.core.first(arglist__17388);
arglist__17388 = cljs.core.next(arglist__17388);
var c = cljs.core.first(arglist__17388);
arglist__17388 = cljs.core.next(arglist__17388);
var d = cljs.core.first(arglist__17388);
var args = cljs.core.rest(arglist__17388);
return G__17386__delegate(f,a,b,c,d,args);
});
G__17386.cljs$core$IFn$_invoke$arity$variadic = G__17386__delegate;
return G__17386;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__17389 = null;
if (arguments.length > 5) {
var G__17390__i = 0, G__17390__a = new Array(arguments.length -  5);
while (G__17390__i < G__17390__a.length) {G__17390__a[G__17390__i] = arguments[G__17390__i + 5]; ++G__17390__i;}
G__17389 = new cljs.core.IndexedSeq(G__17390__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__17389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__17406 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17406) : f.call(null,G__17406));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__17407 = cljs.core.meta(obj);
var G__17408 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17407,G__17408) : f.call(null,G__17407,G__17408));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__17409 = cljs.core.meta(obj);
var G__17410 = a;
var G__17411 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17409,G__17410,G__17411) : f.call(null,G__17409,G__17410,G__17411));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__17412 = cljs.core.meta(obj);
var G__17413 = a;
var G__17414 = b;
var G__17415 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17412,G__17413,G__17414,G__17415) : f.call(null,G__17412,G__17413,G__17414,G__17415));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__17416 = cljs.core.meta(obj);
var G__17417 = a;
var G__17418 = b;
var G__17419 = c;
var G__17420 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17416,G__17417,G__17418,G__17419,G__17420) : f.call(null,G__17416,G__17417,G__17418,G__17419,G__17420));
})());
});
var vary_meta__7 = (function() { 
var G__17421__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__17421 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__17422__i = 0, G__17422__a = new Array(arguments.length -  6);
while (G__17422__i < G__17422__a.length) {G__17422__a[G__17422__i] = arguments[G__17422__i + 6]; ++G__17422__i;}
  args = new cljs.core.IndexedSeq(G__17422__a,0);
} 
return G__17421__delegate.call(this,obj,f,a,b,c,d,args);};
G__17421.cljs$lang$maxFixedArity = 6;
G__17421.cljs$lang$applyTo = (function (arglist__17423){
var obj = cljs.core.first(arglist__17423);
arglist__17423 = cljs.core.next(arglist__17423);
var f = cljs.core.first(arglist__17423);
arglist__17423 = cljs.core.next(arglist__17423);
var a = cljs.core.first(arglist__17423);
arglist__17423 = cljs.core.next(arglist__17423);
var b = cljs.core.first(arglist__17423);
arglist__17423 = cljs.core.next(arglist__17423);
var c = cljs.core.first(arglist__17423);
arglist__17423 = cljs.core.next(arglist__17423);
var d = cljs.core.first(arglist__17423);
var args = cljs.core.rest(arglist__17423);
return G__17421__delegate(obj,f,a,b,c,d,args);
});
G__17421.cljs$core$IFn$_invoke$arity$variadic = G__17421__delegate;
return G__17421;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__17424 = null;
if (arguments.length > 6) {
var G__17425__i = 0, G__17425__a = new Array(arguments.length -  6);
while (G__17425__i < G__17425__a.length) {G__17425__a[G__17425__i] = arguments[G__17425__i + 6]; ++G__17425__i;}
G__17424 = new cljs.core.IndexedSeq(G__17425__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__17424);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__17426__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__17426 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__17427__i = 0, G__17427__a = new Array(arguments.length -  2);
while (G__17427__i < G__17427__a.length) {G__17427__a[G__17427__i] = arguments[G__17427__i + 2]; ++G__17427__i;}
  more = new cljs.core.IndexedSeq(G__17427__a,0);
} 
return G__17426__delegate.call(this,x,y,more);};
G__17426.cljs$lang$maxFixedArity = 2;
G__17426.cljs$lang$applyTo = (function (arglist__17428){
var x = cljs.core.first(arglist__17428);
arglist__17428 = cljs.core.next(arglist__17428);
var y = cljs.core.first(arglist__17428);
var more = cljs.core.rest(arglist__17428);
return G__17426__delegate(x,y,more);
});
G__17426.cljs$core$IFn$_invoke$arity$variadic = G__17426__delegate;
return G__17426;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__17429 = null;
if (arguments.length > 2) {
var G__17430__i = 0, G__17430__a = new Array(arguments.length -  2);
while (G__17430__i < G__17430__a.length) {G__17430__a[G__17430__i] = arguments[G__17430__i + 2]; ++G__17430__i;}
G__17429 = new cljs.core.IndexedSeq(G__17430__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__17429);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t17434 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t17434 = (function (nil_iter,meta17435){
this.nil_iter = nil_iter;
this.meta17435 = meta17435;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t17434.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t17434.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t17434.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t17434.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_17436){
var self__ = this;
var _17436__$1 = this;
return self__.meta17435;
});

cljs.core.t17434.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_17436,meta17435__$1){
var self__ = this;
var _17436__$1 = this;
return (new cljs.core.t17434(self__.nil_iter,meta17435__$1));
});

cljs.core.t17434.cljs$lang$type = true;

cljs.core.t17434.cljs$lang$ctorStr = "cljs.core/t17434";

cljs.core.t17434.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/t17434");
});

cljs.core.__GT_t17434 = (function __GT_t17434(nil_iter__$1,meta17435){
return (new cljs.core.t17434(nil_iter__$1,meta17435));
});

}

return (new cljs.core.t17434(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/spkerkela/Code/clojure/mmh-clojure/resources/public/js/compiled/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13726__auto__ = !((lt.stepper == null));
if(and__13726__auto__){
return self__.iter.hasNext();
} else {
return and__13726__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__17437 = lt;
var G__17438 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__17437,G__17438) : self__.xform.call(null,G__17437,G__17438));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__17439 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__17439) : self__.xform.call(null,G__17439));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__17441 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__17441) : xform.call(null,G__17441));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__17443 = cljs.core.next(iters__$1);
iters__$1 = G__17443;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__14625__auto___17444 = self__.iters.length;
var i_17445 = (0);
while(true){
if((i_17445 < n__14625__auto___17444)){
(self__.nexts[i_17445] = (self__.iters[i_17445]).next());

var G__17446 = (i_17445 + (1));
i_17445 = G__17446;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13726__auto__ = !((lt.stepper == null));
if(and__13726__auto__){
return this$.hasNext();
} else {
return and__13726__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__17442 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__17442) : self__.xform.call(null,G__17442));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__17451 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__17451) : xform.call(null,G__17451));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__17452_17456 = cljs.core.seq(colls);
var chunk__17453_17457 = null;
var count__17454_17458 = (0);
var i__17455_17459 = (0);
while(true){
if((i__17455_17459 < count__17454_17458)){
var coll_17460 = chunk__17453_17457.cljs$core$IIndexed$_nth$arity$2(null,i__17455_17459);
iters.push(cljs.core.iter(coll_17460));

var G__17461 = seq__17452_17456;
var G__17462 = chunk__17453_17457;
var G__17463 = count__17454_17458;
var G__17464 = (i__17455_17459 + (1));
seq__17452_17456 = G__17461;
chunk__17453_17457 = G__17462;
count__17454_17458 = G__17463;
i__17455_17459 = G__17464;
continue;
} else {
var temp__4126__auto___17465 = cljs.core.seq(seq__17452_17456);
if(temp__4126__auto___17465){
var seq__17452_17466__$1 = temp__4126__auto___17465;
if(cljs.core.chunked_seq_QMARK_(seq__17452_17466__$1)){
var c__14525__auto___17467 = cljs.core.chunk_first(seq__17452_17466__$1);
var G__17468 = cljs.core.chunk_rest(seq__17452_17466__$1);
var G__17469 = c__14525__auto___17467;
var G__17470 = cljs.core.count(c__14525__auto___17467);
var G__17471 = (0);
seq__17452_17456 = G__17468;
chunk__17453_17457 = G__17469;
count__17454_17458 = G__17470;
i__17455_17459 = G__17471;
continue;
} else {
var coll_17472 = cljs.core.first(seq__17452_17466__$1);
iters.push(cljs.core.iter(coll_17472));

var G__17473 = cljs.core.next(seq__17452_17466__$1);
var G__17474 = null;
var G__17475 = (0);
var G__17476 = (0);
seq__17452_17456 = G__17473;
chunk__17453_17457 = G__17474;
count__17454_17458 = G__17475;
i__17455_17459 = G__17476;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__13738__auto__ = cljs.core.seq(coll);
if(or__13738__auto__){
return or__13738__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__17477__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__17477 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__17478__i = 0, G__17478__a = new Array(arguments.length -  2);
while (G__17478__i < G__17478__a.length) {G__17478__a[G__17478__i] = arguments[G__17478__i + 2]; ++G__17478__i;}
  colls = new cljs.core.IndexedSeq(G__17478__a,0);
} 
return G__17477__delegate.call(this,xform,coll,colls);};
G__17477.cljs$lang$maxFixedArity = 2;
G__17477.cljs$lang$applyTo = (function (arglist__17479){
var xform = cljs.core.first(arglist__17479);
arglist__17479 = cljs.core.next(arglist__17479);
var coll = cljs.core.first(arglist__17479);
var colls = cljs.core.rest(arglist__17479);
return G__17477__delegate(xform,coll,colls);
});
G__17477.cljs$core$IFn$_invoke$arity$variadic = G__17477__delegate;
return G__17477;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__17480 = null;
if (arguments.length > 2) {
var G__17481__i = 0, G__17481__a = new Array(arguments.length -  2);
while (G__17481__i < G__17481__a.length) {G__17481__a[G__17481__i] = arguments[G__17481__i + 2]; ++G__17481__i;}
G__17480 = new cljs.core.IndexedSeq(G__17481__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__17480);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__17483 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17483) : pred.call(null,G__17483));
})())){
var G__17484 = pred;
var G__17485 = cljs.core.next(coll);
pred = G__17484;
coll = G__17485;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__13738__auto__ = (function (){var G__17489 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17489) : pred.call(null,G__17489));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var G__17490 = pred;
var G__17491 = cljs.core.next(coll);
pred = G__17490;
coll = G__17491;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__17498 = null;
var G__17498__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__17498__1 = (function (x){
return cljs.core.not((function (){var G__17495 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17495) : f.call(null,G__17495));
})());
});
var G__17498__2 = (function (x,y){
return cljs.core.not((function (){var G__17496 = x;
var G__17497 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17496,G__17497) : f.call(null,G__17496,G__17497));
})());
});
var G__17498__3 = (function() { 
var G__17499__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__17499 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__17500__i = 0, G__17500__a = new Array(arguments.length -  2);
while (G__17500__i < G__17500__a.length) {G__17500__a[G__17500__i] = arguments[G__17500__i + 2]; ++G__17500__i;}
  zs = new cljs.core.IndexedSeq(G__17500__a,0);
} 
return G__17499__delegate.call(this,x,y,zs);};
G__17499.cljs$lang$maxFixedArity = 2;
G__17499.cljs$lang$applyTo = (function (arglist__17501){
var x = cljs.core.first(arglist__17501);
arglist__17501 = cljs.core.next(arglist__17501);
var y = cljs.core.first(arglist__17501);
var zs = cljs.core.rest(arglist__17501);
return G__17499__delegate(x,y,zs);
});
G__17499.cljs$core$IFn$_invoke$arity$variadic = G__17499__delegate;
return G__17499;
})()
;
G__17498 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__17498__0.call(this);
case 1:
return G__17498__1.call(this,x);
case 2:
return G__17498__2.call(this,x,y);
default:
var G__17502 = null;
if (arguments.length > 2) {
var G__17503__i = 0, G__17503__a = new Array(arguments.length -  2);
while (G__17503__i < G__17503__a.length) {G__17503__a[G__17503__i] = arguments[G__17503__i + 2]; ++G__17503__i;}
G__17502 = new cljs.core.IndexedSeq(G__17503__a,0);
}
return G__17498__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__17502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17498.cljs$lang$maxFixedArity = 2;
G__17498.cljs$lang$applyTo = G__17498__3.cljs$lang$applyTo;
G__17498.cljs$core$IFn$_invoke$arity$0 = G__17498__0;
G__17498.cljs$core$IFn$_invoke$arity$1 = G__17498__1;
G__17498.cljs$core$IFn$_invoke$arity$2 = G__17498__2;
G__17498.cljs$core$IFn$_invoke$arity$variadic = G__17498__3.cljs$core$IFn$_invoke$arity$variadic;
return G__17498;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__17504__delegate = function (args){
return x;
};
var G__17504 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17505__i = 0, G__17505__a = new Array(arguments.length -  0);
while (G__17505__i < G__17505__a.length) {G__17505__a[G__17505__i] = arguments[G__17505__i + 0]; ++G__17505__i;}
  args = new cljs.core.IndexedSeq(G__17505__a,0);
} 
return G__17504__delegate.call(this,args);};
G__17504.cljs$lang$maxFixedArity = 0;
G__17504.cljs$lang$applyTo = (function (arglist__17506){
var args = cljs.core.seq(arglist__17506);
return G__17504__delegate(args);
});
G__17504.cljs$core$IFn$_invoke$arity$variadic = G__17504__delegate;
return G__17504;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__17561 = null;
var G__17561__0 = (function (){
var G__17534 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17534) : f.call(null,G__17534));
});
var G__17561__1 = (function (x){
var G__17535 = (function (){var G__17536 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17536) : g.call(null,G__17536));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17535) : f.call(null,G__17535));
});
var G__17561__2 = (function (x,y){
var G__17537 = (function (){var G__17538 = x;
var G__17539 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17538,G__17539) : g.call(null,G__17538,G__17539));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17537) : f.call(null,G__17537));
});
var G__17561__3 = (function (x,y,z){
var G__17540 = (function (){var G__17541 = x;
var G__17542 = y;
var G__17543 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17541,G__17542,G__17543) : g.call(null,G__17541,G__17542,G__17543));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17540) : f.call(null,G__17540));
});
var G__17561__4 = (function() { 
var G__17562__delegate = function (x,y,z,args){
var G__17544 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17544) : f.call(null,G__17544));
};
var G__17562 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17563__i = 0, G__17563__a = new Array(arguments.length -  3);
while (G__17563__i < G__17563__a.length) {G__17563__a[G__17563__i] = arguments[G__17563__i + 3]; ++G__17563__i;}
  args = new cljs.core.IndexedSeq(G__17563__a,0);
} 
return G__17562__delegate.call(this,x,y,z,args);};
G__17562.cljs$lang$maxFixedArity = 3;
G__17562.cljs$lang$applyTo = (function (arglist__17564){
var x = cljs.core.first(arglist__17564);
arglist__17564 = cljs.core.next(arglist__17564);
var y = cljs.core.first(arglist__17564);
arglist__17564 = cljs.core.next(arglist__17564);
var z = cljs.core.first(arglist__17564);
var args = cljs.core.rest(arglist__17564);
return G__17562__delegate(x,y,z,args);
});
G__17562.cljs$core$IFn$_invoke$arity$variadic = G__17562__delegate;
return G__17562;
})()
;
G__17561 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17561__0.call(this);
case 1:
return G__17561__1.call(this,x);
case 2:
return G__17561__2.call(this,x,y);
case 3:
return G__17561__3.call(this,x,y,z);
default:
var G__17565 = null;
if (arguments.length > 3) {
var G__17566__i = 0, G__17566__a = new Array(arguments.length -  3);
while (G__17566__i < G__17566__a.length) {G__17566__a[G__17566__i] = arguments[G__17566__i + 3]; ++G__17566__i;}
G__17565 = new cljs.core.IndexedSeq(G__17566__a,0);
}
return G__17561__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17565);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17561.cljs$lang$maxFixedArity = 3;
G__17561.cljs$lang$applyTo = G__17561__4.cljs$lang$applyTo;
G__17561.cljs$core$IFn$_invoke$arity$0 = G__17561__0;
G__17561.cljs$core$IFn$_invoke$arity$1 = G__17561__1;
G__17561.cljs$core$IFn$_invoke$arity$2 = G__17561__2;
G__17561.cljs$core$IFn$_invoke$arity$3 = G__17561__3;
G__17561.cljs$core$IFn$_invoke$arity$variadic = G__17561__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17561;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__17567 = null;
var G__17567__0 = (function (){
var G__17545 = (function (){var G__17546 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17546) : g.call(null,G__17546));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17545) : f.call(null,G__17545));
});
var G__17567__1 = (function (x){
var G__17547 = (function (){var G__17548 = (function (){var G__17549 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__17549) : h.call(null,G__17549));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17548) : g.call(null,G__17548));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17547) : f.call(null,G__17547));
});
var G__17567__2 = (function (x,y){
var G__17550 = (function (){var G__17551 = (function (){var G__17552 = x;
var G__17553 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__17552,G__17553) : h.call(null,G__17552,G__17553));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17551) : g.call(null,G__17551));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17550) : f.call(null,G__17550));
});
var G__17567__3 = (function (x,y,z){
var G__17554 = (function (){var G__17555 = (function (){var G__17556 = x;
var G__17557 = y;
var G__17558 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__17556,G__17557,G__17558) : h.call(null,G__17556,G__17557,G__17558));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17555) : g.call(null,G__17555));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17554) : f.call(null,G__17554));
});
var G__17567__4 = (function() { 
var G__17568__delegate = function (x,y,z,args){
var G__17559 = (function (){var G__17560 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17560) : g.call(null,G__17560));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17559) : f.call(null,G__17559));
};
var G__17568 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17569__i = 0, G__17569__a = new Array(arguments.length -  3);
while (G__17569__i < G__17569__a.length) {G__17569__a[G__17569__i] = arguments[G__17569__i + 3]; ++G__17569__i;}
  args = new cljs.core.IndexedSeq(G__17569__a,0);
} 
return G__17568__delegate.call(this,x,y,z,args);};
G__17568.cljs$lang$maxFixedArity = 3;
G__17568.cljs$lang$applyTo = (function (arglist__17570){
var x = cljs.core.first(arglist__17570);
arglist__17570 = cljs.core.next(arglist__17570);
var y = cljs.core.first(arglist__17570);
arglist__17570 = cljs.core.next(arglist__17570);
var z = cljs.core.first(arglist__17570);
var args = cljs.core.rest(arglist__17570);
return G__17568__delegate(x,y,z,args);
});
G__17568.cljs$core$IFn$_invoke$arity$variadic = G__17568__delegate;
return G__17568;
})()
;
G__17567 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17567__0.call(this);
case 1:
return G__17567__1.call(this,x);
case 2:
return G__17567__2.call(this,x,y);
case 3:
return G__17567__3.call(this,x,y,z);
default:
var G__17571 = null;
if (arguments.length > 3) {
var G__17572__i = 0, G__17572__a = new Array(arguments.length -  3);
while (G__17572__i < G__17572__a.length) {G__17572__a[G__17572__i] = arguments[G__17572__i + 3]; ++G__17572__i;}
G__17571 = new cljs.core.IndexedSeq(G__17572__a,0);
}
return G__17567__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17567.cljs$lang$maxFixedArity = 3;
G__17567.cljs$lang$applyTo = G__17567__4.cljs$lang$applyTo;
G__17567.cljs$core$IFn$_invoke$arity$0 = G__17567__0;
G__17567.cljs$core$IFn$_invoke$arity$1 = G__17567__1;
G__17567.cljs$core$IFn$_invoke$arity$2 = G__17567__2;
G__17567.cljs$core$IFn$_invoke$arity$3 = G__17567__3;
G__17567.cljs$core$IFn$_invoke$arity$variadic = G__17567__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17567;
})()
});
var comp__4 = (function() { 
var G__17573__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__17574__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__17575 = cljs.core.first(fs__$2).call(null,ret);
var G__17576 = cljs.core.next(fs__$2);
ret = G__17575;
fs__$2 = G__17576;
continue;
} else {
return ret;
}
break;
}
};
var G__17574 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17577__i = 0, G__17577__a = new Array(arguments.length -  0);
while (G__17577__i < G__17577__a.length) {G__17577__a[G__17577__i] = arguments[G__17577__i + 0]; ++G__17577__i;}
  args = new cljs.core.IndexedSeq(G__17577__a,0);
} 
return G__17574__delegate.call(this,args);};
G__17574.cljs$lang$maxFixedArity = 0;
G__17574.cljs$lang$applyTo = (function (arglist__17578){
var args = cljs.core.seq(arglist__17578);
return G__17574__delegate(args);
});
G__17574.cljs$core$IFn$_invoke$arity$variadic = G__17574__delegate;
return G__17574;
})()
;
;})(fs__$1))
};
var G__17573 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__17579__i = 0, G__17579__a = new Array(arguments.length -  3);
while (G__17579__i < G__17579__a.length) {G__17579__a[G__17579__i] = arguments[G__17579__i + 3]; ++G__17579__i;}
  fs = new cljs.core.IndexedSeq(G__17579__a,0);
} 
return G__17573__delegate.call(this,f1,f2,f3,fs);};
G__17573.cljs$lang$maxFixedArity = 3;
G__17573.cljs$lang$applyTo = (function (arglist__17580){
var f1 = cljs.core.first(arglist__17580);
arglist__17580 = cljs.core.next(arglist__17580);
var f2 = cljs.core.first(arglist__17580);
arglist__17580 = cljs.core.next(arglist__17580);
var f3 = cljs.core.first(arglist__17580);
var fs = cljs.core.rest(arglist__17580);
return G__17573__delegate(f1,f2,f3,fs);
});
G__17573.cljs$core$IFn$_invoke$arity$variadic = G__17573__delegate;
return G__17573;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__17581 = null;
if (arguments.length > 3) {
var G__17582__i = 0, G__17582__a = new Array(arguments.length -  3);
while (G__17582__i < G__17582__a.length) {G__17582__a[G__17582__i] = arguments[G__17582__i + 3]; ++G__17582__i;}
G__17581 = new cljs.core.IndexedSeq(G__17582__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__17581);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__17667 = null;
var G__17667__0 = (function (){
var G__17625 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17625) : f.call(null,G__17625));
});
var G__17667__1 = (function (x){
var G__17626 = arg1;
var G__17627 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17626,G__17627) : f.call(null,G__17626,G__17627));
});
var G__17667__2 = (function (x,y){
var G__17628 = arg1;
var G__17629 = x;
var G__17630 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17628,G__17629,G__17630) : f.call(null,G__17628,G__17629,G__17630));
});
var G__17667__3 = (function (x,y,z){
var G__17631 = arg1;
var G__17632 = x;
var G__17633 = y;
var G__17634 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17631,G__17632,G__17633,G__17634) : f.call(null,G__17631,G__17632,G__17633,G__17634));
});
var G__17667__4 = (function() { 
var G__17668__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__17668 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17669__i = 0, G__17669__a = new Array(arguments.length -  3);
while (G__17669__i < G__17669__a.length) {G__17669__a[G__17669__i] = arguments[G__17669__i + 3]; ++G__17669__i;}
  args = new cljs.core.IndexedSeq(G__17669__a,0);
} 
return G__17668__delegate.call(this,x,y,z,args);};
G__17668.cljs$lang$maxFixedArity = 3;
G__17668.cljs$lang$applyTo = (function (arglist__17670){
var x = cljs.core.first(arglist__17670);
arglist__17670 = cljs.core.next(arglist__17670);
var y = cljs.core.first(arglist__17670);
arglist__17670 = cljs.core.next(arglist__17670);
var z = cljs.core.first(arglist__17670);
var args = cljs.core.rest(arglist__17670);
return G__17668__delegate(x,y,z,args);
});
G__17668.cljs$core$IFn$_invoke$arity$variadic = G__17668__delegate;
return G__17668;
})()
;
G__17667 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17667__0.call(this);
case 1:
return G__17667__1.call(this,x);
case 2:
return G__17667__2.call(this,x,y);
case 3:
return G__17667__3.call(this,x,y,z);
default:
var G__17671 = null;
if (arguments.length > 3) {
var G__17672__i = 0, G__17672__a = new Array(arguments.length -  3);
while (G__17672__i < G__17672__a.length) {G__17672__a[G__17672__i] = arguments[G__17672__i + 3]; ++G__17672__i;}
G__17671 = new cljs.core.IndexedSeq(G__17672__a,0);
}
return G__17667__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17667.cljs$lang$maxFixedArity = 3;
G__17667.cljs$lang$applyTo = G__17667__4.cljs$lang$applyTo;
G__17667.cljs$core$IFn$_invoke$arity$0 = G__17667__0;
G__17667.cljs$core$IFn$_invoke$arity$1 = G__17667__1;
G__17667.cljs$core$IFn$_invoke$arity$2 = G__17667__2;
G__17667.cljs$core$IFn$_invoke$arity$3 = G__17667__3;
G__17667.cljs$core$IFn$_invoke$arity$variadic = G__17667__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17667;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__17673 = null;
var G__17673__0 = (function (){
var G__17635 = arg1;
var G__17636 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17635,G__17636) : f.call(null,G__17635,G__17636));
});
var G__17673__1 = (function (x){
var G__17637 = arg1;
var G__17638 = arg2;
var G__17639 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17637,G__17638,G__17639) : f.call(null,G__17637,G__17638,G__17639));
});
var G__17673__2 = (function (x,y){
var G__17640 = arg1;
var G__17641 = arg2;
var G__17642 = x;
var G__17643 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17640,G__17641,G__17642,G__17643) : f.call(null,G__17640,G__17641,G__17642,G__17643));
});
var G__17673__3 = (function (x,y,z){
var G__17644 = arg1;
var G__17645 = arg2;
var G__17646 = x;
var G__17647 = y;
var G__17648 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17644,G__17645,G__17646,G__17647,G__17648) : f.call(null,G__17644,G__17645,G__17646,G__17647,G__17648));
});
var G__17673__4 = (function() { 
var G__17674__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__17674 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17675__i = 0, G__17675__a = new Array(arguments.length -  3);
while (G__17675__i < G__17675__a.length) {G__17675__a[G__17675__i] = arguments[G__17675__i + 3]; ++G__17675__i;}
  args = new cljs.core.IndexedSeq(G__17675__a,0);
} 
return G__17674__delegate.call(this,x,y,z,args);};
G__17674.cljs$lang$maxFixedArity = 3;
G__17674.cljs$lang$applyTo = (function (arglist__17676){
var x = cljs.core.first(arglist__17676);
arglist__17676 = cljs.core.next(arglist__17676);
var y = cljs.core.first(arglist__17676);
arglist__17676 = cljs.core.next(arglist__17676);
var z = cljs.core.first(arglist__17676);
var args = cljs.core.rest(arglist__17676);
return G__17674__delegate(x,y,z,args);
});
G__17674.cljs$core$IFn$_invoke$arity$variadic = G__17674__delegate;
return G__17674;
})()
;
G__17673 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17673__0.call(this);
case 1:
return G__17673__1.call(this,x);
case 2:
return G__17673__2.call(this,x,y);
case 3:
return G__17673__3.call(this,x,y,z);
default:
var G__17677 = null;
if (arguments.length > 3) {
var G__17678__i = 0, G__17678__a = new Array(arguments.length -  3);
while (G__17678__i < G__17678__a.length) {G__17678__a[G__17678__i] = arguments[G__17678__i + 3]; ++G__17678__i;}
G__17677 = new cljs.core.IndexedSeq(G__17678__a,0);
}
return G__17673__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17677);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17673.cljs$lang$maxFixedArity = 3;
G__17673.cljs$lang$applyTo = G__17673__4.cljs$lang$applyTo;
G__17673.cljs$core$IFn$_invoke$arity$0 = G__17673__0;
G__17673.cljs$core$IFn$_invoke$arity$1 = G__17673__1;
G__17673.cljs$core$IFn$_invoke$arity$2 = G__17673__2;
G__17673.cljs$core$IFn$_invoke$arity$3 = G__17673__3;
G__17673.cljs$core$IFn$_invoke$arity$variadic = G__17673__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17673;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__17679 = null;
var G__17679__0 = (function (){
var G__17649 = arg1;
var G__17650 = arg2;
var G__17651 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17649,G__17650,G__17651) : f.call(null,G__17649,G__17650,G__17651));
});
var G__17679__1 = (function (x){
var G__17652 = arg1;
var G__17653 = arg2;
var G__17654 = arg3;
var G__17655 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17652,G__17653,G__17654,G__17655) : f.call(null,G__17652,G__17653,G__17654,G__17655));
});
var G__17679__2 = (function (x,y){
var G__17656 = arg1;
var G__17657 = arg2;
var G__17658 = arg3;
var G__17659 = x;
var G__17660 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17656,G__17657,G__17658,G__17659,G__17660) : f.call(null,G__17656,G__17657,G__17658,G__17659,G__17660));
});
var G__17679__3 = (function (x,y,z){
var G__17661 = arg1;
var G__17662 = arg2;
var G__17663 = arg3;
var G__17664 = x;
var G__17665 = y;
var G__17666 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__17661,G__17662,G__17663,G__17664,G__17665,G__17666) : f.call(null,G__17661,G__17662,G__17663,G__17664,G__17665,G__17666));
});
var G__17679__4 = (function() { 
var G__17680__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__17680 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17681__i = 0, G__17681__a = new Array(arguments.length -  3);
while (G__17681__i < G__17681__a.length) {G__17681__a[G__17681__i] = arguments[G__17681__i + 3]; ++G__17681__i;}
  args = new cljs.core.IndexedSeq(G__17681__a,0);
} 
return G__17680__delegate.call(this,x,y,z,args);};
G__17680.cljs$lang$maxFixedArity = 3;
G__17680.cljs$lang$applyTo = (function (arglist__17682){
var x = cljs.core.first(arglist__17682);
arglist__17682 = cljs.core.next(arglist__17682);
var y = cljs.core.first(arglist__17682);
arglist__17682 = cljs.core.next(arglist__17682);
var z = cljs.core.first(arglist__17682);
var args = cljs.core.rest(arglist__17682);
return G__17680__delegate(x,y,z,args);
});
G__17680.cljs$core$IFn$_invoke$arity$variadic = G__17680__delegate;
return G__17680;
})()
;
G__17679 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17679__0.call(this);
case 1:
return G__17679__1.call(this,x);
case 2:
return G__17679__2.call(this,x,y);
case 3:
return G__17679__3.call(this,x,y,z);
default:
var G__17683 = null;
if (arguments.length > 3) {
var G__17684__i = 0, G__17684__a = new Array(arguments.length -  3);
while (G__17684__i < G__17684__a.length) {G__17684__a[G__17684__i] = arguments[G__17684__i + 3]; ++G__17684__i;}
G__17683 = new cljs.core.IndexedSeq(G__17684__a,0);
}
return G__17679__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17679.cljs$lang$maxFixedArity = 3;
G__17679.cljs$lang$applyTo = G__17679__4.cljs$lang$applyTo;
G__17679.cljs$core$IFn$_invoke$arity$0 = G__17679__0;
G__17679.cljs$core$IFn$_invoke$arity$1 = G__17679__1;
G__17679.cljs$core$IFn$_invoke$arity$2 = G__17679__2;
G__17679.cljs$core$IFn$_invoke$arity$3 = G__17679__3;
G__17679.cljs$core$IFn$_invoke$arity$variadic = G__17679__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17679;
})()
});
var partial__5 = (function() { 
var G__17685__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__17686__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__17686 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17687__i = 0, G__17687__a = new Array(arguments.length -  0);
while (G__17687__i < G__17687__a.length) {G__17687__a[G__17687__i] = arguments[G__17687__i + 0]; ++G__17687__i;}
  args = new cljs.core.IndexedSeq(G__17687__a,0);
} 
return G__17686__delegate.call(this,args);};
G__17686.cljs$lang$maxFixedArity = 0;
G__17686.cljs$lang$applyTo = (function (arglist__17688){
var args = cljs.core.seq(arglist__17688);
return G__17686__delegate(args);
});
G__17686.cljs$core$IFn$_invoke$arity$variadic = G__17686__delegate;
return G__17686;
})()
;
};
var G__17685 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__17689__i = 0, G__17689__a = new Array(arguments.length -  4);
while (G__17689__i < G__17689__a.length) {G__17689__a[G__17689__i] = arguments[G__17689__i + 4]; ++G__17689__i;}
  more = new cljs.core.IndexedSeq(G__17689__a,0);
} 
return G__17685__delegate.call(this,f,arg1,arg2,arg3,more);};
G__17685.cljs$lang$maxFixedArity = 4;
G__17685.cljs$lang$applyTo = (function (arglist__17690){
var f = cljs.core.first(arglist__17690);
arglist__17690 = cljs.core.next(arglist__17690);
var arg1 = cljs.core.first(arglist__17690);
arglist__17690 = cljs.core.next(arglist__17690);
var arg2 = cljs.core.first(arglist__17690);
arglist__17690 = cljs.core.next(arglist__17690);
var arg3 = cljs.core.first(arglist__17690);
var more = cljs.core.rest(arglist__17690);
return G__17685__delegate(f,arg1,arg2,arg3,more);
});
G__17685.cljs$core$IFn$_invoke$arity$variadic = G__17685__delegate;
return G__17685;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__17691 = null;
if (arguments.length > 4) {
var G__17692__i = 0, G__17692__a = new Array(arguments.length -  4);
while (G__17692__i < G__17692__a.length) {G__17692__a[G__17692__i] = arguments[G__17692__i + 4]; ++G__17692__i;}
G__17691 = new cljs.core.IndexedSeq(G__17692__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__17691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__17725 = null;
var G__17725__1 = (function (a){
var G__17709 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17709) : f.call(null,G__17709));
});
var G__17725__2 = (function (a,b){
var G__17710 = (((a == null))?x:a);
var G__17711 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17710,G__17711) : f.call(null,G__17710,G__17711));
});
var G__17725__3 = (function (a,b,c){
var G__17712 = (((a == null))?x:a);
var G__17713 = b;
var G__17714 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17712,G__17713,G__17714) : f.call(null,G__17712,G__17713,G__17714));
});
var G__17725__4 = (function() { 
var G__17726__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__17726 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__17727__i = 0, G__17727__a = new Array(arguments.length -  3);
while (G__17727__i < G__17727__a.length) {G__17727__a[G__17727__i] = arguments[G__17727__i + 3]; ++G__17727__i;}
  ds = new cljs.core.IndexedSeq(G__17727__a,0);
} 
return G__17726__delegate.call(this,a,b,c,ds);};
G__17726.cljs$lang$maxFixedArity = 3;
G__17726.cljs$lang$applyTo = (function (arglist__17728){
var a = cljs.core.first(arglist__17728);
arglist__17728 = cljs.core.next(arglist__17728);
var b = cljs.core.first(arglist__17728);
arglist__17728 = cljs.core.next(arglist__17728);
var c = cljs.core.first(arglist__17728);
var ds = cljs.core.rest(arglist__17728);
return G__17726__delegate(a,b,c,ds);
});
G__17726.cljs$core$IFn$_invoke$arity$variadic = G__17726__delegate;
return G__17726;
})()
;
G__17725 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__17725__1.call(this,a);
case 2:
return G__17725__2.call(this,a,b);
case 3:
return G__17725__3.call(this,a,b,c);
default:
var G__17729 = null;
if (arguments.length > 3) {
var G__17730__i = 0, G__17730__a = new Array(arguments.length -  3);
while (G__17730__i < G__17730__a.length) {G__17730__a[G__17730__i] = arguments[G__17730__i + 3]; ++G__17730__i;}
G__17729 = new cljs.core.IndexedSeq(G__17730__a,0);
}
return G__17725__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__17729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17725.cljs$lang$maxFixedArity = 3;
G__17725.cljs$lang$applyTo = G__17725__4.cljs$lang$applyTo;
G__17725.cljs$core$IFn$_invoke$arity$1 = G__17725__1;
G__17725.cljs$core$IFn$_invoke$arity$2 = G__17725__2;
G__17725.cljs$core$IFn$_invoke$arity$3 = G__17725__3;
G__17725.cljs$core$IFn$_invoke$arity$variadic = G__17725__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17725;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__17731 = null;
var G__17731__2 = (function (a,b){
var G__17715 = (((a == null))?x:a);
var G__17716 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17715,G__17716) : f.call(null,G__17715,G__17716));
});
var G__17731__3 = (function (a,b,c){
var G__17717 = (((a == null))?x:a);
var G__17718 = (((b == null))?y:b);
var G__17719 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17717,G__17718,G__17719) : f.call(null,G__17717,G__17718,G__17719));
});
var G__17731__4 = (function() { 
var G__17732__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__17732 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__17733__i = 0, G__17733__a = new Array(arguments.length -  3);
while (G__17733__i < G__17733__a.length) {G__17733__a[G__17733__i] = arguments[G__17733__i + 3]; ++G__17733__i;}
  ds = new cljs.core.IndexedSeq(G__17733__a,0);
} 
return G__17732__delegate.call(this,a,b,c,ds);};
G__17732.cljs$lang$maxFixedArity = 3;
G__17732.cljs$lang$applyTo = (function (arglist__17734){
var a = cljs.core.first(arglist__17734);
arglist__17734 = cljs.core.next(arglist__17734);
var b = cljs.core.first(arglist__17734);
arglist__17734 = cljs.core.next(arglist__17734);
var c = cljs.core.first(arglist__17734);
var ds = cljs.core.rest(arglist__17734);
return G__17732__delegate(a,b,c,ds);
});
G__17732.cljs$core$IFn$_invoke$arity$variadic = G__17732__delegate;
return G__17732;
})()
;
G__17731 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__17731__2.call(this,a,b);
case 3:
return G__17731__3.call(this,a,b,c);
default:
var G__17735 = null;
if (arguments.length > 3) {
var G__17736__i = 0, G__17736__a = new Array(arguments.length -  3);
while (G__17736__i < G__17736__a.length) {G__17736__a[G__17736__i] = arguments[G__17736__i + 3]; ++G__17736__i;}
G__17735 = new cljs.core.IndexedSeq(G__17736__a,0);
}
return G__17731__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__17735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17731.cljs$lang$maxFixedArity = 3;
G__17731.cljs$lang$applyTo = G__17731__4.cljs$lang$applyTo;
G__17731.cljs$core$IFn$_invoke$arity$2 = G__17731__2;
G__17731.cljs$core$IFn$_invoke$arity$3 = G__17731__3;
G__17731.cljs$core$IFn$_invoke$arity$variadic = G__17731__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17731;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__17737 = null;
var G__17737__2 = (function (a,b){
var G__17720 = (((a == null))?x:a);
var G__17721 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17720,G__17721) : f.call(null,G__17720,G__17721));
});
var G__17737__3 = (function (a,b,c){
var G__17722 = (((a == null))?x:a);
var G__17723 = (((b == null))?y:b);
var G__17724 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17722,G__17723,G__17724) : f.call(null,G__17722,G__17723,G__17724));
});
var G__17737__4 = (function() { 
var G__17738__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__17738 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__17739__i = 0, G__17739__a = new Array(arguments.length -  3);
while (G__17739__i < G__17739__a.length) {G__17739__a[G__17739__i] = arguments[G__17739__i + 3]; ++G__17739__i;}
  ds = new cljs.core.IndexedSeq(G__17739__a,0);
} 
return G__17738__delegate.call(this,a,b,c,ds);};
G__17738.cljs$lang$maxFixedArity = 3;
G__17738.cljs$lang$applyTo = (function (arglist__17740){
var a = cljs.core.first(arglist__17740);
arglist__17740 = cljs.core.next(arglist__17740);
var b = cljs.core.first(arglist__17740);
arglist__17740 = cljs.core.next(arglist__17740);
var c = cljs.core.first(arglist__17740);
var ds = cljs.core.rest(arglist__17740);
return G__17738__delegate(a,b,c,ds);
});
G__17738.cljs$core$IFn$_invoke$arity$variadic = G__17738__delegate;
return G__17738;
})()
;
G__17737 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__17737__2.call(this,a,b);
case 3:
return G__17737__3.call(this,a,b,c);
default:
var G__17741 = null;
if (arguments.length > 3) {
var G__17742__i = 0, G__17742__a = new Array(arguments.length -  3);
while (G__17742__i < G__17742__a.length) {G__17742__a[G__17742__i] = arguments[G__17742__i + 3]; ++G__17742__i;}
G__17741 = new cljs.core.IndexedSeq(G__17742__a,0);
}
return G__17737__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__17741);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17737.cljs$lang$maxFixedArity = 3;
G__17737.cljs$lang$applyTo = G__17737__4.cljs$lang$applyTo;
G__17737.cljs$core$IFn$_invoke$arity$2 = G__17737__2;
G__17737.cljs$core$IFn$_invoke$arity$3 = G__17737__3;
G__17737.cljs$core$IFn$_invoke$arity$variadic = G__17737__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17737;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__17773 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__17773) : cljs.core.volatile_BANG_.call(null,G__17773));
})();
return ((function (i){
return (function() {
var G__17803 = null;
var G__17803__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17803__1 = (function (result){
var G__17774 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17774) : rf.call(null,G__17774));
});
var G__17803__2 = (function (result,input){
var G__17775 = result;
var G__17776 = (function (){var G__17777 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__17778 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17777,G__17778) : f.call(null,G__17777,G__17778));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17775,G__17776) : rf.call(null,G__17775,G__17776));
});
G__17803 = function(result,input){
switch(arguments.length){
case 0:
return G__17803__0.call(this);
case 1:
return G__17803__1.call(this,result);
case 2:
return G__17803__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17803.cljs$core$IFn$_invoke$arity$0 = G__17803__0;
G__17803.cljs$core$IFn$_invoke$arity$1 = G__17803__1;
G__17803.cljs$core$IFn$_invoke$arity$2 = G__17803__2;
return G__17803;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14625__auto___17804 = size;
var i_17805 = (0);
while(true){
if((i_17805 < n__14625__auto___17804)){
cljs.core.chunk_append(b,(function (){var G__17799 = (idx + i_17805);
var G__17800 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_17805);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17799,G__17800) : f.call(null,G__17799,G__17800));
})());

var G__17806 = (i_17805 + (1));
i_17805 = G__17806;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__17801 = idx;
var G__17802 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17801,G__17802) : f.call(null,G__17801,G__17802));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__17825 = null;
var G__17825__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17825__1 = (function (result){
var G__17819 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17819) : rf.call(null,G__17819));
});
var G__17825__2 = (function (result,input){
var v = (function (){var G__17820 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17820) : f.call(null,G__17820));
})();
if((v == null)){
return result;
} else {
var G__17821 = result;
var G__17822 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17821,G__17822) : rf.call(null,G__17821,G__17822));
}
});
G__17825 = function(result,input){
switch(arguments.length){
case 0:
return G__17825__0.call(this);
case 1:
return G__17825__1.call(this,result);
case 2:
return G__17825__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17825.cljs$core$IFn$_invoke$arity$0 = G__17825__0;
G__17825.cljs$core$IFn$_invoke$arity$1 = G__17825__1;
G__17825.cljs$core$IFn$_invoke$arity$2 = G__17825__2;
return G__17825;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14625__auto___17826 = size;
var i_17827 = (0);
while(true){
if((i_17827 < n__14625__auto___17826)){
var x_17828 = (function (){var G__17823 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_17827);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17823) : f.call(null,G__17823));
})();
if((x_17828 == null)){
} else {
cljs.core.chunk_append(b,x_17828);
}

var G__17829 = (i_17827 + (1));
i_17827 = G__17829;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__17824 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17824) : f.call(null,G__17824));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17830 = this$__$1;
return goog.getUid(G__17830);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__17831 = cljs.core.seq(self__.watches);
var chunk__17832 = null;
var count__17833 = (0);
var i__17834 = (0);
while(true){
if((i__17834 < count__17833)){
var vec__17835 = chunk__17832.cljs$core$IIndexed$_nth$arity$2(null,i__17834);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17835,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17835,(1),null);
var G__17836_17845 = key;
var G__17837_17846 = this$__$1;
var G__17838_17847 = oldval;
var G__17839_17848 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17836_17845,G__17837_17846,G__17838_17847,G__17839_17848) : f.call(null,G__17836_17845,G__17837_17846,G__17838_17847,G__17839_17848));

var G__17849 = seq__17831;
var G__17850 = chunk__17832;
var G__17851 = count__17833;
var G__17852 = (i__17834 + (1));
seq__17831 = G__17849;
chunk__17832 = G__17850;
count__17833 = G__17851;
i__17834 = G__17852;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17831);
if(temp__4126__auto__){
var seq__17831__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17831__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__17831__$1);
var G__17853 = cljs.core.chunk_rest(seq__17831__$1);
var G__17854 = c__14525__auto__;
var G__17855 = cljs.core.count(c__14525__auto__);
var G__17856 = (0);
seq__17831 = G__17853;
chunk__17832 = G__17854;
count__17833 = G__17855;
i__17834 = G__17856;
continue;
} else {
var vec__17840 = cljs.core.first(seq__17831__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17840,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17840,(1),null);
var G__17841_17857 = key;
var G__17842_17858 = this$__$1;
var G__17843_17859 = oldval;
var G__17844_17860 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17841_17857,G__17842_17858,G__17843_17859,G__17844_17860) : f.call(null,G__17841_17857,G__17842_17858,G__17843_17859,G__17844_17860));

var G__17861 = cljs.core.next(seq__17831__$1);
var G__17862 = null;
var G__17863 = (0);
var G__17864 = (0);
seq__17831 = G__17861;
chunk__17832 = G__17862;
count__17833 = G__17863;
i__17834 = G__17864;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__17868__delegate = function (x,p__17865){
var map__17867 = p__17865;
var map__17867__$1 = ((cljs.core.seq_QMARK_(map__17867))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__17867):map__17867);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17867__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17867__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__17868 = function (x,var_args){
var p__17865 = null;
if (arguments.length > 1) {
var G__17869__i = 0, G__17869__a = new Array(arguments.length -  1);
while (G__17869__i < G__17869__a.length) {G__17869__a[G__17869__i] = arguments[G__17869__i + 1]; ++G__17869__i;}
  p__17865 = new cljs.core.IndexedSeq(G__17869__a,0);
} 
return G__17868__delegate.call(this,x,p__17865);};
G__17868.cljs$lang$maxFixedArity = 1;
G__17868.cljs$lang$applyTo = (function (arglist__17870){
var x = cljs.core.first(arglist__17870);
var p__17865 = cljs.core.rest(arglist__17870);
return G__17868__delegate(x,p__17865);
});
G__17868.cljs$core$IFn$_invoke$arity$variadic = G__17868__delegate;
return G__17868;
})()
;
atom = function(x,var_args){
var p__17865 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__17871 = null;
if (arguments.length > 1) {
var G__17872__i = 0, G__17872__a = new Array(arguments.length -  1);
while (G__17872__i < G__17872__a.length) {G__17872__a[G__17872__i] = arguments[G__17872__i + 1]; ++G__17872__i;}
G__17871 = new cljs.core.IndexedSeq(G__17872__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17871);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__17875 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__17875) : validate.call(null,G__17875));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__17876 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__17876) : cljs.core.pr_str.call(null,G__17876));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__17883 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17883) : f.call(null,G__17883));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__17884 = a.state;
var G__17885 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17884,G__17885) : f.call(null,G__17884,G__17885));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__17886 = a.state;
var G__17887 = x;
var G__17888 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17886,G__17887,G__17888) : f.call(null,G__17886,G__17887,G__17888));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__17889__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__17889 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__17890__i = 0, G__17890__a = new Array(arguments.length -  4);
while (G__17890__i < G__17890__a.length) {G__17890__a[G__17890__i] = arguments[G__17890__i + 4]; ++G__17890__i;}
  more = new cljs.core.IndexedSeq(G__17890__a,0);
} 
return G__17889__delegate.call(this,a,f,x,y,more);};
G__17889.cljs$lang$maxFixedArity = 4;
G__17889.cljs$lang$applyTo = (function (arglist__17891){
var a = cljs.core.first(arglist__17891);
arglist__17891 = cljs.core.next(arglist__17891);
var f = cljs.core.first(arglist__17891);
arglist__17891 = cljs.core.next(arglist__17891);
var x = cljs.core.first(arglist__17891);
arglist__17891 = cljs.core.next(arglist__17891);
var y = cljs.core.first(arglist__17891);
var more = cljs.core.rest(arglist__17891);
return G__17889__delegate(a,f,x,y,more);
});
G__17889.cljs$core$IFn$_invoke$arity$variadic = G__17889__delegate;
return G__17889;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__17892 = null;
if (arguments.length > 4) {
var G__17893__i = 0, G__17893__a = new Array(arguments.length -  4);
while (G__17893__i < G__17893__a.length) {G__17893__a[G__17893__i] = arguments[G__17893__i + 4]; ++G__17893__i;}
G__17892 = new cljs.core.IndexedSeq(G__17893__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__17892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__17960 = null;
var G__17960__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17960__1 = (function (result){
var G__17927 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17927) : rf.call(null,G__17927));
});
var G__17960__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__17928 = i;
var G__17929 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17928,G__17929) : f.call(null,G__17928,G__17929));
})();
if((v == null)){
return result;
} else {
var G__17930 = result;
var G__17931 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17930,G__17931) : rf.call(null,G__17930,G__17931));
}
});
G__17960 = function(result,input){
switch(arguments.length){
case 0:
return G__17960__0.call(this);
case 1:
return G__17960__1.call(this,result);
case 2:
return G__17960__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17960.cljs$core$IFn$_invoke$arity$0 = G__17960__0;
G__17960.cljs$core$IFn$_invoke$arity$1 = G__17960__1;
G__17960.cljs$core$IFn$_invoke$arity$2 = G__17960__2;
return G__17960;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14625__auto___17961 = size;
var i_17962 = (0);
while(true){
if((i_17962 < n__14625__auto___17961)){
var x_17963 = (function (){var G__17956 = (idx + i_17962);
var G__17957 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_17962);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17956,G__17957) : f.call(null,G__17956,G__17957));
})();
if((x_17963 == null)){
} else {
cljs.core.chunk_append(b,x_17963);
}

var G__17964 = (i_17962 + (1));
i_17962 = G__17964;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__17958 = idx;
var G__17959 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17958,G__17959) : f.call(null,G__17958,G__17959));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__18178 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18178) : p.call(null,G__18178));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18180 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18180) : p.call(null,G__18180));
})();
if(cljs.core.truth_(and__13726__auto__)){
var G__18181 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18181) : p.call(null,G__18181));
} else {
return and__13726__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18183 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18183) : p.call(null,G__18183));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18185 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18185) : p.call(null,G__18185));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var G__18186 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18186) : p.call(null,G__18186));
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__18355__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__18355 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18356__i = 0, G__18356__a = new Array(arguments.length -  3);
while (G__18356__i < G__18356__a.length) {G__18356__a[G__18356__i] = arguments[G__18356__i + 3]; ++G__18356__i;}
  args = new cljs.core.IndexedSeq(G__18356__a,0);
} 
return G__18355__delegate.call(this,x,y,z,args);};
G__18355.cljs$lang$maxFixedArity = 3;
G__18355.cljs$lang$applyTo = (function (arglist__18357){
var x = cljs.core.first(arglist__18357);
arglist__18357 = cljs.core.next(arglist__18357);
var y = cljs.core.first(arglist__18357);
arglist__18357 = cljs.core.next(arglist__18357);
var z = cljs.core.first(arglist__18357);
var args = cljs.core.rest(arglist__18357);
return G__18355__delegate(x,y,z,args);
});
G__18355.cljs$core$IFn$_invoke$arity$variadic = G__18355__delegate;
return G__18355;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__18358 = null;
if (arguments.length > 3) {
var G__18359__i = 0, G__18359__a = new Array(arguments.length -  3);
while (G__18359__i < G__18359__a.length) {G__18359__a[G__18359__i] = arguments[G__18359__i + 3]; ++G__18359__i;}
G__18358 = new cljs.core.IndexedSeq(G__18359__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18218 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18218) : p1.call(null,G__18218));
})();
if(cljs.core.truth_(and__13726__auto__)){
var G__18219 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18219) : p2.call(null,G__18219));
} else {
return and__13726__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18221 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18221) : p1.call(null,G__18221));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18223 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18223) : p1.call(null,G__18223));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var and__13726__auto____$2 = (function (){var G__18225 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18225) : p2.call(null,G__18225));
})();
if(cljs.core.truth_(and__13726__auto____$2)){
var G__18226 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18226) : p2.call(null,G__18226));
} else {
return and__13726__auto____$2;
}
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18228 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18228) : p1.call(null,G__18228));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18230 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18230) : p1.call(null,G__18230));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var and__13726__auto____$2 = (function (){var G__18232 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18232) : p1.call(null,G__18232));
})();
if(cljs.core.truth_(and__13726__auto____$2)){
var and__13726__auto____$3 = (function (){var G__18234 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18234) : p2.call(null,G__18234));
})();
if(cljs.core.truth_(and__13726__auto____$3)){
var and__13726__auto____$4 = (function (){var G__18236 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18236) : p2.call(null,G__18236));
})();
if(cljs.core.truth_(and__13726__auto____$4)){
var G__18237 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18237) : p2.call(null,G__18237));
} else {
return and__13726__auto____$4;
}
} else {
return and__13726__auto____$3;
}
} else {
return and__13726__auto____$2;
}
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__18360__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__17965_SHARP_){
var and__13726__auto__ = (function (){var G__18242 = p1__17965_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18242) : p1.call(null,G__18242));
})();
if(cljs.core.truth_(and__13726__auto__)){
var G__18243 = p1__17965_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18243) : p2.call(null,G__18243));
} else {
return and__13726__auto__;
}
}),args)));
};
var G__18360 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18361__i = 0, G__18361__a = new Array(arguments.length -  3);
while (G__18361__i < G__18361__a.length) {G__18361__a[G__18361__i] = arguments[G__18361__i + 3]; ++G__18361__i;}
  args = new cljs.core.IndexedSeq(G__18361__a,0);
} 
return G__18360__delegate.call(this,x,y,z,args);};
G__18360.cljs$lang$maxFixedArity = 3;
G__18360.cljs$lang$applyTo = (function (arglist__18362){
var x = cljs.core.first(arglist__18362);
arglist__18362 = cljs.core.next(arglist__18362);
var y = cljs.core.first(arglist__18362);
arglist__18362 = cljs.core.next(arglist__18362);
var z = cljs.core.first(arglist__18362);
var args = cljs.core.rest(arglist__18362);
return G__18360__delegate(x,y,z,args);
});
G__18360.cljs$core$IFn$_invoke$arity$variadic = G__18360__delegate;
return G__18360;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__18363 = null;
if (arguments.length > 3) {
var G__18364__i = 0, G__18364__a = new Array(arguments.length -  3);
while (G__18364__i < G__18364__a.length) {G__18364__a[G__18364__i] = arguments[G__18364__i + 3]; ++G__18364__i;}
G__18363 = new cljs.core.IndexedSeq(G__18364__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18289 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18289) : p1.call(null,G__18289));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18291 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18291) : p2.call(null,G__18291));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var G__18292 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18292) : p3.call(null,G__18292));
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18294 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18294) : p1.call(null,G__18294));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18296 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18296) : p2.call(null,G__18296));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var and__13726__auto____$2 = (function (){var G__18298 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18298) : p3.call(null,G__18298));
})();
if(cljs.core.truth_(and__13726__auto____$2)){
var and__13726__auto____$3 = (function (){var G__18300 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18300) : p1.call(null,G__18300));
})();
if(cljs.core.truth_(and__13726__auto____$3)){
var and__13726__auto____$4 = (function (){var G__18302 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18302) : p2.call(null,G__18302));
})();
if(cljs.core.truth_(and__13726__auto____$4)){
var G__18303 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18303) : p3.call(null,G__18303));
} else {
return and__13726__auto____$4;
}
} else {
return and__13726__auto____$3;
}
} else {
return and__13726__auto____$2;
}
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13726__auto__ = (function (){var G__18305 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18305) : p1.call(null,G__18305));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18307 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18307) : p2.call(null,G__18307));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var and__13726__auto____$2 = (function (){var G__18309 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18309) : p3.call(null,G__18309));
})();
if(cljs.core.truth_(and__13726__auto____$2)){
var and__13726__auto____$3 = (function (){var G__18311 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18311) : p1.call(null,G__18311));
})();
if(cljs.core.truth_(and__13726__auto____$3)){
var and__13726__auto____$4 = (function (){var G__18313 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18313) : p2.call(null,G__18313));
})();
if(cljs.core.truth_(and__13726__auto____$4)){
var and__13726__auto____$5 = (function (){var G__18315 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18315) : p3.call(null,G__18315));
})();
if(cljs.core.truth_(and__13726__auto____$5)){
var and__13726__auto____$6 = (function (){var G__18317 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18317) : p1.call(null,G__18317));
})();
if(cljs.core.truth_(and__13726__auto____$6)){
var and__13726__auto____$7 = (function (){var G__18319 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18319) : p2.call(null,G__18319));
})();
if(cljs.core.truth_(and__13726__auto____$7)){
var G__18320 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18320) : p3.call(null,G__18320));
} else {
return and__13726__auto____$7;
}
} else {
return and__13726__auto____$6;
}
} else {
return and__13726__auto____$5;
}
} else {
return and__13726__auto____$4;
}
} else {
return and__13726__auto____$3;
}
} else {
return and__13726__auto____$2;
}
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__18365__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__17966_SHARP_){
var and__13726__auto__ = (function (){var G__18327 = p1__17966_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18327) : p1.call(null,G__18327));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18329 = p1__17966_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18329) : p2.call(null,G__18329));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var G__18330 = p1__17966_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18330) : p3.call(null,G__18330));
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
}),args)));
};
var G__18365 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18366__i = 0, G__18366__a = new Array(arguments.length -  3);
while (G__18366__i < G__18366__a.length) {G__18366__a[G__18366__i] = arguments[G__18366__i + 3]; ++G__18366__i;}
  args = new cljs.core.IndexedSeq(G__18366__a,0);
} 
return G__18365__delegate.call(this,x,y,z,args);};
G__18365.cljs$lang$maxFixedArity = 3;
G__18365.cljs$lang$applyTo = (function (arglist__18367){
var x = cljs.core.first(arglist__18367);
arglist__18367 = cljs.core.next(arglist__18367);
var y = cljs.core.first(arglist__18367);
arglist__18367 = cljs.core.next(arglist__18367);
var z = cljs.core.first(arglist__18367);
var args = cljs.core.rest(arglist__18367);
return G__18365__delegate(x,y,z,args);
});
G__18365.cljs$core$IFn$_invoke$arity$variadic = G__18365__delegate;
return G__18365;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__18368 = null;
if (arguments.length > 3) {
var G__18369__i = 0, G__18369__a = new Array(arguments.length -  3);
while (G__18369__i < G__18369__a.length) {G__18369__a[G__18369__i] = arguments[G__18369__i + 3]; ++G__18369__i;}
G__18368 = new cljs.core.IndexedSeq(G__18369__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__18370__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17967_SHARP_){
var G__18346 = x;
return (p1__17967_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17967_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18346) : p1__17967_SHARP_.call(null,G__18346));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17968_SHARP_){
var and__13726__auto__ = (function (){var G__18348 = x;
return (p1__17968_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17968_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18348) : p1__17968_SHARP_.call(null,G__18348));
})();
if(cljs.core.truth_(and__13726__auto__)){
var G__18349 = y;
return (p1__17968_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17968_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18349) : p1__17968_SHARP_.call(null,G__18349));
} else {
return and__13726__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17969_SHARP_){
var and__13726__auto__ = (function (){var G__18351 = x;
return (p1__17969_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17969_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18351) : p1__17969_SHARP_.call(null,G__18351));
})();
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__18353 = y;
return (p1__17969_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17969_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18353) : p1__17969_SHARP_.call(null,G__18353));
})();
if(cljs.core.truth_(and__13726__auto____$1)){
var G__18354 = z;
return (p1__17969_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__17969_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18354) : p1__17969_SHARP_.call(null,G__18354));
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__18371__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__17970_SHARP_){
return cljs.core.every_QMARK_(p1__17970_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__18371 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18372__i = 0, G__18372__a = new Array(arguments.length -  3);
while (G__18372__i < G__18372__a.length) {G__18372__a[G__18372__i] = arguments[G__18372__i + 3]; ++G__18372__i;}
  args = new cljs.core.IndexedSeq(G__18372__a,0);
} 
return G__18371__delegate.call(this,x,y,z,args);};
G__18371.cljs$lang$maxFixedArity = 3;
G__18371.cljs$lang$applyTo = (function (arglist__18373){
var x = cljs.core.first(arglist__18373);
arglist__18373 = cljs.core.next(arglist__18373);
var y = cljs.core.first(arglist__18373);
arglist__18373 = cljs.core.next(arglist__18373);
var z = cljs.core.first(arglist__18373);
var args = cljs.core.rest(arglist__18373);
return G__18371__delegate(x,y,z,args);
});
G__18371.cljs$core$IFn$_invoke$arity$variadic = G__18371__delegate;
return G__18371;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__18374 = null;
if (arguments.length > 3) {
var G__18375__i = 0, G__18375__a = new Array(arguments.length -  3);
while (G__18375__i < G__18375__a.length) {G__18375__a[G__18375__i] = arguments[G__18375__i + 3]; ++G__18375__i;}
G__18374 = new cljs.core.IndexedSeq(G__18375__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__18370 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__18376__i = 0, G__18376__a = new Array(arguments.length -  3);
while (G__18376__i < G__18376__a.length) {G__18376__a[G__18376__i] = arguments[G__18376__i + 3]; ++G__18376__i;}
  ps = new cljs.core.IndexedSeq(G__18376__a,0);
} 
return G__18370__delegate.call(this,p1,p2,p3,ps);};
G__18370.cljs$lang$maxFixedArity = 3;
G__18370.cljs$lang$applyTo = (function (arglist__18377){
var p1 = cljs.core.first(arglist__18377);
arglist__18377 = cljs.core.next(arglist__18377);
var p2 = cljs.core.first(arglist__18377);
arglist__18377 = cljs.core.next(arglist__18377);
var p3 = cljs.core.first(arglist__18377);
var ps = cljs.core.rest(arglist__18377);
return G__18370__delegate(p1,p2,p3,ps);
});
G__18370.cljs$core$IFn$_invoke$arity$variadic = G__18370__delegate;
return G__18370;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__18378 = null;
if (arguments.length > 3) {
var G__18379__i = 0, G__18379__a = new Array(arguments.length -  3);
while (G__18379__i < G__18379__a.length) {G__18379__a[G__18379__i] = arguments[G__18379__i + 3]; ++G__18379__i;}
G__18378 = new cljs.core.IndexedSeq(G__18379__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__18378);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__18585 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18585) : p.call(null,G__18585));
});
var sp1__2 = (function (x,y){
var or__13738__auto__ = (function (){var G__18587 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18587) : p.call(null,G__18587));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var G__18588 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18588) : p.call(null,G__18588));
}
});
var sp1__3 = (function (x,y,z){
var or__13738__auto__ = (function (){var G__18590 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18590) : p.call(null,G__18590));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var G__18592 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18592) : p.call(null,G__18592));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var G__18593 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18593) : p.call(null,G__18593));
}
}
});
var sp1__4 = (function() { 
var G__18754__delegate = function (x,y,z,args){
var or__13738__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__18754 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18755__i = 0, G__18755__a = new Array(arguments.length -  3);
while (G__18755__i < G__18755__a.length) {G__18755__a[G__18755__i] = arguments[G__18755__i + 3]; ++G__18755__i;}
  args = new cljs.core.IndexedSeq(G__18755__a,0);
} 
return G__18754__delegate.call(this,x,y,z,args);};
G__18754.cljs$lang$maxFixedArity = 3;
G__18754.cljs$lang$applyTo = (function (arglist__18756){
var x = cljs.core.first(arglist__18756);
arglist__18756 = cljs.core.next(arglist__18756);
var y = cljs.core.first(arglist__18756);
arglist__18756 = cljs.core.next(arglist__18756);
var z = cljs.core.first(arglist__18756);
var args = cljs.core.rest(arglist__18756);
return G__18754__delegate(x,y,z,args);
});
G__18754.cljs$core$IFn$_invoke$arity$variadic = G__18754__delegate;
return G__18754;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__18757 = null;
if (arguments.length > 3) {
var G__18758__i = 0, G__18758__a = new Array(arguments.length -  3);
while (G__18758__i < G__18758__a.length) {G__18758__a[G__18758__i] = arguments[G__18758__i + 3]; ++G__18758__i;}
G__18757 = new cljs.core.IndexedSeq(G__18758__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__13738__auto__ = (function (){var G__18625 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18625) : p1.call(null,G__18625));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var G__18626 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18626) : p2.call(null,G__18626));
}
});
var sp2__2 = (function (x,y){
var or__13738__auto__ = (function (){var G__18628 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18628) : p1.call(null,G__18628));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var G__18630 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18630) : p1.call(null,G__18630));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var or__13738__auto____$2 = (function (){var G__18632 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18632) : p2.call(null,G__18632));
})();
if(cljs.core.truth_(or__13738__auto____$2)){
return or__13738__auto____$2;
} else {
var G__18633 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18633) : p2.call(null,G__18633));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__13738__auto__ = (function (){var G__18635 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18635) : p1.call(null,G__18635));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var G__18637 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18637) : p1.call(null,G__18637));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var or__13738__auto____$2 = (function (){var G__18639 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18639) : p1.call(null,G__18639));
})();
if(cljs.core.truth_(or__13738__auto____$2)){
return or__13738__auto____$2;
} else {
var or__13738__auto____$3 = (function (){var G__18641 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18641) : p2.call(null,G__18641));
})();
if(cljs.core.truth_(or__13738__auto____$3)){
return or__13738__auto____$3;
} else {
var or__13738__auto____$4 = (function (){var G__18643 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18643) : p2.call(null,G__18643));
})();
if(cljs.core.truth_(or__13738__auto____$4)){
return or__13738__auto____$4;
} else {
var G__18644 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18644) : p2.call(null,G__18644));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__18759__delegate = function (x,y,z,args){
var or__13738__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.some(((function (or__13738__auto__){
return (function (p1__18380_SHARP_){
var or__13738__auto____$1 = (function (){var G__18646 = p1__18380_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18646) : p1.call(null,G__18646));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var G__18647 = p1__18380_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18647) : p2.call(null,G__18647));
}
});})(or__13738__auto__))
,args);
}
};
var G__18759 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18760__i = 0, G__18760__a = new Array(arguments.length -  3);
while (G__18760__i < G__18760__a.length) {G__18760__a[G__18760__i] = arguments[G__18760__i + 3]; ++G__18760__i;}
  args = new cljs.core.IndexedSeq(G__18760__a,0);
} 
return G__18759__delegate.call(this,x,y,z,args);};
G__18759.cljs$lang$maxFixedArity = 3;
G__18759.cljs$lang$applyTo = (function (arglist__18761){
var x = cljs.core.first(arglist__18761);
arglist__18761 = cljs.core.next(arglist__18761);
var y = cljs.core.first(arglist__18761);
arglist__18761 = cljs.core.next(arglist__18761);
var z = cljs.core.first(arglist__18761);
var args = cljs.core.rest(arglist__18761);
return G__18759__delegate(x,y,z,args);
});
G__18759.cljs$core$IFn$_invoke$arity$variadic = G__18759__delegate;
return G__18759;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__18762 = null;
if (arguments.length > 3) {
var G__18763__i = 0, G__18763__a = new Array(arguments.length -  3);
while (G__18763__i < G__18763__a.length) {G__18763__a[G__18763__i] = arguments[G__18763__i + 3]; ++G__18763__i;}
G__18762 = new cljs.core.IndexedSeq(G__18763__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18762);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__13738__auto__ = (function (){var G__18693 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18693) : p1.call(null,G__18693));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var G__18695 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18695) : p2.call(null,G__18695));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var G__18696 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18696) : p3.call(null,G__18696));
}
}
});
var sp3__2 = (function (x,y){
var or__13738__auto__ = (function (){var G__18698 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18698) : p1.call(null,G__18698));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var G__18700 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18700) : p2.call(null,G__18700));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var or__13738__auto____$2 = (function (){var G__18702 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18702) : p3.call(null,G__18702));
})();
if(cljs.core.truth_(or__13738__auto____$2)){
return or__13738__auto____$2;
} else {
var or__13738__auto____$3 = (function (){var G__18704 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18704) : p1.call(null,G__18704));
})();
if(cljs.core.truth_(or__13738__auto____$3)){
return or__13738__auto____$3;
} else {
var or__13738__auto____$4 = (function (){var G__18706 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18706) : p2.call(null,G__18706));
})();
if(cljs.core.truth_(or__13738__auto____$4)){
return or__13738__auto____$4;
} else {
var G__18707 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18707) : p3.call(null,G__18707));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__13738__auto__ = (function (){var G__18709 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18709) : p1.call(null,G__18709));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var G__18711 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18711) : p2.call(null,G__18711));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var or__13738__auto____$2 = (function (){var G__18713 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18713) : p3.call(null,G__18713));
})();
if(cljs.core.truth_(or__13738__auto____$2)){
return or__13738__auto____$2;
} else {
var or__13738__auto____$3 = (function (){var G__18715 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18715) : p1.call(null,G__18715));
})();
if(cljs.core.truth_(or__13738__auto____$3)){
return or__13738__auto____$3;
} else {
var or__13738__auto____$4 = (function (){var G__18717 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18717) : p2.call(null,G__18717));
})();
if(cljs.core.truth_(or__13738__auto____$4)){
return or__13738__auto____$4;
} else {
var or__13738__auto____$5 = (function (){var G__18719 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18719) : p3.call(null,G__18719));
})();
if(cljs.core.truth_(or__13738__auto____$5)){
return or__13738__auto____$5;
} else {
var or__13738__auto____$6 = (function (){var G__18721 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18721) : p1.call(null,G__18721));
})();
if(cljs.core.truth_(or__13738__auto____$6)){
return or__13738__auto____$6;
} else {
var or__13738__auto____$7 = (function (){var G__18723 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18723) : p2.call(null,G__18723));
})();
if(cljs.core.truth_(or__13738__auto____$7)){
return or__13738__auto____$7;
} else {
var G__18724 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18724) : p3.call(null,G__18724));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__18764__delegate = function (x,y,z,args){
var or__13738__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.some(((function (or__13738__auto__){
return (function (p1__18381_SHARP_){
var or__13738__auto____$1 = (function (){var G__18726 = p1__18381_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18726) : p1.call(null,G__18726));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var or__13738__auto____$2 = (function (){var G__18728 = p1__18381_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18728) : p2.call(null,G__18728));
})();
if(cljs.core.truth_(or__13738__auto____$2)){
return or__13738__auto____$2;
} else {
var G__18729 = p1__18381_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18729) : p3.call(null,G__18729));
}
}
});})(or__13738__auto__))
,args);
}
};
var G__18764 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18765__i = 0, G__18765__a = new Array(arguments.length -  3);
while (G__18765__i < G__18765__a.length) {G__18765__a[G__18765__i] = arguments[G__18765__i + 3]; ++G__18765__i;}
  args = new cljs.core.IndexedSeq(G__18765__a,0);
} 
return G__18764__delegate.call(this,x,y,z,args);};
G__18764.cljs$lang$maxFixedArity = 3;
G__18764.cljs$lang$applyTo = (function (arglist__18766){
var x = cljs.core.first(arglist__18766);
arglist__18766 = cljs.core.next(arglist__18766);
var y = cljs.core.first(arglist__18766);
arglist__18766 = cljs.core.next(arglist__18766);
var z = cljs.core.first(arglist__18766);
var args = cljs.core.rest(arglist__18766);
return G__18764__delegate(x,y,z,args);
});
G__18764.cljs$core$IFn$_invoke$arity$variadic = G__18764__delegate;
return G__18764;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__18767 = null;
if (arguments.length > 3) {
var G__18768__i = 0, G__18768__a = new Array(arguments.length -  3);
while (G__18768__i < G__18768__a.length) {G__18768__a[G__18768__i] = arguments[G__18768__i + 3]; ++G__18768__i;}
G__18767 = new cljs.core.IndexedSeq(G__18768__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__18769__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__18382_SHARP_){
var G__18745 = x;
return (p1__18382_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18382_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18745) : p1__18382_SHARP_.call(null,G__18745));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__18383_SHARP_){
var or__13738__auto__ = (function (){var G__18747 = x;
return (p1__18383_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18383_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18747) : p1__18383_SHARP_.call(null,G__18747));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var G__18748 = y;
return (p1__18383_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18383_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18748) : p1__18383_SHARP_.call(null,G__18748));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__18384_SHARP_){
var or__13738__auto__ = (function (){var G__18750 = x;
return (p1__18384_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18384_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18750) : p1__18384_SHARP_.call(null,G__18750));
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var G__18752 = y;
return (p1__18384_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18384_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18752) : p1__18384_SHARP_.call(null,G__18752));
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var G__18753 = z;
return (p1__18384_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18384_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18753) : p1__18384_SHARP_.call(null,G__18753));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__18770__delegate = function (x,y,z,args){
var or__13738__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.some(((function (or__13738__auto__,ps__$1){
return (function (p1__18385_SHARP_){
return cljs.core.some(p1__18385_SHARP_,args);
});})(or__13738__auto__,ps__$1))
,ps__$1);
}
};
var G__18770 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__18771__i = 0, G__18771__a = new Array(arguments.length -  3);
while (G__18771__i < G__18771__a.length) {G__18771__a[G__18771__i] = arguments[G__18771__i + 3]; ++G__18771__i;}
  args = new cljs.core.IndexedSeq(G__18771__a,0);
} 
return G__18770__delegate.call(this,x,y,z,args);};
G__18770.cljs$lang$maxFixedArity = 3;
G__18770.cljs$lang$applyTo = (function (arglist__18772){
var x = cljs.core.first(arglist__18772);
arglist__18772 = cljs.core.next(arglist__18772);
var y = cljs.core.first(arglist__18772);
arglist__18772 = cljs.core.next(arglist__18772);
var z = cljs.core.first(arglist__18772);
var args = cljs.core.rest(arglist__18772);
return G__18770__delegate(x,y,z,args);
});
G__18770.cljs$core$IFn$_invoke$arity$variadic = G__18770__delegate;
return G__18770;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__18773 = null;
if (arguments.length > 3) {
var G__18774__i = 0, G__18774__a = new Array(arguments.length -  3);
while (G__18774__i < G__18774__a.length) {G__18774__a[G__18774__i] = arguments[G__18774__i + 3]; ++G__18774__i;}
G__18773 = new cljs.core.IndexedSeq(G__18774__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__18773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__18769 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__18775__i = 0, G__18775__a = new Array(arguments.length -  3);
while (G__18775__i < G__18775__a.length) {G__18775__a[G__18775__i] = arguments[G__18775__i + 3]; ++G__18775__i;}
  ps = new cljs.core.IndexedSeq(G__18775__a,0);
} 
return G__18769__delegate.call(this,p1,p2,p3,ps);};
G__18769.cljs$lang$maxFixedArity = 3;
G__18769.cljs$lang$applyTo = (function (arglist__18776){
var p1 = cljs.core.first(arglist__18776);
arglist__18776 = cljs.core.next(arglist__18776);
var p2 = cljs.core.first(arglist__18776);
arglist__18776 = cljs.core.next(arglist__18776);
var p3 = cljs.core.first(arglist__18776);
var ps = cljs.core.rest(arglist__18776);
return G__18769__delegate(p1,p2,p3,ps);
});
G__18769.cljs$core$IFn$_invoke$arity$variadic = G__18769__delegate;
return G__18769;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__18777 = null;
if (arguments.length > 3) {
var G__18778__i = 0, G__18778__a = new Array(arguments.length -  3);
while (G__18778__i < G__18778__a.length) {G__18778__a[G__18778__i] = arguments[G__18778__i + 3]; ++G__18778__i;}
G__18777 = new cljs.core.IndexedSeq(G__18778__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__18777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__18833 = null;
var G__18833__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18833__1 = (function (result){
var G__18819 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18819) : rf.call(null,G__18819));
});
var G__18833__2 = (function (result,input){
var G__18820 = result;
var G__18821 = (function (){var G__18822 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18822) : f.call(null,G__18822));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18820,G__18821) : rf.call(null,G__18820,G__18821));
});
var G__18833__3 = (function() { 
var G__18834__delegate = function (result,input,inputs){
var G__18823 = result;
var G__18824 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18823,G__18824) : rf.call(null,G__18823,G__18824));
};
var G__18834 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__18835__i = 0, G__18835__a = new Array(arguments.length -  2);
while (G__18835__i < G__18835__a.length) {G__18835__a[G__18835__i] = arguments[G__18835__i + 2]; ++G__18835__i;}
  inputs = new cljs.core.IndexedSeq(G__18835__a,0);
} 
return G__18834__delegate.call(this,result,input,inputs);};
G__18834.cljs$lang$maxFixedArity = 2;
G__18834.cljs$lang$applyTo = (function (arglist__18836){
var result = cljs.core.first(arglist__18836);
arglist__18836 = cljs.core.next(arglist__18836);
var input = cljs.core.first(arglist__18836);
var inputs = cljs.core.rest(arglist__18836);
return G__18834__delegate(result,input,inputs);
});
G__18834.cljs$core$IFn$_invoke$arity$variadic = G__18834__delegate;
return G__18834;
})()
;
G__18833 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__18833__0.call(this);
case 1:
return G__18833__1.call(this,result);
case 2:
return G__18833__2.call(this,result,input);
default:
var G__18837 = null;
if (arguments.length > 2) {
var G__18838__i = 0, G__18838__a = new Array(arguments.length -  2);
while (G__18838__i < G__18838__a.length) {G__18838__a[G__18838__i] = arguments[G__18838__i + 2]; ++G__18838__i;}
G__18837 = new cljs.core.IndexedSeq(G__18838__a,0);
}
return G__18833__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__18837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18833.cljs$lang$maxFixedArity = 2;
G__18833.cljs$lang$applyTo = G__18833__3.cljs$lang$applyTo;
G__18833.cljs$core$IFn$_invoke$arity$0 = G__18833__0;
G__18833.cljs$core$IFn$_invoke$arity$1 = G__18833__1;
G__18833.cljs$core$IFn$_invoke$arity$2 = G__18833__2;
G__18833.cljs$core$IFn$_invoke$arity$variadic = G__18833__3.cljs$core$IFn$_invoke$arity$variadic;
return G__18833;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14625__auto___18839 = size;
var i_18840 = (0);
while(true){
if((i_18840 < n__14625__auto___18839)){
cljs.core.chunk_append(b,(function (){var G__18825 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_18840);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18825) : f.call(null,G__18825));
})());

var G__18841 = (i_18840 + (1));
i_18840 = G__18841;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__18826 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18826) : f.call(null,G__18826));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__18827 = cljs.core.first(s1);
var G__18828 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18827,G__18828) : f.call(null,G__18827,G__18828));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__18829 = cljs.core.first(s1);
var G__18830 = cljs.core.first(s2);
var G__18831 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18829,G__18830,G__18831) : f.call(null,G__18829,G__18830,G__18831));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__18842__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__18779_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__18779_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__18842 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__18843__i = 0, G__18843__a = new Array(arguments.length -  4);
while (G__18843__i < G__18843__a.length) {G__18843__a[G__18843__i] = arguments[G__18843__i + 4]; ++G__18843__i;}
  colls = new cljs.core.IndexedSeq(G__18843__a,0);
} 
return G__18842__delegate.call(this,f,c1,c2,c3,colls);};
G__18842.cljs$lang$maxFixedArity = 4;
G__18842.cljs$lang$applyTo = (function (arglist__18844){
var f = cljs.core.first(arglist__18844);
arglist__18844 = cljs.core.next(arglist__18844);
var c1 = cljs.core.first(arglist__18844);
arglist__18844 = cljs.core.next(arglist__18844);
var c2 = cljs.core.first(arglist__18844);
arglist__18844 = cljs.core.next(arglist__18844);
var c3 = cljs.core.first(arglist__18844);
var colls = cljs.core.rest(arglist__18844);
return G__18842__delegate(f,c1,c2,c3,colls);
});
G__18842.cljs$core$IFn$_invoke$arity$variadic = G__18842__delegate;
return G__18842;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__18845 = null;
if (arguments.length > 4) {
var G__18846__i = 0, G__18846__a = new Array(arguments.length -  4);
while (G__18846__i < G__18846__a.length) {G__18846__a[G__18846__i] = arguments[G__18846__i + 4]; ++G__18846__i;}
G__18845 = new cljs.core.IndexedSeq(G__18846__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__18845);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__18855 = null;
var G__18855__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18855__1 = (function (result){
var G__18852 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18852) : rf.call(null,G__18852));
});
var G__18855__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__18853 = result;
var G__18854 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18853,G__18854) : rf.call(null,G__18853,G__18854));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__18855 = function(result,input){
switch(arguments.length){
case 0:
return G__18855__0.call(this);
case 1:
return G__18855__1.call(this,result);
case 2:
return G__18855__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18855.cljs$core$IFn$_invoke$arity$0 = G__18855__0;
G__18855.cljs$core$IFn$_invoke$arity$1 = G__18855__1;
G__18855.cljs$core$IFn$_invoke$arity$2 = G__18855__2;
return G__18855;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__18862 = null;
var G__18862__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18862__1 = (function (result){
var G__18859 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18859) : rf.call(null,G__18859));
});
var G__18862__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__18860 = result;
var G__18861 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18860,G__18861) : rf.call(null,G__18860,G__18861));
}
});
G__18862 = function(result,input){
switch(arguments.length){
case 0:
return G__18862__0.call(this);
case 1:
return G__18862__1.call(this,result);
case 2:
return G__18862__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18862.cljs$core$IFn$_invoke$arity$0 = G__18862__0;
G__18862.cljs$core$IFn$_invoke$arity$1 = G__18862__1;
G__18862.cljs$core$IFn$_invoke$arity$2 = G__18862__2;
return G__18862;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__18863 = (n__$1 - (1));
var G__18864 = cljs.core.rest(s);
n__$1 = G__18863;
coll__$1 = G__18864;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__18867 = cljs.core.next(s);
var G__18868 = cljs.core.next(lead);
s = G__18867;
lead = G__18868;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__18881 = null;
var G__18881__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18881__1 = (function (result){
var G__18875 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18875) : rf.call(null,G__18875));
});
var G__18881__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__13726__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__13726__auto__)){
var G__18876 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18876) : pred.call(null,G__18876));
} else {
return and__13726__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__18877 = result;
var G__18878 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18877,G__18878) : rf.call(null,G__18877,G__18878));
}
});
G__18881 = function(result,input){
switch(arguments.length){
case 0:
return G__18881__0.call(this);
case 1:
return G__18881__1.call(this,result);
case 2:
return G__18881__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18881.cljs$core$IFn$_invoke$arity$0 = G__18881__0;
G__18881.cljs$core$IFn$_invoke$arity$1 = G__18881__1;
G__18881.cljs$core$IFn$_invoke$arity$2 = G__18881__2;
return G__18881;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__13726__auto__ = s;
if(and__13726__auto__){
var G__18880 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__18880) : pred__$1.call(null,G__18880));
} else {
return and__13726__auto__;
}
})())){
var G__18882 = pred__$1;
var G__18883 = cljs.core.rest(s);
pred__$1 = G__18882;
coll__$1 = G__18883;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__18892 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18892) : f.call(null,G__18892));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__18895__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__18895 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__18896__i = 0, G__18896__a = new Array(arguments.length -  2);
while (G__18896__i < G__18896__a.length) {G__18896__a[G__18896__i] = arguments[G__18896__i + 2]; ++G__18896__i;}
  colls = new cljs.core.IndexedSeq(G__18896__a,0);
} 
return G__18895__delegate.call(this,c1,c2,colls);};
G__18895.cljs$lang$maxFixedArity = 2;
G__18895.cljs$lang$applyTo = (function (arglist__18897){
var c1 = cljs.core.first(arglist__18897);
arglist__18897 = cljs.core.next(arglist__18897);
var c2 = cljs.core.first(arglist__18897);
var colls = cljs.core.rest(arglist__18897);
return G__18895__delegate(c1,c2,colls);
});
G__18895.cljs$core$IFn$_invoke$arity$variadic = G__18895__delegate;
return G__18895;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__18898 = null;
if (arguments.length > 2) {
var G__18899__i = 0, G__18899__a = new Array(arguments.length -  2);
while (G__18899__i < G__18899__a.length) {G__18899__a[G__18899__i] = arguments[G__18899__i + 2]; ++G__18899__i;}
G__18898 = new cljs.core.IndexedSeq(G__18899__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__18898);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__18914 = null;
var G__18914__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18914__1 = (function (result){
var G__18907 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18907) : rf.call(null,G__18907));
});
var G__18914__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__18908 = result;
var G__18909 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18908,G__18909) : rf.call(null,G__18908,G__18909));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__18910 = sepr;
var G__18911 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18910,G__18911) : rf.call(null,G__18910,G__18911));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__18912 = result;
var G__18913 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18912,G__18913) : rf.call(null,G__18912,G__18913));
}
});
G__18914 = function(result,input){
switch(arguments.length){
case 0:
return G__18914__0.call(this);
case 1:
return G__18914__1.call(this,result);
case 2:
return G__18914__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18914.cljs$core$IFn$_invoke$arity$0 = G__18914__0;
G__18914.cljs$core$IFn$_invoke$arity$1 = G__18914__1;
G__18914.cljs$core$IFn$_invoke$arity$2 = G__18914__2;
return G__18914;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__18923__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__18923 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__18924__i = 0, G__18924__a = new Array(arguments.length -  1);
while (G__18924__i < G__18924__a.length) {G__18924__a[G__18924__i] = arguments[G__18924__i + 1]; ++G__18924__i;}
  colls = new cljs.core.IndexedSeq(G__18924__a,0);
} 
return G__18923__delegate.call(this,f,colls);};
G__18923.cljs$lang$maxFixedArity = 1;
G__18923.cljs$lang$applyTo = (function (arglist__18925){
var f = cljs.core.first(arglist__18925);
var colls = cljs.core.rest(arglist__18925);
return G__18923__delegate(f,colls);
});
G__18923.cljs$core$IFn$_invoke$arity$variadic = G__18923__delegate;
return G__18923;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__18926 = null;
if (arguments.length > 1) {
var G__18927__i = 0, G__18927__a = new Array(arguments.length -  1);
while (G__18927__i < G__18927__a.length) {G__18927__a[G__18927__i] = arguments[G__18927__i + 1]; ++G__18927__i;}
G__18926 = new cljs.core.IndexedSeq(G__18927__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__18926);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__18946 = null;
var G__18946__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__18946__1 = (function (result){
var G__18940 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18940) : rf.call(null,G__18940));
});
var G__18946__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__18941 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18941) : pred.call(null,G__18941));
})())){
var G__18942 = result;
var G__18943 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18942,G__18943) : rf.call(null,G__18942,G__18943));
} else {
return result;
}
});
G__18946 = function(result,input){
switch(arguments.length){
case 0:
return G__18946__0.call(this);
case 1:
return G__18946__1.call(this,result);
case 2:
return G__18946__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18946.cljs$core$IFn$_invoke$arity$0 = G__18946__0;
G__18946.cljs$core$IFn$_invoke$arity$1 = G__18946__1;
G__18946.cljs$core$IFn$_invoke$arity$2 = G__18946__2;
return G__18946;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14625__auto___18947 = size;
var i_18948 = (0);
while(true){
if((i_18948 < n__14625__auto___18947)){
if(cljs.core.truth_((function (){var G__18944 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_18948);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18944) : pred.call(null,G__18944));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_18948));
} else {
}

var G__18949 = (i_18948 + (1));
i_18948 = G__18949;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__18945 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18945) : pred.call(null,G__18945));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__18956 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__18956) : branch_QMARK_.call(null,G__18956));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__18957 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__18957) : children.call(null,G__18957));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__18958_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__18958_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__18961 = to;
if(G__18961){
var bit__14412__auto__ = (G__18961.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__14412__auto__) || (G__18961.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__18962 = to;
if(G__18962){
var bit__14412__auto__ = (G__18962.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__14412__auto__) || (G__18962.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__18964 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18964) : f.call(null,G__18964));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__18965__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__18965 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__18966__i = 0, G__18966__a = new Array(arguments.length -  4);
while (G__18966__i < G__18966__a.length) {G__18966__a[G__18966__i] = arguments[G__18966__i + 4]; ++G__18966__i;}
  colls = new cljs.core.IndexedSeq(G__18966__a,0);
} 
return G__18965__delegate.call(this,f,c1,c2,c3,colls);};
G__18965.cljs$lang$maxFixedArity = 4;
G__18965.cljs$lang$applyTo = (function (arglist__18967){
var f = cljs.core.first(arglist__18967);
arglist__18967 = cljs.core.next(arglist__18967);
var c1 = cljs.core.first(arglist__18967);
arglist__18967 = cljs.core.next(arglist__18967);
var c2 = cljs.core.first(arglist__18967);
arglist__18967 = cljs.core.next(arglist__18967);
var c3 = cljs.core.first(arglist__18967);
var colls = cljs.core.rest(arglist__18967);
return G__18965__delegate(f,c1,c2,c3,colls);
});
G__18965.cljs$core$IFn$_invoke$arity$variadic = G__18965__delegate;
return G__18965;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__18968 = null;
if (arguments.length > 4) {
var G__18969__i = 0, G__18969__a = new Array(arguments.length -  4);
while (G__18969__i < G__18969__a.length) {G__18969__a[G__18969__i] = arguments[G__18969__i + 4]; ++G__18969__i;}
G__18968 = new cljs.core.IndexedSeq(G__18969__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__18968);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__18971 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18971) : pred.call(null,G__18971));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__18986 = m__$1;
if(G__18986){
var bit__14419__auto__ = (G__18986.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14419__auto__) || (G__18986.cljs$core$ILookup$)){
return true;
} else {
if((!G__18986.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__18986);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__18986);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__18987 = sentinel;
var G__18988 = m__$2;
var G__18989 = cljs.core.next(ks__$1);
sentinel = G__18987;
m__$1 = G__18988;
ks__$1 = G__18989;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__18990,v){
var vec__18995 = p__18990;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18995,(0),null);
var ks = cljs.core.nthnext(vec__18995,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__18996,f){
var vec__19034 = p__18996;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19034,(0),null);
var ks = cljs.core.nthnext(vec__19034,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19035 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19035) : f.call(null,G__19035));
})());
}
});
var update_in__4 = (function (m,p__18997,f,a){
var vec__19036 = p__18997;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19036,(0),null);
var ks = cljs.core.nthnext(vec__19036,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19037 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__19038 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19037,G__19038) : f.call(null,G__19037,G__19038));
})());
}
});
var update_in__5 = (function (m,p__18998,f,a,b){
var vec__19039 = p__18998;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19039,(0),null);
var ks = cljs.core.nthnext(vec__19039,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19040 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__19041 = a;
var G__19042 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19040,G__19041,G__19042) : f.call(null,G__19040,G__19041,G__19042));
})());
}
});
var update_in__6 = (function (m,p__18999,f,a,b,c){
var vec__19043 = p__18999;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19043,(0),null);
var ks = cljs.core.nthnext(vec__19043,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19044 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__19045 = a;
var G__19046 = b;
var G__19047 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19044,G__19045,G__19046,G__19047) : f.call(null,G__19044,G__19045,G__19046,G__19047));
})());
}
});
var update_in__7 = (function() { 
var G__19049__delegate = function (m,p__19000,f,a,b,c,args){
var vec__19048 = p__19000;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19048,(0),null);
var ks = cljs.core.nthnext(vec__19048,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__19049 = function (m,p__19000,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__19050__i = 0, G__19050__a = new Array(arguments.length -  6);
while (G__19050__i < G__19050__a.length) {G__19050__a[G__19050__i] = arguments[G__19050__i + 6]; ++G__19050__i;}
  args = new cljs.core.IndexedSeq(G__19050__a,0);
} 
return G__19049__delegate.call(this,m,p__19000,f,a,b,c,args);};
G__19049.cljs$lang$maxFixedArity = 6;
G__19049.cljs$lang$applyTo = (function (arglist__19051){
var m = cljs.core.first(arglist__19051);
arglist__19051 = cljs.core.next(arglist__19051);
var p__19000 = cljs.core.first(arglist__19051);
arglist__19051 = cljs.core.next(arglist__19051);
var f = cljs.core.first(arglist__19051);
arglist__19051 = cljs.core.next(arglist__19051);
var a = cljs.core.first(arglist__19051);
arglist__19051 = cljs.core.next(arglist__19051);
var b = cljs.core.first(arglist__19051);
arglist__19051 = cljs.core.next(arglist__19051);
var c = cljs.core.first(arglist__19051);
var args = cljs.core.rest(arglist__19051);
return G__19049__delegate(m,p__19000,f,a,b,c,args);
});
G__19049.cljs$core$IFn$_invoke$arity$variadic = G__19049__delegate;
return G__19049;
})()
;
update_in = function(m,p__19000,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__19000,f);
case 4:
return update_in__4.call(this,m,p__19000,f,a);
case 5:
return update_in__5.call(this,m,p__19000,f,a,b);
case 6:
return update_in__6.call(this,m,p__19000,f,a,b,c);
default:
var G__19052 = null;
if (arguments.length > 6) {
var G__19053__i = 0, G__19053__a = new Array(arguments.length -  6);
while (G__19053__i < G__19053__a.length) {G__19053__a[G__19053__i] = arguments[G__19053__i + 6]; ++G__19053__i;}
G__19052 = new cljs.core.IndexedSeq(G__19053__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__19000,f,a,b,c, G__19052);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19064 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19064) : f.call(null,G__19064));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19065 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__19066 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19065,G__19066) : f.call(null,G__19065,G__19066));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19067 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__19068 = x;
var G__19069 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19067,G__19068,G__19069) : f.call(null,G__19067,G__19068,G__19069));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19070 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__19071 = x;
var G__19072 = y;
var G__19073 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19070,G__19071,G__19072,G__19073) : f.call(null,G__19070,G__19071,G__19072,G__19073));
})());
});
var update__7 = (function() { 
var G__19074__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__19074 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__19075__i = 0, G__19075__a = new Array(arguments.length -  6);
while (G__19075__i < G__19075__a.length) {G__19075__a[G__19075__i] = arguments[G__19075__i + 6]; ++G__19075__i;}
  more = new cljs.core.IndexedSeq(G__19075__a,0);
} 
return G__19074__delegate.call(this,m,k,f,x,y,z,more);};
G__19074.cljs$lang$maxFixedArity = 6;
G__19074.cljs$lang$applyTo = (function (arglist__19076){
var m = cljs.core.first(arglist__19076);
arglist__19076 = cljs.core.next(arglist__19076);
var k = cljs.core.first(arglist__19076);
arglist__19076 = cljs.core.next(arglist__19076);
var f = cljs.core.first(arglist__19076);
arglist__19076 = cljs.core.next(arglist__19076);
var x = cljs.core.first(arglist__19076);
arglist__19076 = cljs.core.next(arglist__19076);
var y = cljs.core.first(arglist__19076);
arglist__19076 = cljs.core.next(arglist__19076);
var z = cljs.core.first(arglist__19076);
var more = cljs.core.rest(arglist__19076);
return G__19074__delegate(m,k,f,x,y,z,more);
});
G__19074.cljs$core$IFn$_invoke$arity$variadic = G__19074__delegate;
return G__19074;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__19077 = null;
if (arguments.length > 6) {
var G__19078__i = 0, G__19078__a = new Array(arguments.length -  6);
while (G__19078__i < G__19078__a.length) {G__19078__a[G__19078__i] = arguments[G__19078__i + 6]; ++G__19078__i;}
G__19077 = new cljs.core.IndexedSeq(G__19078__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__19077);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__19079 = (ll - (5));
var G__19080 = r;
ll = G__19079;
ret = G__19080;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__19085 = cljs.core.pv_aget(node,(0));
var G__19086 = (level - (5));
node = G__19085;
level = G__19086;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__19087 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__19088 = (level - (5));
node = G__19087;
level = G__19088;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__19098 = init__$2;
var G__19099 = (j + i);
var G__19100 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19098,G__19099,G__19100) : f.call(null,G__19098,G__19099,G__19100));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__19111 = (j + (1));
var G__19112 = init__$3;
j = G__19111;
init__$2 = G__19112;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__19101 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19101) : cljs.core.deref.call(null,G__19101));
} else {
var G__19113 = (i + len);
var G__19114 = init__$2;
i = G__19113;
init__$1 = G__19114;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__19102 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__19102) : cljs.core.tv_editable_root.call(null,G__19102));
})(),(function (){var G__19103 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__19103) : cljs.core.tv_editable_tail.call(null,G__19103));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__19104 = init__$2;
var G__19105 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19104,G__19105) : f.call(null,G__19104,G__19105));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__19115 = (j + (1));
var G__19116 = init__$3;
j = G__19115;
init__$2 = G__19116;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__19106 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19106) : cljs.core.deref.call(null,G__19106));
} else {
var G__19117 = (i + len);
var G__19118 = init__$2;
i = G__19117;
init__$1 = G__19118;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__19107 = coll__$1;
var G__19108 = cljs.core.first_array_for_longvec(coll__$1);
var G__19109 = (0);
var G__19110 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19107,G__19108,G__19109,G__19110) : cljs.core.chunked_seq.call(null,G__19107,G__19108,G__19109,G__19110));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__14625__auto___19119 = len;
var i_19120 = (0);
while(true){
if((i_19120 < n__14625__auto___19119)){
(new_tail[i_19120] = (self__.tail[i_19120]));

var G__19121 = (i_19120 + (1));
i_19120 = G__19121;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__19122 = null;
var G__19122__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__19122__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__19122 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19122__2.call(this,self__,k);
case 3:
return G__19122__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19122.cljs$core$IFn$_invoke$arity$2 = G__19122__2;
G__19122.cljs$core$IFn$_invoke$arity$3 = G__19122__3;
return G__19122;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args19097){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19097)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__19123 = (i + (1));
var G__19124 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__19123;
out = G__19124;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19125__i = 0, G__19125__a = new Array(arguments.length -  0);
while (G__19125__i < G__19125__a.length) {G__19125__a[G__19125__i] = arguments[G__19125__i + 0]; ++G__19125__i;}
  args = new cljs.core.IndexedSeq(G__19125__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__19126){
var args = cljs.core.seq(arglist__19126);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__19127 = self__.vec;
var G__19128 = self__.node;
var G__19129 = self__.i;
var G__19130 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19127,G__19128,G__19129,G__19130) : cljs.core.chunked_seq.call(null,G__19127,G__19128,G__19129,G__19130));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__19131 = self__.vec;
var G__19132 = (self__.i + self__.off);
var G__19133 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19131,G__19132,G__19133) : cljs.core.subvec.call(null,G__19131,G__19132,G__19133));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__19134 = self__.vec;
var G__19135 = (self__.i + self__.off);
var G__19136 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19134,G__19135,G__19136) : cljs.core.subvec.call(null,G__19134,G__19135,G__19136));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__19137 = self__.vec;
var G__19138 = self__.node;
var G__19139 = self__.i;
var G__19140 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19137,G__19138,G__19139,G__19140) : cljs.core.chunked_seq.call(null,G__19137,G__19138,G__19139,G__19140));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__19141 = self__.vec;
var G__19142 = cljs.core.unchecked_array_for(self__.vec,end);
var G__19143 = end;
var G__19144 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19141,G__19142,G__19143,G__19144) : cljs.core.chunked_seq.call(null,G__19141,G__19142,G__19143,G__19144));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__19145 = self__.vec;
var G__19146 = self__.node;
var G__19147 = self__.i;
var G__19148 = self__.off;
var G__19149 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__19145,G__19146,G__19147,G__19148,G__19149) : cljs.core.chunked_seq.call(null,G__19145,G__19146,G__19147,G__19148,G__19149));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__19150 = self__.vec;
var G__19151 = cljs.core.unchecked_array_for(self__.vec,end);
var G__19152 = end;
var G__19153 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19150,G__19151,G__19152,G__19153) : cljs.core.chunked_seq.call(null,G__19150,G__19151,G__19152,G__19153));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__19155 = self__.meta;
var G__19156 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__19157 = self__.start;
var G__19158 = (function (){var x__14055__auto__ = self__.end;
var y__14056__auto__ = (v_pos + (1));
return ((x__14055__auto__ > y__14056__auto__) ? x__14055__auto__ : y__14056__auto__);
})();
var G__19159 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19155,G__19156,G__19157,G__19158,G__19159) : cljs.core.build_subvec.call(null,G__19155,G__19156,G__19157,G__19158,G__19159));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__19160 = self__.meta;
var G__19161 = self__.v;
var G__19162 = self__.start;
var G__19163 = (self__.end - (1));
var G__19164 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19160,G__19161,G__19162,G__19163,G__19164) : cljs.core.build_subvec.call(null,G__19160,G__19161,G__19162,G__19163,G__19164));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__19166 = meta__$1;
var G__19167 = self__.v;
var G__19168 = self__.start;
var G__19169 = self__.end;
var G__19170 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19166,G__19167,G__19168,G__19169,G__19170) : cljs.core.build_subvec.call(null,G__19166,G__19167,G__19168,G__19169,G__19170));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19171 = self__.meta;
var G__19172 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__19173 = self__.start;
var G__19174 = (self__.end + (1));
var G__19175 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19171,G__19172,G__19173,G__19174,G__19175) : cljs.core.build_subvec.call(null,G__19171,G__19172,G__19173,G__19174,G__19175));
});

cljs.core.Subvec.prototype.call = (function() {
var G__19176 = null;
var G__19176__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__19176__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__19176 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19176__2.call(this,self__,k);
case 3:
return G__19176__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19176.cljs$core$IFn$_invoke$arity$2 = G__19176__2;
G__19176.cljs$core$IFn$_invoke$arity$3 = G__19176__3;
return G__19176;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args19154){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19154)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__19177 = meta;
var G__19178 = v.v;
var G__19179 = (v.start + start);
var G__19180 = (v.start + end);
var G__19181 = __hash;
meta = G__19177;
v = G__19178;
start = G__19179;
end = G__19180;
__hash = G__19181;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj19188 = {};
return obj19188;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__19196 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__19197 = (level - (5));
node = G__19196;
level = G__19197;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__19201 = null;
var G__19201__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19201__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19201 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19201__2.call(this,self__,k);
case 3:
return G__19201__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19201.cljs$core$IFn$_invoke$arity$2 = G__19201__2;
G__19201.cljs$core$IFn$_invoke$arity$3 = G__19201__3;
return G__19201;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args19198){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19198)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__13738__auto__ = self__.front;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13738__auto__ = self__.rear;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__19202 = (i + incr);
i = G__19202;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__19203 = (i + (1));
var G__19204 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__19203;
out = G__19204;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj19208 = {};
return obj19208;
})();
var l = ks.length;
var i_19209 = (0);
while(true){
if((i_19209 < l)){
var k_19210 = (ks[i_19209]);
(new_obj[k_19210] = (obj[k_19210]));

var G__19211 = (i_19209 + (1));
i_19209 = G__19211;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13726__auto__ = (function (){var G__19215 = k;
return goog.isString(G__19215);
})();
if(cljs.core.truth_(and__13726__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13726__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__19216 = init__$1;
var G__19217 = k;
var G__19218 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19216,G__19217,G__19218) : f.call(null,G__19216,G__19217,G__19218));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__19219 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19219) : cljs.core.deref.call(null,G__19219));
} else {
var G__19225 = cljs.core.rest(keys__$1);
var G__19226 = init__$2;
keys__$1 = G__19225;
init__$1 = G__19226;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13726__auto__ = (function (){var G__19221 = k;
return goog.isString(G__19221);
})();
if(cljs.core.truth_(and__13726__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13726__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__19222 = k;
return goog.isString(G__19222);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13726__auto__ = (function (){var G__19224 = k;
return goog.isString(G__19224);
})();
if(cljs.core.truth_(and__13726__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13726__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__19212_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__19212_SHARP_,(self__.strobj[p1__19212_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__19227 = null;
var G__19227__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19227__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19227 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19227__2.call(this,self__,k);
case 3:
return G__19227__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19227.cljs$core$IFn$_invoke$arity$2 = G__19227__2;
G__19227.cljs$core$IFn$_invoke$arity$3 = G__19227__3;
return G__19227;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args19213){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19213)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj19229 = {};
return obj19229;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__19230 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19230,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19230,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__19231 = (i + (2));
i = G__19231;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__19232 = (i + (2));
i = G__19232;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__19233 = (i + (2));
i = G__19233;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__19234 = (i + (2));
i = G__19234;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__19235 = (i + (2));
i = G__19235;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__13738__auto__ = (function (){var G__19239 = k;
return goog.isString(G__19239);
})();
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_19240 = (0);
while(true){
if((i_19240 < l)){
(narr[i_19240] = (arr[i_19240]));

var G__19241 = (i_19240 + (1));
i_19240 = G__19241;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__19243 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__19243) : cljs.core.keys.call(null,G__19243));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__19244 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__19244) : cljs.core.vals.call(null,G__19244));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__19245 = cljs.core.seq(coll);
var chunk__19246 = null;
var count__19247 = (0);
var i__19248 = (0);
while(true){
if((i__19248 < count__19247)){
var vec__19249 = chunk__19246.cljs$core$IIndexed$_nth$arity$2(null,i__19248);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19249,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19249,(1),null);
var G__19250_19263 = v;
var G__19251_19264 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19250_19263,G__19251_19264) : f.call(null,G__19250_19263,G__19251_19264));

var G__19265 = seq__19245;
var G__19266 = chunk__19246;
var G__19267 = count__19247;
var G__19268 = (i__19248 + (1));
seq__19245 = G__19265;
chunk__19246 = G__19266;
count__19247 = G__19267;
i__19248 = G__19268;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19245);
if(temp__4126__auto__){
var seq__19245__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19245__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__19245__$1);
var G__19269 = cljs.core.chunk_rest(seq__19245__$1);
var G__19270 = c__14525__auto__;
var G__19271 = cljs.core.count(c__14525__auto__);
var G__19272 = (0);
seq__19245 = G__19269;
chunk__19246 = G__19270;
count__19247 = G__19271;
i__19248 = G__19272;
continue;
} else {
var vec__19252 = cljs.core.first(seq__19245__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19252,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19252,(1),null);
var G__19253_19273 = v;
var G__19254_19274 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19253_19273,G__19254_19274) : f.call(null,G__19253_19273,G__19254_19274));

var G__19275 = cljs.core.next(seq__19245__$1);
var G__19276 = null;
var G__19277 = (0);
var G__19278 = (0);
seq__19245 = G__19275;
chunk__19246 = G__19276;
count__19247 = G__19277;
i__19248 = G__19278;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__19255 = init__$1;
var G__19256 = (self__.arr[i]);
var G__19257 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19255,G__19256,G__19257) : f.call(null,G__19255,G__19256,G__19257));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__19258 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19258) : cljs.core.deref.call(null,G__19258));
} else {
var G__19279 = (i + (2));
var G__19280 = init__$2;
i = G__19279;
init__$1 = G__19280;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__19259 = other;
if(G__19259){
var bit__14412__auto__ = (G__19259.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__14412__auto__) || (G__19259.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__19281 = (i + (2));
i = G__19281;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj19261 = {};
return obj19261;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__19282 = (s + (2));
var G__19283 = d;
s = G__19282;
d = G__19283;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__19284 = (s + (2));
var G__19285 = (d + (2));
s = G__19284;
d = G__19285;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__19262 = cljs.core.aclone(self__.arr);
(G__19262[(idx + (1))] = v);

return G__19262;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__19286 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__19287 = cljs.core.next(es);
ret = G__19286;
es = G__19287;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__19288 = null;
var G__19288__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19288__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19288 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19288__2.call(this,self__,k);
case 3:
return G__19288__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19288.cljs$core$IFn$_invoke$arity$2 = G__19288__2;
G__19288.cljs$core$IFn$_invoke$arity$3 = G__19288__3;
return G__19288;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args19242){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19242)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__19289 = (i + (2));
var G__19290 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__19289;
ret = G__19290;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__19291_19299 = self__.arr;
G__19291_19299.pop();

G__19291_19299.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__19292 = self__.len;
var G__19293 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__19292,G__19293) : cljs.core.array__GT_transient_hash_map.call(null,G__19292,G__19293));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__19294 = o;
if(G__19294){
var bit__14419__auto__ = (G__19294.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14419__auto__) || (G__19294.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__19294.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__19294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__19294);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__19295 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19295) : cljs.core.key.call(null,G__19295));
})(),(function (){var G__19296 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19296) : cljs.core.val.call(null,G__19296));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__19300 = cljs.core.next(es);
var G__19301 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__19297 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19297) : cljs.core.key.call(null,G__19297));
})(),(function (){var G__19298 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19298) : cljs.core.val.call(null,G__19298));
})());
es = G__19300;
tcoll__$2 = G__19301;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__19302 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__19303 = (i + (2));
out = G__19302;
i = G__19303;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__19306 = cljs.core.aclone(arr);
(G__19306[i] = a);

return G__19306;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__19307 = cljs.core.aclone(arr);
(G__19307[i] = a);

(G__19307[j] = b);

return G__19307;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__19312 = init__$1;
var G__19313 = k;
var G__19314 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19312,G__19313,G__19314) : f.call(null,G__19312,G__19313,G__19314));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__19315 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19315) : cljs.core.deref.call(null,G__19315));
} else {
var G__19316 = (i + (2));
var G__19317 = init__$2;
i = G__19316;
init__$1 = G__19317;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__19318 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__19318) : cljs.core.create_inode_seq.call(null,G__19318));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_19332 = (0);
var j_19333 = (0);
while(true){
if((i_19332 < (32))){
if((((self__.bitmap >>> i_19332) & (1)) === (0))){
var G__19334 = (i_19332 + (1));
var G__19335 = j_19333;
i_19332 = G__19334;
j_19333 = G__19335;
continue;
} else {
(nodes[i_19332] = ((!(((self__.arr[j_19333]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_19333])),(self__.arr[j_19333]),(self__.arr[(j_19333 + (1))]),added_leaf_QMARK_):(self__.arr[(j_19333 + (1))])));

var G__19336 = (i_19332 + (1));
var G__19337 = (j_19333 + (2));
i_19332 = G__19336;
j_19333 = G__19337;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__19319 = edit__$1;
var G__19320 = (shift + (5));
var G__19321 = key_or_nil;
var G__19322 = val_or_node;
var G__19323 = hash;
var G__19324 = key;
var G__19325 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__19319,G__19320,G__19321,G__19322,G__19323,G__19324,G__19325) : cljs.core.create_node.call(null,G__19319,G__19320,G__19321,G__19322,G__19323,G__19324,G__19325));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_19338 = (0);
var j_19339 = (0);
while(true){
if((i_19338 < (32))){
if((((self__.bitmap >>> i_19338) & (1)) === (0))){
var G__19340 = (i_19338 + (1));
var G__19341 = j_19339;
i_19338 = G__19340;
j_19339 = G__19341;
continue;
} else {
(nodes[i_19338] = ((!(((self__.arr[j_19339]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_19339])),(self__.arr[j_19339]),(self__.arr[(j_19339 + (1))]),added_leaf_QMARK_):(self__.arr[(j_19339 + (1))])));

var G__19342 = (i_19338 + (1));
var G__19343 = (j_19339 + (2));
i_19338 = G__19342;
j_19339 = G__19343;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__19326 = (shift + (5));
var G__19327 = key_or_nil;
var G__19328 = val_or_node;
var G__19329 = hash;
var G__19330 = key;
var G__19331 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__19326,G__19327,G__19328,G__19329,G__19330,G__19331) : cljs.core.create_node.call(null,G__19326,G__19327,G__19328,G__19329,G__19330,G__19331));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__19344 = (i + (1));
var G__19345 = (j + (2));
var G__19346 = (bitmap | ((1) << i));
i = G__19344;
j = G__19345;
bitmap = G__19346;
continue;
} else {
var G__19347 = (i + (1));
var G__19348 = j;
var G__19349 = bitmap;
i = G__19347;
j = G__19348;
bitmap = G__19349;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__19350 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__19350) : cljs.core.create_array_node_seq.call(null,G__19350));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__19351 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19351) : cljs.core.deref.call(null,G__19351));
} else {
var G__19352 = (i + (1));
var G__19353 = init__$2;
i = G__19352;
init__$1 = G__19353;
continue;
}
} else {
var G__19354 = (i + (1));
var G__19355 = init__$1;
i = G__19354;
init__$1 = G__19355;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__19356 = (i + (2));
i = G__19356;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__19357 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__19357) : cljs.core.create_inode_seq.call(null,G__19357));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__19358 = self__.nodes;
var G__19359 = (self__.i + (2));
var G__19360 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19358,G__19359,G__19360) : cljs.core.create_inode_seq.call(null,G__19358,G__19359,G__19360));
} else {
var G__19361 = self__.nodes;
var G__19362 = self__.i;
var G__19363 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19361,G__19362,G__19363) : cljs.core.create_inode_seq.call(null,G__19361,G__19362,G__19363));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__19367 = (j + (2));
j = G__19367;
continue;
}
} else {
var G__19368 = (j + (2));
j = G__19368;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__19369 = null;
var G__19370 = self__.nodes;
var G__19371 = self__.i;
var G__19372 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__19369,G__19370,G__19371,G__19372) : cljs.core.create_array_node_seq.call(null,G__19369,G__19370,G__19371,G__19372));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__19377 = (j + (1));
j = G__19377;
continue;
}
} else {
var G__19378 = (j + (1));
j = G__19378;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__19380 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__19380) : cljs.core.keys.call(null,G__19380));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__19381 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__19381) : cljs.core.vals.call(null,G__19381));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__19382 = cljs.core.seq(coll);
var chunk__19383 = null;
var count__19384 = (0);
var i__19385 = (0);
while(true){
if((i__19385 < count__19384)){
var vec__19386 = chunk__19383.cljs$core$IIndexed$_nth$arity$2(null,i__19385);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19386,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19386,(1),null);
var G__19387_19398 = v;
var G__19388_19399 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19387_19398,G__19388_19399) : f.call(null,G__19387_19398,G__19388_19399));

var G__19400 = seq__19382;
var G__19401 = chunk__19383;
var G__19402 = count__19384;
var G__19403 = (i__19385 + (1));
seq__19382 = G__19400;
chunk__19383 = G__19401;
count__19384 = G__19402;
i__19385 = G__19403;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19382);
if(temp__4126__auto__){
var seq__19382__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19382__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__19382__$1);
var G__19404 = cljs.core.chunk_rest(seq__19382__$1);
var G__19405 = c__14525__auto__;
var G__19406 = cljs.core.count(c__14525__auto__);
var G__19407 = (0);
seq__19382 = G__19404;
chunk__19383 = G__19405;
count__19384 = G__19406;
i__19385 = G__19407;
continue;
} else {
var vec__19389 = cljs.core.first(seq__19382__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19389,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19389,(1),null);
var G__19390_19408 = v;
var G__19391_19409 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19390_19408,G__19391_19409) : f.call(null,G__19390_19408,G__19391_19409));

var G__19410 = cljs.core.next(seq__19382__$1);
var G__19411 = null;
var G__19412 = (0);
var G__19413 = (0);
seq__19382 = G__19410;
chunk__19383 = G__19411;
count__19384 = G__19412;
i__19385 = G__19413;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__19392 = init;
var G__19393 = null;
var G__19394 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19392,G__19393,G__19394) : f.call(null,G__19392,G__19393,G__19394));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__19395 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19395) : cljs.core.deref.call(null,G__19395));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj19397 = {};
return obj19397;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__19414 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__19415 = cljs.core.next(es);
ret = G__19414;
es = G__19415;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__19416 = null;
var G__19416__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19416__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19416 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19416__2.call(this,self__,k);
case 3:
return G__19416__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19416.cljs$core$IFn$_invoke$arity$2 = G__19416__2;
G__19416.cljs$core$IFn$_invoke$arity$3 = G__19416__3;
return G__19416;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args19379){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19379)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__19417 = (i + (2));
var G__19418 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__19417;
ret = G__19418;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__19419 = (i + (1));
var G__19420 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__19419;
out = G__19420;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__19421 = o;
if(G__19421){
var bit__14419__auto__ = (G__19421.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14419__auto__) || (G__19421.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__19421.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__19421);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__19421);
}
})()){
return tcoll.assoc_BANG_((function (){var G__19422 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19422) : cljs.core.key.call(null,G__19422));
})(),(function (){var G__19423 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19423) : cljs.core.val.call(null,G__19423));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__19426 = cljs.core.next(es);
var G__19427 = tcoll__$1.assoc_BANG_((function (){var G__19424 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19424) : cljs.core.key.call(null,G__19424));
})(),(function (){var G__19425 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19425) : cljs.core.val.call(null,G__19425));
})());
es = G__19426;
tcoll__$1 = G__19427;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__19428 = ((ascending_QMARK_)?t.left:t.right);
var G__19429 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__19428;
stack__$1 = G__19429;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__19442 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19442) : cljs.core.deref.call(null,G__19442));
} else {
var init__$2 = (function (){var G__19443 = init__$1;
var G__19444 = node.key;
var G__19445 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19443,G__19444,G__19445) : f.call(null,G__19443,G__19444,G__19445));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__19446 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19446) : cljs.core.deref.call(null,G__19446));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__19447 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19447) : cljs.core.deref.call(null,G__19447));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__19449 = null;
var G__19449__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19449__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19449 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19449__2.call(this,self__,k);
case 3:
return G__19449__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19449.cljs$core$IFn$_invoke$arity$2 = G__19449__2;
G__19449.cljs$core$IFn$_invoke$arity$3 = G__19449__3;
return G__19449;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args19448){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19448)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__19451 = null;
var G__19451__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19451__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19451 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19451__2.call(this,self__,k);
case 3:
return G__19451__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19451.cljs$core$IFn$_invoke$arity$2 = G__19451__2;
G__19451.cljs$core$IFn$_invoke$arity$3 = G__19451__3;
return G__19451;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args19450){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19450)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__19464 = k;
var G__19465 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19464,G__19465) : comp.call(null,G__19464,G__19465));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__19484 = k;
var G__19485 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19484,G__19485) : comp.call(null,G__19484,G__19485));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__19496 = k;
var G__19497 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19496,G__19497) : comp.call(null,G__19496,G__19497));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__19499 = cljs.core.seq(coll);
var chunk__19500 = null;
var count__19501 = (0);
var i__19502 = (0);
while(true){
if((i__19502 < count__19501)){
var vec__19503 = chunk__19500.cljs$core$IIndexed$_nth$arity$2(null,i__19502);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19503,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19503,(1),null);
var G__19504_19516 = v;
var G__19505_19517 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19504_19516,G__19505_19517) : f.call(null,G__19504_19516,G__19505_19517));

var G__19518 = seq__19499;
var G__19519 = chunk__19500;
var G__19520 = count__19501;
var G__19521 = (i__19502 + (1));
seq__19499 = G__19518;
chunk__19500 = G__19519;
count__19501 = G__19520;
i__19502 = G__19521;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19499);
if(temp__4126__auto__){
var seq__19499__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19499__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__19499__$1);
var G__19522 = cljs.core.chunk_rest(seq__19499__$1);
var G__19523 = c__14525__auto__;
var G__19524 = cljs.core.count(c__14525__auto__);
var G__19525 = (0);
seq__19499 = G__19522;
chunk__19500 = G__19523;
count__19501 = G__19524;
i__19502 = G__19525;
continue;
} else {
var vec__19506 = cljs.core.first(seq__19499__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19506,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19506,(1),null);
var G__19507_19526 = v;
var G__19508_19527 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19507_19526,G__19508_19527) : f.call(null,G__19507_19526,G__19508_19527));

var G__19528 = cljs.core.next(seq__19499__$1);
var G__19529 = null;
var G__19530 = (0);
var G__19531 = (0);
seq__19499 = G__19528;
chunk__19500 = G__19529;
count__19501 = G__19530;
i__19502 = G__19531;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__19509 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__19509) : cljs.core.keys.call(null,G__19509));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__19510 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__19510) : cljs.core.vals.call(null,G__19510));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__19511 = k;
var G__19512 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__19511,G__19512) : self__.comp.call(null,G__19511,G__19512));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__19532 = t.left;
t = G__19532;
continue;
} else {
var G__19533 = t.right;
t = G__19533;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__19534 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__19535 = cljs.core.next(es);
ret = G__19534;
es = G__19535;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__19536 = null;
var G__19536__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19536__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19536 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19536__2.call(this,self__,k);
case 3:
return G__19536__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19536.cljs$core$IFn$_invoke$arity$2 = G__19536__2;
G__19536.cljs$core$IFn$_invoke$arity$3 = G__19536__3;
return G__19536;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args19498){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19498)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__19513 = k;
var G__19514 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__19513,G__19514) : self__.comp.call(null,G__19513,G__19514));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__19537 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__19538 = t.left;
stack = G__19537;
t = G__19538;
continue;
} else {
var G__19539 = stack;
var G__19540 = t.right;
stack = G__19539;
t = G__19540;
continue;
}
} else {
if((c > (0))){
var G__19541 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__19542 = t.right;
stack = G__19541;
t = G__19542;
continue;
} else {
var G__19543 = stack;
var G__19544 = t.left;
stack = G__19543;
t = G__19544;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__19515 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19515) : cljs.core.key.call(null,G__19515));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__19545 = cljs.core.nnext(in$);
var G__19546 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__19545;
out = G__19546;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19547__i = 0, G__19547__a = new Array(arguments.length -  0);
while (G__19547__i < G__19547__a.length) {G__19547__a[G__19547__i] = arguments[G__19547__i + 0]; ++G__19547__i;}
  keyvals = new cljs.core.IndexedSeq(G__19547__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__19548){
var keyvals = cljs.core.seq(arglist__19548);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19549__i = 0, G__19549__a = new Array(arguments.length -  0);
while (G__19549__i < G__19549__a.length) {G__19549__a[G__19549__i] = arguments[G__19549__i + 0]; ++G__19549__i;}
  keyvals = new cljs.core.IndexedSeq(G__19549__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__19550){
var keyvals = cljs.core.seq(arglist__19550);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj19554 = {};
return obj19554;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__19555 = cljs.core.nnext(kvs);
kvs = G__19555;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19556__i = 0, G__19556__a = new Array(arguments.length -  0);
while (G__19556__i < G__19556__a.length) {G__19556__a[G__19556__i] = arguments[G__19556__i + 0]; ++G__19556__i;}
  keyvals = new cljs.core.IndexedSeq(G__19556__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__19557){
var keyvals = cljs.core.seq(arglist__19557);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__19558 = cljs.core.nnext(in$);
var G__19559 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__19558;
out = G__19559;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19560__i = 0, G__19560__a = new Array(arguments.length -  0);
while (G__19560__i < G__19560__a.length) {G__19560__a[G__19560__i] = arguments[G__19560__i + 0]; ++G__19560__i;}
  keyvals = new cljs.core.IndexedSeq(G__19560__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__19561){
var keyvals = cljs.core.seq(arglist__19561);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__19562 = cljs.core.nnext(in$);
var G__19563 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__19562;
out = G__19563;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__19564__i = 0, G__19564__a = new Array(arguments.length -  1);
while (G__19564__i < G__19564__a.length) {G__19564__a[G__19564__i] = arguments[G__19564__i + 1]; ++G__19564__i;}
  keyvals = new cljs.core.IndexedSeq(G__19564__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__19565){
var comparator = cljs.core.first(arglist__19565);
var keyvals = cljs.core.rest(arglist__19565);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__19566 = self__.mseq;
if(G__19566){
var bit__14419__auto__ = (G__19566.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14419__auto__) || (G__19566.cljs$core$INext$)){
return true;
} else {
if((!G__19566.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19566);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19566);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__19567 = self__.mseq;
if(G__19567){
var bit__14419__auto__ = (G__19567.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14419__auto__) || (G__19567.cljs$core$INext$)){
return true;
} else {
if((!G__19567.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19567);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19567);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__19568 = self__.mseq;
if(G__19568){
var bit__14419__auto__ = (G__19568.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14419__auto__) || (G__19568.cljs$core$INext$)){
return true;
} else {
if((!G__19568.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19568);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19568);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__19569 = self__.mseq;
if(G__19569){
var bit__14419__auto__ = (G__19569.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14419__auto__) || (G__19569.cljs$core$INext$)){
return true;
} else {
if((!G__19569.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19569);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__19569);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__19570_SHARP_,p2__19571_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13738__auto__ = p1__19570_SHARP_;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__19571_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__19572__i = 0, G__19572__a = new Array(arguments.length -  0);
while (G__19572__i < G__19572__a.length) {G__19572__a[G__19572__i] = arguments[G__19572__i + 0]; ++G__19572__i;}
  maps = new cljs.core.IndexedSeq(G__19572__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__19573){
var maps = cljs.core.seq(arglist__19573);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__19576 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__19577 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19576,G__19577) : f.call(null,G__19576,G__19577));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__13738__auto__ = m1;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__19578__i = 0, G__19578__a = new Array(arguments.length -  1);
while (G__19578__i < G__19578__a.length) {G__19578__a[G__19578__i] = arguments[G__19578__i + 1]; ++G__19578__i;}
  maps = new cljs.core.IndexedSeq(G__19578__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__19579){
var f = cljs.core.first(arglist__19579);
var maps = cljs.core.rest(arglist__19579);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__19580 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__19581 = cljs.core.next(keys);
ret = G__19580;
keys = G__19581;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__19584 = cljs.core.seq(coll);
var chunk__19585 = null;
var count__19586 = (0);
var i__19587 = (0);
while(true){
if((i__19587 < count__19586)){
var vec__19588 = chunk__19585.cljs$core$IIndexed$_nth$arity$2(null,i__19587);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19588,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19588,(1),null);
var G__19589_19594 = v;
var G__19590_19595 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19589_19594,G__19590_19595) : f.call(null,G__19589_19594,G__19590_19595));

var G__19596 = seq__19584;
var G__19597 = chunk__19585;
var G__19598 = count__19586;
var G__19599 = (i__19587 + (1));
seq__19584 = G__19596;
chunk__19585 = G__19597;
count__19586 = G__19598;
i__19587 = G__19599;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19584);
if(temp__4126__auto__){
var seq__19584__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19584__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__19584__$1);
var G__19600 = cljs.core.chunk_rest(seq__19584__$1);
var G__19601 = c__14525__auto__;
var G__19602 = cljs.core.count(c__14525__auto__);
var G__19603 = (0);
seq__19584 = G__19600;
chunk__19585 = G__19601;
count__19586 = G__19602;
i__19587 = G__19603;
continue;
} else {
var vec__19591 = cljs.core.first(seq__19584__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19591,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19591,(1),null);
var G__19592_19604 = v;
var G__19593_19605 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19592_19604,G__19593_19605) : f.call(null,G__19592_19604,G__19593_19605));

var G__19606 = cljs.core.next(seq__19584__$1);
var G__19607 = null;
var G__19608 = (0);
var G__19609 = (0);
seq__19584 = G__19606;
chunk__19585 = G__19607;
count__19586 = G__19608;
i__19587 = G__19609;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__19582_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__19582_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__19610 = null;
var G__19610__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19610__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19610 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19610__2.call(this,self__,k);
case 3:
return G__19610__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19610.cljs$core$IFn$_invoke$arity$2 = G__19610__2;
G__19610.cljs$core$IFn$_invoke$arity$3 = G__19610__3;
return G__19610;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args19583){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19583)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__19611 = (i + (1));
var G__19612 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__19611;
out = G__19612;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__19613 = (i + (1));
var G__19614 = cljs.core._conj_BANG_(out,(items[i]));
i = G__19613;
out = G__19614;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__19616 = null;
var G__19616__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__19616__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__19616 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19616__2.call(this,self__,k);
case 3:
return G__19616__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19616.cljs$core$IFn$_invoke$arity$2 = G__19616__2;
G__19616.cljs$core$IFn$_invoke$arity$3 = G__19616__3;
return G__19616;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args19615){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19615)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__19619 = cljs.core.seq(coll);
var chunk__19620 = null;
var count__19621 = (0);
var i__19622 = (0);
while(true){
if((i__19622 < count__19621)){
var vec__19623 = chunk__19620.cljs$core$IIndexed$_nth$arity$2(null,i__19622);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19623,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19623,(1),null);
var G__19624_19629 = v;
var G__19625_19630 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19624_19629,G__19625_19630) : f.call(null,G__19624_19629,G__19625_19630));

var G__19631 = seq__19619;
var G__19632 = chunk__19620;
var G__19633 = count__19621;
var G__19634 = (i__19622 + (1));
seq__19619 = G__19631;
chunk__19620 = G__19632;
count__19621 = G__19633;
i__19622 = G__19634;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19619);
if(temp__4126__auto__){
var seq__19619__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19619__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__19619__$1);
var G__19635 = cljs.core.chunk_rest(seq__19619__$1);
var G__19636 = c__14525__auto__;
var G__19637 = cljs.core.count(c__14525__auto__);
var G__19638 = (0);
seq__19619 = G__19635;
chunk__19620 = G__19636;
count__19621 = G__19637;
i__19622 = G__19638;
continue;
} else {
var vec__19626 = cljs.core.first(seq__19619__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19626,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19626,(1),null);
var G__19627_19639 = v;
var G__19628_19640 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19627_19639,G__19628_19640) : f.call(null,G__19627_19639,G__19628_19640));

var G__19641 = cljs.core.next(seq__19619__$1);
var G__19642 = null;
var G__19643 = (0);
var G__19644 = (0);
seq__19619 = G__19641;
chunk__19620 = G__19642;
count__19621 = G__19643;
i__19622 = G__19644;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__19617_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__19617_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__19645 = null;
var G__19645__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__19645__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__19645 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__19645__2.call(this,self__,k);
case 3:
return G__19645__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19645.cljs$core$IFn$_invoke$arity$2 = G__19645__2;
G__19645.cljs$core$IFn$_invoke$arity$3 = G__19645__3;
return G__19645;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args19618){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19618)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__14619__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__14619__auto__.length)){
var G__19646 = (i + (1));
var G__19647 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__19646;
res = G__19647;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__19648 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__19649 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__19648;
out = G__19649;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__19650__delegate = function (keys){
return cljs.core.set(keys);
};
var G__19650 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__19651__i = 0, G__19651__a = new Array(arguments.length -  0);
while (G__19651__i < G__19651__a.length) {G__19651__a[G__19651__i] = arguments[G__19651__i + 0]; ++G__19651__i;}
  keys = new cljs.core.IndexedSeq(G__19651__a,0);
} 
return G__19650__delegate.call(this,keys);};
G__19650.cljs$lang$maxFixedArity = 0;
G__19650.cljs$lang$applyTo = (function (arglist__19652){
var keys = cljs.core.seq(arglist__19652);
return G__19650__delegate(keys);
});
G__19650.cljs$core$IFn$_invoke$arity$variadic = G__19650__delegate;
return G__19650;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__19653 = null;
if (arguments.length > 0) {
var G__19654__i = 0, G__19654__a = new Array(arguments.length -  0);
while (G__19654__i < G__19654__a.length) {G__19654__a[G__19654__i] = arguments[G__19654__i + 0]; ++G__19654__i;}
G__19653 = new cljs.core.IndexedSeq(G__19654__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__19653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__19655__i = 0, G__19655__a = new Array(arguments.length -  0);
while (G__19655__i < G__19655__a.length) {G__19655__a[G__19655__i] = arguments[G__19655__i + 0]; ++G__19655__i;}
  keys = new cljs.core.IndexedSeq(G__19655__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__19656){
var keys = cljs.core.seq(arglist__19656);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__19657__i = 0, G__19657__a = new Array(arguments.length -  1);
while (G__19657__i < G__19657__a.length) {G__19657__a[G__19657__i] = arguments[G__19657__i + 1]; ++G__19657__i;}
  keys = new cljs.core.IndexedSeq(G__19657__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__19658){
var comparator = cljs.core.first(arglist__19658);
var keys = cljs.core.rest(arglist__19658);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__19659_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__19659_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__19659_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__19660_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__19660_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__19660_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__19681 = null;
var G__19681__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19681__1 = (function (result){
var G__19671 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19671) : rf.call(null,G__19671));
});
var G__19681__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__19672 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19672) : cljs.core.deref.call(null,G__19672));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__19673 = result;
var G__19674 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19673,G__19674) : rf.call(null,G__19673,G__19674));
}
});
G__19681 = function(result,input){
switch(arguments.length){
case 0:
return G__19681__0.call(this);
case 1:
return G__19681__1.call(this,result);
case 2:
return G__19681__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19681.cljs$core$IFn$_invoke$arity$0 = G__19681__0;
G__19681.cljs$core$IFn$_invoke$arity$1 = G__19681__1;
G__19681.cljs$core$IFn$_invoke$arity$2 = G__19681__2;
return G__19681;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__19679,seen__$1){
while(true){
var vec__19680 = p__19679;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19680,(0),null);
var xs__$1 = vec__19680;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__19682 = cljs.core.rest(s);
var G__19683 = seen__$1;
p__19679 = G__19682;
seen__$1 = G__19683;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__19684 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__19685 = cljs.core.next(s__$1);
ret = G__19684;
s__$1 = G__19685;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__19687 = x;
if(G__19687){
var bit__14412__auto__ = (G__19687.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__14412__auto__) || (G__19687.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__19688 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__19689 = cljs.core.next(ks);
var G__19690 = cljs.core.next(vs);
map = G__19688;
ks = G__19689;
vs = G__19690;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__19701 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19701) : k.call(null,G__19701));
})() > (function (){var G__19702 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19702) : k.call(null,G__19702));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__19703__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__19691_SHARP_,p2__19692_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__19691_SHARP_,p2__19692_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__19703 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__19704__i = 0, G__19704__a = new Array(arguments.length -  3);
while (G__19704__i < G__19704__a.length) {G__19704__a[G__19704__i] = arguments[G__19704__i + 3]; ++G__19704__i;}
  more = new cljs.core.IndexedSeq(G__19704__a,0);
} 
return G__19703__delegate.call(this,k,x,y,more);};
G__19703.cljs$lang$maxFixedArity = 3;
G__19703.cljs$lang$applyTo = (function (arglist__19705){
var k = cljs.core.first(arglist__19705);
arglist__19705 = cljs.core.next(arglist__19705);
var x = cljs.core.first(arglist__19705);
arglist__19705 = cljs.core.next(arglist__19705);
var y = cljs.core.first(arglist__19705);
var more = cljs.core.rest(arglist__19705);
return G__19703__delegate(k,x,y,more);
});
G__19703.cljs$core$IFn$_invoke$arity$variadic = G__19703__delegate;
return G__19703;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__19706 = null;
if (arguments.length > 3) {
var G__19707__i = 0, G__19707__a = new Array(arguments.length -  3);
while (G__19707__i < G__19707__a.length) {G__19707__a[G__19707__i] = arguments[G__19707__i + 3]; ++G__19707__i;}
G__19706 = new cljs.core.IndexedSeq(G__19707__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__19706);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__19718 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19718) : k.call(null,G__19718));
})() < (function (){var G__19719 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__19719) : k.call(null,G__19719));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__19720__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__19708_SHARP_,p2__19709_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__19708_SHARP_,p2__19709_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__19720 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__19721__i = 0, G__19721__a = new Array(arguments.length -  3);
while (G__19721__i < G__19721__a.length) {G__19721__a[G__19721__i] = arguments[G__19721__i + 3]; ++G__19721__i;}
  more = new cljs.core.IndexedSeq(G__19721__a,0);
} 
return G__19720__delegate.call(this,k,x,y,more);};
G__19720.cljs$lang$maxFixedArity = 3;
G__19720.cljs$lang$applyTo = (function (arglist__19722){
var k = cljs.core.first(arglist__19722);
arglist__19722 = cljs.core.next(arglist__19722);
var x = cljs.core.first(arglist__19722);
arglist__19722 = cljs.core.next(arglist__19722);
var y = cljs.core.first(arglist__19722);
var more = cljs.core.rest(arglist__19722);
return G__19720__delegate(k,x,y,more);
});
G__19720.cljs$core$IFn$_invoke$arity$variadic = G__19720__delegate;
return G__19720;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__19723 = null;
if (arguments.length > 3) {
var G__19724__i = 0, G__19724__a = new Array(arguments.length -  3);
while (G__19724__i < G__19724__a.length) {G__19724__a[G__19724__i] = arguments[G__19724__i + 3]; ++G__19724__i;}
G__19723 = new cljs.core.IndexedSeq(G__19724__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__19723);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__19741 = null;
var G__19741__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19741__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__19736 = result;
var G__19737 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19736,G__19737) : rf.call(null,G__19736,G__19737));
})());
})());
var G__19738 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19738) : rf.call(null,G__19738));
});
var G__19741__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__19739 = result;
var G__19740 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19739,G__19740) : rf.call(null,G__19739,G__19740));
} else {
return result;
}
});
G__19741 = function(result,input){
switch(arguments.length){
case 0:
return G__19741__0.call(this);
case 1:
return G__19741__1.call(this,result);
case 2:
return G__19741__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19741.cljs$core$IFn$_invoke$arity$0 = G__19741__0;
G__19741.cljs$core$IFn$_invoke$arity$1 = G__19741__1;
G__19741.cljs$core$IFn$_invoke$arity$2 = G__19741__2;
return G__19741;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__19754 = null;
var G__19754__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19754__1 = (function (result){
var G__19749 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19749) : rf.call(null,G__19749));
});
var G__19754__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__19750 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19750) : pred.call(null,G__19750));
})())){
var G__19751 = result;
var G__19752 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19751,G__19752) : rf.call(null,G__19751,G__19752));
} else {
return cljs.core.reduced(result);
}
});
G__19754 = function(result,input){
switch(arguments.length){
case 0:
return G__19754__0.call(this);
case 1:
return G__19754__1.call(this,result);
case 2:
return G__19754__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19754.cljs$core$IFn$_invoke$arity$0 = G__19754__0;
G__19754.cljs$core$IFn$_invoke$arity$1 = G__19754__1;
G__19754.cljs$core$IFn$_invoke$arity$2 = G__19754__2;
return G__19754;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__19753 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19753) : pred.call(null,G__19753));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__19759 = (function (){var G__19761 = cljs.core._entry_key(sc,e);
var G__19762 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__19761,G__19762) : comp.call(null,G__19761,G__19762));
})();
var G__19760 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__19759,G__19760) : test.call(null,G__19759,G__19760));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19766 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19766,(0),null);
var s = vec__19766;
if(cljs.core.truth_((function (){var G__19767 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__19767) : include.call(null,G__19767));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19768 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19768,(0),null);
var s = vec__19768;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19772 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19772,(0),null);
var s = vec__19772;
if(cljs.core.truth_((function (){var G__19773 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__19773) : include.call(null,G__19773));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__19774 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19774,(0),null);
var s = vec__19774;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__19775 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19775) : Math.ceil.call(null,G__19775));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__14159__auto__ = self__.__hash;
if(!((h__14159__auto__ == null))){
return h__14159__auto__;
} else {
var h__14159__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__14159__auto____$1;

return h__14159__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__19776 = ret;
var G__19777 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19776,G__19777) : f.call(null,G__19776,G__19777));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__19778 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19778) : cljs.core.deref.call(null,G__19778));
} else {
var G__19779 = (i + self__.step);
var G__19780 = ret__$1;
i = G__19779;
ret = G__19780;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__19798 = null;
var G__19798__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19798__1 = (function (result){
var G__19795 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19795) : rf.call(null,G__19795));
});
var G__19798__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__19796 = result;
var G__19797 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19796,G__19797) : rf.call(null,G__19796,G__19797));
} else {
return result;
}
});
G__19798 = function(result,input){
switch(arguments.length){
case 0:
return G__19798__0.call(this);
case 1:
return G__19798__1.call(this,result);
case 2:
return G__19798__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19798.cljs$core$IFn$_invoke$arity$0 = G__19798__0;
G__19798.cljs$core$IFn$_invoke$arity$1 = G__19798__1;
G__19798.cljs$core$IFn$_invoke$arity$2 = G__19798__2;
return G__19798;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__19820 = null;
var G__19820__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__19820__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__19811 = result;
var G__19812 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19811,G__19812) : rf.call(null,G__19811,G__19812));
})());
})());
var G__19813 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19813) : rf.call(null,G__19813));
});
var G__19820__2 = (function (result,input){
var pval = (function (){var G__19814 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19814) : cljs.core.deref.call(null,G__19814));
})();
var val = (function (){var G__19815 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19815) : f.call(null,G__19815));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__19816 = result;
var G__19817 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19816,G__19817) : rf.call(null,G__19816,G__19817));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__19820 = function(result,input){
switch(arguments.length){
case 0:
return G__19820__0.call(this);
case 1:
return G__19820__1.call(this,result);
case 2:
return G__19820__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19820.cljs$core$IFn$_invoke$arity$0 = G__19820__0;
G__19820.cljs$core$IFn$_invoke$arity$1 = G__19820__1;
G__19820.cljs$core$IFn$_invoke$arity$2 = G__19820__2;
return G__19820;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__19818 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19818) : f.call(null,G__19818));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__19799_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__19819 = p1__19799_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19819) : f.call(null,G__19819));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__19829 = init;
var G__19830 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19829,G__19830) : f.call(null,G__19829,G__19830));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__19925 = null;
var G__19925__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__19925__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19883 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19883) : f.call(null,G__19883));
})()],null));
});
var G__19925__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19884 = x;
var G__19885 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19884,G__19885) : f.call(null,G__19884,G__19885));
})()],null));
});
var G__19925__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19886 = x;
var G__19887 = y;
var G__19888 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19886,G__19887,G__19888) : f.call(null,G__19886,G__19887,G__19888));
})()],null));
});
var G__19925__4 = (function() { 
var G__19926__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__19926 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19927__i = 0, G__19927__a = new Array(arguments.length -  3);
while (G__19927__i < G__19927__a.length) {G__19927__a[G__19927__i] = arguments[G__19927__i + 3]; ++G__19927__i;}
  args = new cljs.core.IndexedSeq(G__19927__a,0);
} 
return G__19926__delegate.call(this,x,y,z,args);};
G__19926.cljs$lang$maxFixedArity = 3;
G__19926.cljs$lang$applyTo = (function (arglist__19928){
var x = cljs.core.first(arglist__19928);
arglist__19928 = cljs.core.next(arglist__19928);
var y = cljs.core.first(arglist__19928);
arglist__19928 = cljs.core.next(arglist__19928);
var z = cljs.core.first(arglist__19928);
var args = cljs.core.rest(arglist__19928);
return G__19926__delegate(x,y,z,args);
});
G__19926.cljs$core$IFn$_invoke$arity$variadic = G__19926__delegate;
return G__19926;
})()
;
G__19925 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19925__0.call(this);
case 1:
return G__19925__1.call(this,x);
case 2:
return G__19925__2.call(this,x,y);
case 3:
return G__19925__3.call(this,x,y,z);
default:
var G__19929 = null;
if (arguments.length > 3) {
var G__19930__i = 0, G__19930__a = new Array(arguments.length -  3);
while (G__19930__i < G__19930__a.length) {G__19930__a[G__19930__i] = arguments[G__19930__i + 3]; ++G__19930__i;}
G__19929 = new cljs.core.IndexedSeq(G__19930__a,0);
}
return G__19925__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19929);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19925.cljs$lang$maxFixedArity = 3;
G__19925.cljs$lang$applyTo = G__19925__4.cljs$lang$applyTo;
G__19925.cljs$core$IFn$_invoke$arity$0 = G__19925__0;
G__19925.cljs$core$IFn$_invoke$arity$1 = G__19925__1;
G__19925.cljs$core$IFn$_invoke$arity$2 = G__19925__2;
G__19925.cljs$core$IFn$_invoke$arity$3 = G__19925__3;
G__19925.cljs$core$IFn$_invoke$arity$variadic = G__19925__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19925;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__19931 = null;
var G__19931__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__19931__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19889 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19889) : f.call(null,G__19889));
})(),(function (){var G__19890 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19890) : g.call(null,G__19890));
})()],null));
});
var G__19931__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19891 = x;
var G__19892 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19891,G__19892) : f.call(null,G__19891,G__19892));
})(),(function (){var G__19893 = x;
var G__19894 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19893,G__19894) : g.call(null,G__19893,G__19894));
})()],null));
});
var G__19931__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19895 = x;
var G__19896 = y;
var G__19897 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19895,G__19896,G__19897) : f.call(null,G__19895,G__19896,G__19897));
})(),(function (){var G__19898 = x;
var G__19899 = y;
var G__19900 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19898,G__19899,G__19900) : g.call(null,G__19898,G__19899,G__19900));
})()],null));
});
var G__19931__4 = (function() { 
var G__19932__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__19932 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19933__i = 0, G__19933__a = new Array(arguments.length -  3);
while (G__19933__i < G__19933__a.length) {G__19933__a[G__19933__i] = arguments[G__19933__i + 3]; ++G__19933__i;}
  args = new cljs.core.IndexedSeq(G__19933__a,0);
} 
return G__19932__delegate.call(this,x,y,z,args);};
G__19932.cljs$lang$maxFixedArity = 3;
G__19932.cljs$lang$applyTo = (function (arglist__19934){
var x = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var y = cljs.core.first(arglist__19934);
arglist__19934 = cljs.core.next(arglist__19934);
var z = cljs.core.first(arglist__19934);
var args = cljs.core.rest(arglist__19934);
return G__19932__delegate(x,y,z,args);
});
G__19932.cljs$core$IFn$_invoke$arity$variadic = G__19932__delegate;
return G__19932;
})()
;
G__19931 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19931__0.call(this);
case 1:
return G__19931__1.call(this,x);
case 2:
return G__19931__2.call(this,x,y);
case 3:
return G__19931__3.call(this,x,y,z);
default:
var G__19935 = null;
if (arguments.length > 3) {
var G__19936__i = 0, G__19936__a = new Array(arguments.length -  3);
while (G__19936__i < G__19936__a.length) {G__19936__a[G__19936__i] = arguments[G__19936__i + 3]; ++G__19936__i;}
G__19935 = new cljs.core.IndexedSeq(G__19936__a,0);
}
return G__19931__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19935);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19931.cljs$lang$maxFixedArity = 3;
G__19931.cljs$lang$applyTo = G__19931__4.cljs$lang$applyTo;
G__19931.cljs$core$IFn$_invoke$arity$0 = G__19931__0;
G__19931.cljs$core$IFn$_invoke$arity$1 = G__19931__1;
G__19931.cljs$core$IFn$_invoke$arity$2 = G__19931__2;
G__19931.cljs$core$IFn$_invoke$arity$3 = G__19931__3;
G__19931.cljs$core$IFn$_invoke$arity$variadic = G__19931__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19931;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__19937 = null;
var G__19937__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__19937__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19901 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19901) : f.call(null,G__19901));
})(),(function (){var G__19902 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__19902) : g.call(null,G__19902));
})(),(function (){var G__19903 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__19903) : h.call(null,G__19903));
})()],null));
});
var G__19937__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19904 = x;
var G__19905 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19904,G__19905) : f.call(null,G__19904,G__19905));
})(),(function (){var G__19906 = x;
var G__19907 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__19906,G__19907) : g.call(null,G__19906,G__19907));
})(),(function (){var G__19908 = x;
var G__19909 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__19908,G__19909) : h.call(null,G__19908,G__19909));
})()],null));
});
var G__19937__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__19910 = x;
var G__19911 = y;
var G__19912 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19910,G__19911,G__19912) : f.call(null,G__19910,G__19911,G__19912));
})(),(function (){var G__19913 = x;
var G__19914 = y;
var G__19915 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__19913,G__19914,G__19915) : g.call(null,G__19913,G__19914,G__19915));
})(),(function (){var G__19916 = x;
var G__19917 = y;
var G__19918 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__19916,G__19917,G__19918) : h.call(null,G__19916,G__19917,G__19918));
})()],null));
});
var G__19937__4 = (function() { 
var G__19938__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__19938 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19939__i = 0, G__19939__a = new Array(arguments.length -  3);
while (G__19939__i < G__19939__a.length) {G__19939__a[G__19939__i] = arguments[G__19939__i + 3]; ++G__19939__i;}
  args = new cljs.core.IndexedSeq(G__19939__a,0);
} 
return G__19938__delegate.call(this,x,y,z,args);};
G__19938.cljs$lang$maxFixedArity = 3;
G__19938.cljs$lang$applyTo = (function (arglist__19940){
var x = cljs.core.first(arglist__19940);
arglist__19940 = cljs.core.next(arglist__19940);
var y = cljs.core.first(arglist__19940);
arglist__19940 = cljs.core.next(arglist__19940);
var z = cljs.core.first(arglist__19940);
var args = cljs.core.rest(arglist__19940);
return G__19938__delegate(x,y,z,args);
});
G__19938.cljs$core$IFn$_invoke$arity$variadic = G__19938__delegate;
return G__19938;
})()
;
G__19937 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19937__0.call(this);
case 1:
return G__19937__1.call(this,x);
case 2:
return G__19937__2.call(this,x,y);
case 3:
return G__19937__3.call(this,x,y,z);
default:
var G__19941 = null;
if (arguments.length > 3) {
var G__19942__i = 0, G__19942__a = new Array(arguments.length -  3);
while (G__19942__i < G__19942__a.length) {G__19942__a[G__19942__i] = arguments[G__19942__i + 3]; ++G__19942__i;}
G__19941 = new cljs.core.IndexedSeq(G__19942__a,0);
}
return G__19937__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19941);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19937.cljs$lang$maxFixedArity = 3;
G__19937.cljs$lang$applyTo = G__19937__4.cljs$lang$applyTo;
G__19937.cljs$core$IFn$_invoke$arity$0 = G__19937__0;
G__19937.cljs$core$IFn$_invoke$arity$1 = G__19937__1;
G__19937.cljs$core$IFn$_invoke$arity$2 = G__19937__2;
G__19937.cljs$core$IFn$_invoke$arity$3 = G__19937__3;
G__19937.cljs$core$IFn$_invoke$arity$variadic = G__19937__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19937;
})()
});
var juxt__4 = (function() { 
var G__19943__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__19944 = null;
var G__19944__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19831_SHARP_,p2__19832_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19831_SHARP_,(function (){return (p2__19832_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__19832_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__19832_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19944__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19833_SHARP_,p2__19834_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19833_SHARP_,(function (){var G__19919 = x;
return (p2__19834_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__19834_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19919) : p2__19834_SHARP_.call(null,G__19919));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19944__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19835_SHARP_,p2__19836_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19835_SHARP_,(function (){var G__19920 = x;
var G__19921 = y;
return (p2__19836_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__19836_SHARP_.cljs$core$IFn$_invoke$arity$2(G__19920,G__19921) : p2__19836_SHARP_.call(null,G__19920,G__19921));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19944__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19837_SHARP_,p2__19838_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19837_SHARP_,(function (){var G__19922 = x;
var G__19923 = y;
var G__19924 = z;
return (p2__19838_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__19838_SHARP_.cljs$core$IFn$_invoke$arity$3(G__19922,G__19923,G__19924) : p2__19838_SHARP_.call(null,G__19922,G__19923,G__19924));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__19944__4 = (function() { 
var G__19945__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__19839_SHARP_,p2__19840_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__19839_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__19840_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__19945 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__19946__i = 0, G__19946__a = new Array(arguments.length -  3);
while (G__19946__i < G__19946__a.length) {G__19946__a[G__19946__i] = arguments[G__19946__i + 3]; ++G__19946__i;}
  args = new cljs.core.IndexedSeq(G__19946__a,0);
} 
return G__19945__delegate.call(this,x,y,z,args);};
G__19945.cljs$lang$maxFixedArity = 3;
G__19945.cljs$lang$applyTo = (function (arglist__19947){
var x = cljs.core.first(arglist__19947);
arglist__19947 = cljs.core.next(arglist__19947);
var y = cljs.core.first(arglist__19947);
arglist__19947 = cljs.core.next(arglist__19947);
var z = cljs.core.first(arglist__19947);
var args = cljs.core.rest(arglist__19947);
return G__19945__delegate(x,y,z,args);
});
G__19945.cljs$core$IFn$_invoke$arity$variadic = G__19945__delegate;
return G__19945;
})()
;
G__19944 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__19944__0.call(this);
case 1:
return G__19944__1.call(this,x);
case 2:
return G__19944__2.call(this,x,y);
case 3:
return G__19944__3.call(this,x,y,z);
default:
var G__19948 = null;
if (arguments.length > 3) {
var G__19949__i = 0, G__19949__a = new Array(arguments.length -  3);
while (G__19949__i < G__19949__a.length) {G__19949__a[G__19949__i] = arguments[G__19949__i + 3]; ++G__19949__i;}
G__19948 = new cljs.core.IndexedSeq(G__19949__a,0);
}
return G__19944__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__19948);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19944.cljs$lang$maxFixedArity = 3;
G__19944.cljs$lang$applyTo = G__19944__4.cljs$lang$applyTo;
G__19944.cljs$core$IFn$_invoke$arity$0 = G__19944__0;
G__19944.cljs$core$IFn$_invoke$arity$1 = G__19944__1;
G__19944.cljs$core$IFn$_invoke$arity$2 = G__19944__2;
G__19944.cljs$core$IFn$_invoke$arity$3 = G__19944__3;
G__19944.cljs$core$IFn$_invoke$arity$variadic = G__19944__4.cljs$core$IFn$_invoke$arity$variadic;
return G__19944;
})()
;})(fs__$1))
};
var G__19943 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__19950__i = 0, G__19950__a = new Array(arguments.length -  3);
while (G__19950__i < G__19950__a.length) {G__19950__a[G__19950__i] = arguments[G__19950__i + 3]; ++G__19950__i;}
  fs = new cljs.core.IndexedSeq(G__19950__a,0);
} 
return G__19943__delegate.call(this,f,g,h,fs);};
G__19943.cljs$lang$maxFixedArity = 3;
G__19943.cljs$lang$applyTo = (function (arglist__19951){
var f = cljs.core.first(arglist__19951);
arglist__19951 = cljs.core.next(arglist__19951);
var g = cljs.core.first(arglist__19951);
arglist__19951 = cljs.core.next(arglist__19951);
var h = cljs.core.first(arglist__19951);
var fs = cljs.core.rest(arglist__19951);
return G__19943__delegate(f,g,h,fs);
});
G__19943.cljs$core$IFn$_invoke$arity$variadic = G__19943__delegate;
return G__19943;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__19952 = null;
if (arguments.length > 3) {
var G__19953__i = 0, G__19953__a = new Array(arguments.length -  3);
while (G__19953__i < G__19953__a.length) {G__19953__a[G__19953__i] = arguments[G__19953__i + 3]; ++G__19953__i;}
G__19952 = new cljs.core.IndexedSeq(G__19953__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__19952);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__19954 = cljs.core.next(coll);
coll = G__19954;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__19955 = (n - (1));
var G__19956 = cljs.core.next(coll);
n = G__19955;
coll = G__19956;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__19960 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19960,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19960,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19960,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_19968 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__19969_19975 = cljs.core.first(coll);
var G__19970_19976 = writer;
var G__19971_19977 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19969_19975,G__19970_19976,G__19971_19977) : print_one.call(null,G__19969_19975,G__19970_19976,G__19971_19977));
} else {
}

var coll_19978__$1 = cljs.core.next(coll);
var n_19979 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_19978__$1) && (((n_19979 == null)) || (!((n_19979 === (0)))))){
cljs.core._write(writer,sep);

var G__19972_19980 = cljs.core.first(coll_19978__$1);
var G__19973_19981 = writer;
var G__19974_19982 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__19972_19980,G__19973_19981,G__19974_19982) : print_one.call(null,G__19972_19980,G__19973_19981,G__19974_19982));

var G__19983 = cljs.core.next(coll_19978__$1);
var G__19984 = (n_19979 - (1));
coll_19978__$1 = G__19983;
n_19979 = G__19984;
continue;
} else {
if((cljs.core.seq(coll_19978__$1)) && ((n_19979 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_19968;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__19989 = cljs.core.seq(ss);
var chunk__19990 = null;
var count__19991 = (0);
var i__19992 = (0);
while(true){
if((i__19992 < count__19991)){
var s = chunk__19990.cljs$core$IIndexed$_nth$arity$2(null,i__19992);
cljs.core._write(writer,s);

var G__19993 = seq__19989;
var G__19994 = chunk__19990;
var G__19995 = count__19991;
var G__19996 = (i__19992 + (1));
seq__19989 = G__19993;
chunk__19990 = G__19994;
count__19991 = G__19995;
i__19992 = G__19996;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__19989);
if(temp__4126__auto__){
var seq__19989__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__19989__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__19989__$1);
var G__19997 = cljs.core.chunk_rest(seq__19989__$1);
var G__19998 = c__14525__auto__;
var G__19999 = cljs.core.count(c__14525__auto__);
var G__20000 = (0);
seq__19989 = G__19997;
chunk__19990 = G__19998;
count__19991 = G__19999;
i__19992 = G__20000;
continue;
} else {
var s = cljs.core.first(seq__19989__$1);
cljs.core._write(writer,s);

var G__20001 = cljs.core.next(seq__19989__$1);
var G__20002 = null;
var G__20003 = (0);
var G__20004 = (0);
seq__19989 = G__20001;
chunk__19990 = G__20002;
count__19991 = G__20003;
i__19992 = G__20004;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__20005__i = 0, G__20005__a = new Array(arguments.length -  1);
while (G__20005__i < G__20005__a.length) {G__20005__a[G__20005__i] = arguments[G__20005__i + 1]; ++G__20005__i;}
  ss = new cljs.core.IndexedSeq(G__20005__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__20006){
var writer = cljs.core.first(arglist__20006);
var ss = cljs.core.rest(arglist__20006);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj20008 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj20008;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__20011 = "[\\\\\"\b\f\n\r\t]";
var G__20012 = "g";
return RegExp(G__20011,G__20012);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__13726__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__13726__auto__)){
var and__13726__auto____$1 = (function (){var G__20026 = obj;
if(G__20026){
var bit__14419__auto__ = (G__20026.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14419__auto__) || (G__20026.cljs$core$IMeta$)){
return true;
} else {
if((!G__20026.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20026);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20026);
}
})();
if(and__13726__auto____$1){
return cljs.core.meta(obj);
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__20027 = obj;
if(G__20027){
var bit__14412__auto__ = (G__20027.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__14412__auto__) || (G__20027.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__20028 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__20029 = pr_writer;
var G__20030 = writer;
var G__20031 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__20028,G__20029,G__20030,G__20031) : cljs.core.print_map.call(null,G__20028,G__20029,G__20030,G__20031));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__20032 = obj;
return goog.isString(G__20032);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__20034 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__20034;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__20033 = obj;
if(G__20033){
var bit__14419__auto__ = (G__20033.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__14419__auto__) || (G__20033.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__20033.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__20033);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__20033);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__20039 = cljs.core.seq(cljs.core.next(objs));
var chunk__20040 = null;
var count__20041 = (0);
var i__20042 = (0);
while(true){
if((i__20042 < count__20041)){
var obj = chunk__20040.cljs$core$IIndexed$_nth$arity$2(null,i__20042);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__20043 = seq__20039;
var G__20044 = chunk__20040;
var G__20045 = count__20041;
var G__20046 = (i__20042 + (1));
seq__20039 = G__20043;
chunk__20040 = G__20044;
count__20041 = G__20045;
i__20042 = G__20046;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__20039);
if(temp__4126__auto__){
var seq__20039__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__20039__$1)){
var c__14525__auto__ = cljs.core.chunk_first(seq__20039__$1);
var G__20047 = cljs.core.chunk_rest(seq__20039__$1);
var G__20048 = c__14525__auto__;
var G__20049 = cljs.core.count(c__14525__auto__);
var G__20050 = (0);
seq__20039 = G__20047;
chunk__20040 = G__20048;
count__20041 = G__20049;
i__20042 = G__20050;
continue;
} else {
var obj = cljs.core.first(seq__20039__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__20051 = cljs.core.next(seq__20039__$1);
var G__20052 = null;
var G__20053 = (0);
var G__20054 = (0);
seq__20039 = G__20051;
chunk__20040 = G__20052;
count__20041 = G__20053;
i__20042 = G__20054;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20055__i = 0, G__20055__a = new Array(arguments.length -  0);
while (G__20055__i < G__20055__a.length) {G__20055__a[G__20055__i] = arguments[G__20055__i + 0]; ++G__20055__i;}
  objs = new cljs.core.IndexedSeq(G__20055__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__20056){
var objs = cljs.core.seq(arglist__20056);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20057__i = 0, G__20057__a = new Array(arguments.length -  0);
while (G__20057__i < G__20057__a.length) {G__20057__a[G__20057__i] = arguments[G__20057__i + 0]; ++G__20057__i;}
  objs = new cljs.core.IndexedSeq(G__20057__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__20058){
var objs = cljs.core.seq(arglist__20058);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20059__i = 0, G__20059__a = new Array(arguments.length -  0);
while (G__20059__i < G__20059__a.length) {G__20059__a[G__20059__i] = arguments[G__20059__i + 0]; ++G__20059__i;}
  objs = new cljs.core.IndexedSeq(G__20059__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__20060){
var objs = cljs.core.seq(arglist__20060);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20061__i = 0, G__20061__a = new Array(arguments.length -  0);
while (G__20061__i < G__20061__a.length) {G__20061__a[G__20061__i] = arguments[G__20061__i + 0]; ++G__20061__i;}
  objs = new cljs.core.IndexedSeq(G__20061__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__20062){
var objs = cljs.core.seq(arglist__20062);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20063__i = 0, G__20063__a = new Array(arguments.length -  0);
while (G__20063__i < G__20063__a.length) {G__20063__a[G__20063__i] = arguments[G__20063__i + 0]; ++G__20063__i;}
  objs = new cljs.core.IndexedSeq(G__20063__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__20064){
var objs = cljs.core.seq(arglist__20064);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20065__i = 0, G__20065__a = new Array(arguments.length -  0);
while (G__20065__i < G__20065__a.length) {G__20065__a[G__20065__i] = arguments[G__20065__i + 0]; ++G__20065__i;}
  objs = new cljs.core.IndexedSeq(G__20065__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__20066){
var objs = cljs.core.seq(arglist__20066);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20067__i = 0, G__20067__a = new Array(arguments.length -  0);
while (G__20067__i < G__20067__a.length) {G__20067__a[G__20067__i] = arguments[G__20067__i + 0]; ++G__20067__i;}
  objs = new cljs.core.IndexedSeq(G__20067__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__20068){
var objs = cljs.core.seq(arglist__20068);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__20069__i = 0, G__20069__a = new Array(arguments.length -  0);
while (G__20069__i < G__20069__a.length) {G__20069__a[G__20069__i] = arguments[G__20069__i + 0]; ++G__20069__i;}
  objs = new cljs.core.IndexedSeq(G__20069__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__20070){
var objs = cljs.core.seq(arglist__20070);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__20077_20083 = cljs.core.key(e);
var G__20078_20084 = w;
var G__20079_20085 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20077_20083,G__20078_20084,G__20079_20085) : print_one.call(null,G__20077_20083,G__20078_20084,G__20079_20085));

cljs.core._write(w," ");

var G__20080 = cljs.core.val(e);
var G__20081 = w;
var G__20082 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20080,G__20081,G__20082) : print_one.call(null,G__20080,G__20081,G__20082));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__20086__i = 0, G__20086__a = new Array(arguments.length -  2);
while (G__20086__i < G__20086__a.length) {G__20086__a[G__20086__i] = arguments[G__20086__i + 2]; ++G__20086__i;}
  args = new cljs.core.IndexedSeq(G__20086__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__20087){
var iref = cljs.core.first(arglist__20087);
arglist__20087 = cljs.core.next(arglist__20087);
var f = cljs.core.first(arglist__20087);
var args = cljs.core.rest(arglist__20087);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__20090 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20090) : cljs.core.atom.call(null,G__20090));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__20092 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20092) : cljs.core.deref.call(null,G__20092));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__20093_SHARP_,p2__20094_SHARP_){
var ret = (function (){var G__20097 = p1__20093_SHARP_;
var G__20098 = p2__20094_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20097,G__20098) : rf.call(null,G__20097,G__20098));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__20101 = null;
var G__20101__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20101__1 = (function (result){
var G__20100 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20100) : rf.call(null,G__20100));
});
var G__20101__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__20101 = function(result,input){
switch(arguments.length){
case 0:
return G__20101__0.call(this);
case 1:
return G__20101__1.call(this,result);
case 2:
return G__20101__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20101.cljs$core$IFn$_invoke$arity$0 = G__20101__0;
G__20101.cljs$core$IFn$_invoke$arity$1 = G__20101__1;
G__20101.cljs$core$IFn$_invoke$arity$2 = G__20101__2;
return G__20101;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__20110 = null;
var G__20110__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20110__1 = (function (result){
var G__20106 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20106) : rf.call(null,G__20106));
});
var G__20110__2 = (function (result,input){
var prior = (function (){var G__20107 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20107) : cljs.core.deref.call(null,G__20107));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__20108 = result;
var G__20109 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20108,G__20109) : rf.call(null,G__20108,G__20109));
}
});
G__20110 = function(result,input){
switch(arguments.length){
case 0:
return G__20110__0.call(this);
case 1:
return G__20110__1.call(this,result);
case 2:
return G__20110__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20110.cljs$core$IFn$_invoke$arity$0 = G__20110__0;
G__20110.cljs$core$IFn$_invoke$arity$1 = G__20110__1;
G__20110.cljs$core$IFn$_invoke$arity$2 = G__20110__2;
return G__20110;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14716__auto__ = this;
return cljs.core.es6_iterator(this__14716__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__20112_SHARP_,p2__20111_SHARP_){
var G__20114 = p2__20111_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__20114) : proc.call(null,G__20114));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj20116 = {};
return obj20116;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__13726__auto__ = x;
if(and__13726__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__13726__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__14382__auto__ = (((x == null))?null:x);
return (function (){var or__13738__auto__ = (cljs.core._clj__GT_js[(function (){var G__20120 = x__14382__auto__;
return goog.typeOf(G__20120);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__13726__auto__ = x;
if(and__13726__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__13726__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__14382__auto__ = (((x == null))?null:x);
return (function (){var or__13738__auto__ = (cljs.core._key__GT_js[(function (){var G__20124 = x__14382__auto__;
return goog.typeOf(G__20124);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__20127 = k;
if(G__20127){
var bit__14419__auto__ = null;
if(cljs.core.truth_((function (){var or__13738__auto__ = bit__14419__auto__;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return G__20127.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__20127.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__20127);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__20127);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__20128 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__20128) : cljs.core.clj__GT_js.call(null,G__20128));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__20144 = x;
if(G__20144){
var bit__14419__auto__ = null;
if(cljs.core.truth_((function (){var or__13738__auto__ = bit__14419__auto__;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return G__20144.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__20144.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__20144);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__20144);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj20146 = {};
return obj20146;
})();
var seq__20147_20157 = cljs.core.seq(x);
var chunk__20148_20158 = null;
var count__20149_20159 = (0);
var i__20150_20160 = (0);
while(true){
if((i__20150_20160 < count__20149_20159)){
var vec__20151_20161 = chunk__20148_20158.cljs$core$IIndexed$_nth$arity$2(null,i__20150_20160);
var k_20162 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20151_20161,(0),null);
var v_20163 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20151_20161,(1),null);
(m[cljs.core.key__GT_js(k_20162)] = clj__GT_js(v_20163));

var G__20164 = seq__20147_20157;
var G__20165 = chunk__20148_20158;
var G__20166 = count__20149_20159;
var G__20167 = (i__20150_20160 + (1));
seq__20147_20157 = G__20164;
chunk__20148_20158 = G__20165;
count__20149_20159 = G__20166;
i__20150_20160 = G__20167;
continue;
} else {
var temp__4126__auto___20168 = cljs.core.seq(seq__20147_20157);
if(temp__4126__auto___20168){
var seq__20147_20169__$1 = temp__4126__auto___20168;
if(cljs.core.chunked_seq_QMARK_(seq__20147_20169__$1)){
var c__14525__auto___20170 = cljs.core.chunk_first(seq__20147_20169__$1);
var G__20171 = cljs.core.chunk_rest(seq__20147_20169__$1);
var G__20172 = c__14525__auto___20170;
var G__20173 = cljs.core.count(c__14525__auto___20170);
var G__20174 = (0);
seq__20147_20157 = G__20171;
chunk__20148_20158 = G__20172;
count__20149_20159 = G__20173;
i__20150_20160 = G__20174;
continue;
} else {
var vec__20152_20175 = cljs.core.first(seq__20147_20169__$1);
var k_20176 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20152_20175,(0),null);
var v_20177 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20152_20175,(1),null);
(m[cljs.core.key__GT_js(k_20176)] = clj__GT_js(v_20177));

var G__20178 = cljs.core.next(seq__20147_20169__$1);
var G__20179 = null;
var G__20180 = (0);
var G__20181 = (0);
seq__20147_20157 = G__20178;
chunk__20148_20158 = G__20179;
count__20149_20159 = G__20180;
i__20150_20160 = G__20181;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__20153_20182 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__20154_20183 = null;
var count__20155_20184 = (0);
var i__20156_20185 = (0);
while(true){
if((i__20156_20185 < count__20155_20184)){
var x_20186__$1 = chunk__20154_20183.cljs$core$IIndexed$_nth$arity$2(null,i__20156_20185);
arr.push(x_20186__$1);

var G__20187 = seq__20153_20182;
var G__20188 = chunk__20154_20183;
var G__20189 = count__20155_20184;
var G__20190 = (i__20156_20185 + (1));
seq__20153_20182 = G__20187;
chunk__20154_20183 = G__20188;
count__20155_20184 = G__20189;
i__20156_20185 = G__20190;
continue;
} else {
var temp__4126__auto___20191 = cljs.core.seq(seq__20153_20182);
if(temp__4126__auto___20191){
var seq__20153_20192__$1 = temp__4126__auto___20191;
if(cljs.core.chunked_seq_QMARK_(seq__20153_20192__$1)){
var c__14525__auto___20193 = cljs.core.chunk_first(seq__20153_20192__$1);
var G__20194 = cljs.core.chunk_rest(seq__20153_20192__$1);
var G__20195 = c__14525__auto___20193;
var G__20196 = cljs.core.count(c__14525__auto___20193);
var G__20197 = (0);
seq__20153_20182 = G__20194;
chunk__20154_20183 = G__20195;
count__20155_20184 = G__20196;
i__20156_20185 = G__20197;
continue;
} else {
var x_20198__$1 = cljs.core.first(seq__20153_20192__$1);
arr.push(x_20198__$1);

var G__20199 = cljs.core.next(seq__20153_20192__$1);
var G__20200 = null;
var G__20201 = (0);
var G__20202 = (0);
seq__20153_20182 = G__20199;
chunk__20154_20183 = G__20200;
count__20155_20184 = G__20201;
i__20156_20185 = G__20202;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj20204 = {};
return obj20204;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__13726__auto__ = x;
if(and__13726__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__13726__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__14382__auto__ = (((x == null))?null:x);
return (function (){var or__13738__auto__ = (cljs.core._js__GT_clj[(function (){var G__20208 = x__14382__auto__;
return goog.typeOf(G__20208);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__20265__delegate = function (x,opts){
var map__20238 = opts;
var map__20238__$1 = ((cljs.core.seq_QMARK_(map__20238))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20238):map__20238);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20238__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__20238,map__20238__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__20254 = x__$1;
if(G__20254){
var bit__14419__auto__ = null;
if(cljs.core.truth_((function (){var or__13738__auto__ = bit__14419__auto__;
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return G__20254.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__20254.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__20254);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__20254);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__14494__auto__ = ((function (map__20238,map__20238__$1,keywordize_keys,keyfn){
return (function iter__20255(s__20256){
return (new cljs.core.LazySeq(null,((function (map__20238,map__20238__$1,keywordize_keys,keyfn){
return (function (){
var s__20256__$1 = s__20256;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__20256__$1);
if(temp__4126__auto__){
var s__20256__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__20256__$2)){
var c__14492__auto__ = cljs.core.chunk_first(s__20256__$2);
var size__14493__auto__ = cljs.core.count(c__14492__auto__);
var b__20258 = cljs.core.chunk_buffer(size__14493__auto__);
if((function (){var i__20257 = (0);
while(true){
if((i__20257 < size__14493__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__14492__auto__,i__20257);
cljs.core.chunk_append(b__20258,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__20263 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20263) : keyfn.call(null,G__20263));
})(),thisfn((x__$1[k]))], null));

var G__20266 = (i__20257 + (1));
i__20257 = G__20266;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__20258),iter__20255(cljs.core.chunk_rest(s__20256__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__20258),null);
}
} else {
var k = cljs.core.first(s__20256__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__20264 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20264) : keyfn.call(null,G__20264));
})(),thisfn((x__$1[k]))], null),iter__20255(cljs.core.rest(s__20256__$2)));
}
} else {
return null;
}
break;
}
});})(map__20238,map__20238__$1,keywordize_keys,keyfn))
,null,null));
});})(map__20238,map__20238__$1,keywordize_keys,keyfn))
;
return iter__14494__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__20238,map__20238__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__20265 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__20267__i = 0, G__20267__a = new Array(arguments.length -  1);
while (G__20267__i < G__20267__a.length) {G__20267__a[G__20267__i] = arguments[G__20267__i + 1]; ++G__20267__i;}
  opts = new cljs.core.IndexedSeq(G__20267__a,0);
} 
return G__20265__delegate.call(this,x,opts);};
G__20265.cljs$lang$maxFixedArity = 1;
G__20265.cljs$lang$applyTo = (function (arglist__20268){
var x = cljs.core.first(arglist__20268);
var opts = cljs.core.rest(arglist__20268);
return G__20265__delegate(x,opts);
});
G__20265.cljs$core$IFn$_invoke$arity$variadic = G__20265__delegate;
return G__20265;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__20269 = null;
if (arguments.length > 1) {
var G__20270__i = 0, G__20270__a = new Array(arguments.length -  1);
while (G__20270__i < G__20270__a.length) {G__20270__a[G__20270__i] = arguments[G__20270__i + 1]; ++G__20270__i;}
G__20269 = new cljs.core.IndexedSeq(G__20270__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20269);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__20273 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20273) : cljs.core.atom.call(null,G__20273));
})();
return ((function (mem){
return (function() { 
var G__20275__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__20274 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20274) : cljs.core.deref.call(null,G__20274));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__20275 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20276__i = 0, G__20276__a = new Array(arguments.length -  0);
while (G__20276__i < G__20276__a.length) {G__20276__a[G__20276__i] = arguments[G__20276__i + 0]; ++G__20276__i;}
  args = new cljs.core.IndexedSeq(G__20276__a,0);
} 
return G__20275__delegate.call(this,args);};
G__20275.cljs$lang$maxFixedArity = 0;
G__20275.cljs$lang$applyTo = (function (arglist__20277){
var args = cljs.core.seq(arglist__20277);
return G__20275__delegate(args);
});
G__20275.cljs$core$IFn$_invoke$arity$variadic = G__20275__delegate;
return G__20275;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__20279 = ret;
f = G__20279;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__20280__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__20280 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__20281__i = 0, G__20281__a = new Array(arguments.length -  1);
while (G__20281__i < G__20281__a.length) {G__20281__a[G__20281__i] = arguments[G__20281__i + 1]; ++G__20281__i;}
  args = new cljs.core.IndexedSeq(G__20281__a,0);
} 
return G__20280__delegate.call(this,f,args);};
G__20280.cljs$lang$maxFixedArity = 1;
G__20280.cljs$lang$applyTo = (function (arglist__20282){
var f = cljs.core.first(arglist__20282);
var args = cljs.core.rest(arglist__20282);
return G__20280__delegate(f,args);
});
G__20280.cljs$core$IFn$_invoke$arity$variadic = G__20280__delegate;
return G__20280;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__20283 = null;
if (arguments.length > 1) {
var G__20284__i = 0, G__20284__a = new Array(arguments.length -  1);
while (G__20284__i < G__20284__a.length) {G__20284__a[G__20284__i] = arguments[G__20284__i + 1]; ++G__20284__i;}
G__20283 = new cljs.core.IndexedSeq(G__20284__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__20283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__20287 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20287) : Math.floor.call(null,G__20287));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__20289 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20289) : f.call(null,G__20289));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__20291 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20291) : cljs.core.atom.call(null,G__20291));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__20292__i = 0, G__20292__a = new Array(arguments.length -  1);
while (G__20292__i < G__20292__a.length) {G__20292__a[G__20292__i] = arguments[G__20292__i + 1]; ++G__20292__i;}
  args = new cljs.core.IndexedSeq(G__20292__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__20293){
var f = cljs.core.first(arglist__20293);
var args = cljs.core.rest(arglist__20293);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__20358 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20358) : cljs.core.deref.call(null,G__20358));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__13738__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
var and__13726__auto__ = cljs.core.vector_QMARK_(parent);
if(and__13726__auto__){
var and__13726__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__13726__auto____$1){
var and__13726__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__13726__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__20383 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__20381 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__20381) : child.call(null,G__20381));
})(),(function (){var G__20382 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__20382) : parent.call(null,G__20382));
})());
var G__20384 = (i + (1));
ret = G__20383;
i = G__20384;
continue;
}
break;
}
} else {
return and__13726__auto____$2;
}
} else {
return and__13726__auto____$1;
}
} else {
return and__13726__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__20388 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20388) : cljs.core.deref.call(null,G__20388));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__20392 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20392) : cljs.core.deref.call(null,G__20392));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__20396 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20396) : cljs.core.deref.call(null,G__20396));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__20405 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__20405) : targets.call(null,G__20405));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__20406 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__20406) : sources.call(null,G__20406));
})()));
});})(tp,td,ta))
;
var or__13738__auto__ = ((cljs.core.contains_QMARK_((function (){var G__20410 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__20410) : tp.call(null,G__20410));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__20411 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__20411) : ta.call(null,G__20411));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__20412 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__20412) : ta.call(null,G__20412));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__20419 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__20419) : parentMap.call(null,G__20419));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__20420 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__20420) : parentMap.call(null,G__20420));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__20413_SHARP_){
return cljs.core.cons(cljs.core.first(p1__20413_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__20413_SHARP_),cljs.core.second(p1__20413_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__20421 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__20421) : parentMap.call(null,G__20421));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__20414_SHARP_,p2__20415_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__20414_SHARP_,p2__20415_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__20424 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20424) : cljs.core.deref.call(null,G__20424));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__20425 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20425) : cljs.core.deref.call(null,G__20425));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__20441 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20441) : cljs.core.deref.call(null,G__20441));
})().call(null,x);
var or__13738__auto__ = (cljs.core.truth_((function (){var and__13726__auto__ = xprefs;
if(cljs.core.truth_(and__13726__auto__)){
var G__20443 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__20443) : xprefs.call(null,G__20443));
} else {
return and__13726__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__20444 = cljs.core.rest(ps);
ps = G__20444;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13738__auto____$1)){
return or__13738__auto____$1;
} else {
var or__13738__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__20445 = cljs.core.rest(ps);
ps = G__20445;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13738__auto____$2)){
return or__13738__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__13738__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__13738__auto__)){
return or__13738__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__20459){
var vec__20460 = p__20459;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20460,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20460,(1),null);
var e = vec__20460;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__20461 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20461) : cljs.core.deref.call(null,G__20461));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__13738__auto__ = (be == null);
if(or__13738__auto__){
return or__13738__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__20462 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20462) : cljs.core.deref.call(null,G__20462));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__20463 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20463) : cljs.core.deref.call(null,G__20463));
})(),(function (){var G__20464 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20464) : cljs.core.deref.call(null,G__20464));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj20466 = {};
return obj20466;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__13726__auto__ = mf;
if(and__13726__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__13726__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__14382__auto__ = (((mf == null))?null:mf);
return (function (){var or__13738__auto__ = (cljs.core._reset[(function (){var G__20470 = x__14382__auto__;
return goog.typeOf(G__20470);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._reset["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__13726__auto__ = mf;
if(and__13726__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__13726__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__14382__auto__ = (((mf == null))?null:mf);
return (function (){var or__13738__auto__ = (cljs.core._add_method[(function (){var G__20474 = x__14382__auto__;
return goog.typeOf(G__20474);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._add_method["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__13726__auto__ = mf;
if(and__13726__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__13726__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__14382__auto__ = (((mf == null))?null:mf);
return (function (){var or__13738__auto__ = (cljs.core._remove_method[(function (){var G__20478 = x__14382__auto__;
return goog.typeOf(G__20478);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._remove_method["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__13726__auto__ = mf;
if(and__13726__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__13726__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__14382__auto__ = (((mf == null))?null:mf);
return (function (){var or__13738__auto__ = (cljs.core._prefer_method[(function (){var G__20482 = x__14382__auto__;
return goog.typeOf(G__20482);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__13726__auto__ = mf;
if(and__13726__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__13726__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__14382__auto__ = (((mf == null))?null:mf);
return (function (){var or__13738__auto__ = (cljs.core._get_method[(function (){var G__20486 = x__14382__auto__;
return goog.typeOf(G__20486);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._get_method["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__13726__auto__ = mf;
if(and__13726__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__13726__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__14382__auto__ = (((mf == null))?null:mf);
return (function (){var or__13738__auto__ = (cljs.core._methods[(function (){var G__20490 = x__14382__auto__;
return goog.typeOf(G__20490);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._methods["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__13726__auto__ = mf;
if(and__13726__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__13726__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__14382__auto__ = (((mf == null))?null:mf);
return (function (){var or__13738__auto__ = (cljs.core._prefers[(function (){var G__20494 = x__14382__auto__;
return goog.typeOf(G__20494);
})()]);
if(or__13738__auto__){
return or__13738__auto__;
} else {
var or__13738__auto____$1 = (cljs.core._prefers["_"]);
if(or__13738__auto____$1){
return or__13738__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20496 = this$__$1;
return goog.getUid(G__20496);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__20497 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20497) : cljs.core.deref.call(null,G__20497));
})(),(function (){var G__20498 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20498) : cljs.core.deref.call(null,G__20498));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__20499 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20499) : cljs.core.deref.call(null,G__20499));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__20500 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20500) : cljs.core.deref.call(null,G__20500));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__20501 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20501) : cljs.core.deref.call(null,G__20501));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__20502 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20502) : cljs.core.deref.call(null,G__20502));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__21343 = null;
var G__21343__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__21343__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20503 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__20503) : self__.dispatch_fn.call(null,G__20503));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20504 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__20504) : target_fn.call(null,G__20504));
});
var G__21343__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20505 = a;
var G__20506 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__20505,G__20506) : self__.dispatch_fn.call(null,G__20505,G__20506));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20507 = a;
var G__20508 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__20507,G__20508) : target_fn.call(null,G__20507,G__20508));
});
var G__21343__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20509 = a;
var G__20510 = b;
var G__20511 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__20509,G__20510,G__20511) : self__.dispatch_fn.call(null,G__20509,G__20510,G__20511));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20512 = a;
var G__20513 = b;
var G__20514 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__20512,G__20513,G__20514) : target_fn.call(null,G__20512,G__20513,G__20514));
});
var G__21343__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20515 = a;
var G__20516 = b;
var G__20517 = c;
var G__20518 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__20515,G__20516,G__20517,G__20518) : self__.dispatch_fn.call(null,G__20515,G__20516,G__20517,G__20518));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20519 = a;
var G__20520 = b;
var G__20521 = c;
var G__20522 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__20519,G__20520,G__20521,G__20522) : target_fn.call(null,G__20519,G__20520,G__20521,G__20522));
});
var G__21343__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20523 = a;
var G__20524 = b;
var G__20525 = c;
var G__20526 = d;
var G__20527 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__20523,G__20524,G__20525,G__20526,G__20527) : self__.dispatch_fn.call(null,G__20523,G__20524,G__20525,G__20526,G__20527));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20528 = a;
var G__20529 = b;
var G__20530 = c;
var G__20531 = d;
var G__20532 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__20528,G__20529,G__20530,G__20531,G__20532) : target_fn.call(null,G__20528,G__20529,G__20530,G__20531,G__20532));
});
var G__21343__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20533 = a;
var G__20534 = b;
var G__20535 = c;
var G__20536 = d;
var G__20537 = e;
var G__20538 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__20533,G__20534,G__20535,G__20536,G__20537,G__20538) : self__.dispatch_fn.call(null,G__20533,G__20534,G__20535,G__20536,G__20537,G__20538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20539 = a;
var G__20540 = b;
var G__20541 = c;
var G__20542 = d;
var G__20543 = e;
var G__20544 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__20539,G__20540,G__20541,G__20542,G__20543,G__20544) : target_fn.call(null,G__20539,G__20540,G__20541,G__20542,G__20543,G__20544));
});
var G__21343__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20545 = a;
var G__20546 = b;
var G__20547 = c;
var G__20548 = d;
var G__20549 = e;
var G__20550 = f;
var G__20551 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__20545,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551) : self__.dispatch_fn.call(null,G__20545,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20552 = a;
var G__20553 = b;
var G__20554 = c;
var G__20555 = d;
var G__20556 = e;
var G__20557 = f;
var G__20558 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558) : target_fn.call(null,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558));
});
var G__21343__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20559 = a;
var G__20560 = b;
var G__20561 = c;
var G__20562 = d;
var G__20563 = e;
var G__20564 = f;
var G__20565 = g;
var G__20566 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__20559,G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566) : self__.dispatch_fn.call(null,G__20559,G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20567 = a;
var G__20568 = b;
var G__20569 = c;
var G__20570 = d;
var G__20571 = e;
var G__20572 = f;
var G__20573 = g;
var G__20574 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574) : target_fn.call(null,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574));
});
var G__21343__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20575 = a;
var G__20576 = b;
var G__20577 = c;
var G__20578 = d;
var G__20579 = e;
var G__20580 = f;
var G__20581 = g;
var G__20582 = h;
var G__20583 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__20575,G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583) : self__.dispatch_fn.call(null,G__20575,G__20576,G__20577,G__20578,G__20579,G__20580,G__20581,G__20582,G__20583));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20584 = a;
var G__20585 = b;
var G__20586 = c;
var G__20587 = d;
var G__20588 = e;
var G__20589 = f;
var G__20590 = g;
var G__20591 = h;
var G__20592 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591,G__20592) : target_fn.call(null,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591,G__20592));
});
var G__21343__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20593 = a;
var G__20594 = b;
var G__20595 = c;
var G__20596 = d;
var G__20597 = e;
var G__20598 = f;
var G__20599 = g;
var G__20600 = h;
var G__20601 = i;
var G__20602 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__20593,G__20594,G__20595,G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602) : self__.dispatch_fn.call(null,G__20593,G__20594,G__20595,G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20603 = a;
var G__20604 = b;
var G__20605 = c;
var G__20606 = d;
var G__20607 = e;
var G__20608 = f;
var G__20609 = g;
var G__20610 = h;
var G__20611 = i;
var G__20612 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__20603,G__20604,G__20605,G__20606,G__20607,G__20608,G__20609,G__20610,G__20611,G__20612) : target_fn.call(null,G__20603,G__20604,G__20605,G__20606,G__20607,G__20608,G__20609,G__20610,G__20611,G__20612));
});
var G__21343__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20613 = a;
var G__20614 = b;
var G__20615 = c;
var G__20616 = d;
var G__20617 = e;
var G__20618 = f;
var G__20619 = g;
var G__20620 = h;
var G__20621 = i;
var G__20622 = j;
var G__20623 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__20613,G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620,G__20621,G__20622,G__20623) : self__.dispatch_fn.call(null,G__20613,G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620,G__20621,G__20622,G__20623));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20624 = a;
var G__20625 = b;
var G__20626 = c;
var G__20627 = d;
var G__20628 = e;
var G__20629 = f;
var G__20630 = g;
var G__20631 = h;
var G__20632 = i;
var G__20633 = j;
var G__20634 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631,G__20632,G__20633,G__20634) : target_fn.call(null,G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631,G__20632,G__20633,G__20634));
});
var G__21343__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20635 = a;
var G__20636 = b;
var G__20637 = c;
var G__20638 = d;
var G__20639 = e;
var G__20640 = f;
var G__20641 = g;
var G__20642 = h;
var G__20643 = i;
var G__20644 = j;
var G__20645 = k;
var G__20646 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__20635,G__20636,G__20637,G__20638,G__20639,G__20640,G__20641,G__20642,G__20643,G__20644,G__20645,G__20646) : self__.dispatch_fn.call(null,G__20635,G__20636,G__20637,G__20638,G__20639,G__20640,G__20641,G__20642,G__20643,G__20644,G__20645,G__20646));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20647 = a;
var G__20648 = b;
var G__20649 = c;
var G__20650 = d;
var G__20651 = e;
var G__20652 = f;
var G__20653 = g;
var G__20654 = h;
var G__20655 = i;
var G__20656 = j;
var G__20657 = k;
var G__20658 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__20647,G__20648,G__20649,G__20650,G__20651,G__20652,G__20653,G__20654,G__20655,G__20656,G__20657,G__20658) : target_fn.call(null,G__20647,G__20648,G__20649,G__20650,G__20651,G__20652,G__20653,G__20654,G__20655,G__20656,G__20657,G__20658));
});
var G__21343__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20659 = a;
var G__20660 = b;
var G__20661 = c;
var G__20662 = d;
var G__20663 = e;
var G__20664 = f;
var G__20665 = g;
var G__20666 = h;
var G__20667 = i;
var G__20668 = j;
var G__20669 = k;
var G__20670 = l;
var G__20671 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669,G__20670,G__20671) : self__.dispatch_fn.call(null,G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669,G__20670,G__20671));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20672 = a;
var G__20673 = b;
var G__20674 = c;
var G__20675 = d;
var G__20676 = e;
var G__20677 = f;
var G__20678 = g;
var G__20679 = h;
var G__20680 = i;
var G__20681 = j;
var G__20682 = k;
var G__20683 = l;
var G__20684 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684) : target_fn.call(null,G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684));
});
var G__21343__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20685 = a;
var G__20686 = b;
var G__20687 = c;
var G__20688 = d;
var G__20689 = e;
var G__20690 = f;
var G__20691 = g;
var G__20692 = h;
var G__20693 = i;
var G__20694 = j;
var G__20695 = k;
var G__20696 = l;
var G__20697 = m;
var G__20698 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__20685,G__20686,G__20687,G__20688,G__20689,G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698) : self__.dispatch_fn.call(null,G__20685,G__20686,G__20687,G__20688,G__20689,G__20690,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20699 = a;
var G__20700 = b;
var G__20701 = c;
var G__20702 = d;
var G__20703 = e;
var G__20704 = f;
var G__20705 = g;
var G__20706 = h;
var G__20707 = i;
var G__20708 = j;
var G__20709 = k;
var G__20710 = l;
var G__20711 = m;
var G__20712 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709,G__20710,G__20711,G__20712) : target_fn.call(null,G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709,G__20710,G__20711,G__20712));
});
var G__21343__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20713 = a;
var G__20714 = b;
var G__20715 = c;
var G__20716 = d;
var G__20717 = e;
var G__20718 = f;
var G__20719 = g;
var G__20720 = h;
var G__20721 = i;
var G__20722 = j;
var G__20723 = k;
var G__20724 = l;
var G__20725 = m;
var G__20726 = n;
var G__20727 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__20713,G__20714,G__20715,G__20716,G__20717,G__20718,G__20719,G__20720,G__20721,G__20722,G__20723,G__20724,G__20725,G__20726,G__20727) : self__.dispatch_fn.call(null,G__20713,G__20714,G__20715,G__20716,G__20717,G__20718,G__20719,G__20720,G__20721,G__20722,G__20723,G__20724,G__20725,G__20726,G__20727));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20728 = a;
var G__20729 = b;
var G__20730 = c;
var G__20731 = d;
var G__20732 = e;
var G__20733 = f;
var G__20734 = g;
var G__20735 = h;
var G__20736 = i;
var G__20737 = j;
var G__20738 = k;
var G__20739 = l;
var G__20740 = m;
var G__20741 = n;
var G__20742 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__20728,G__20729,G__20730,G__20731,G__20732,G__20733,G__20734,G__20735,G__20736,G__20737,G__20738,G__20739,G__20740,G__20741,G__20742) : target_fn.call(null,G__20728,G__20729,G__20730,G__20731,G__20732,G__20733,G__20734,G__20735,G__20736,G__20737,G__20738,G__20739,G__20740,G__20741,G__20742));
});
var G__21343__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20743 = a;
var G__20744 = b;
var G__20745 = c;
var G__20746 = d;
var G__20747 = e;
var G__20748 = f;
var G__20749 = g;
var G__20750 = h;
var G__20751 = i;
var G__20752 = j;
var G__20753 = k;
var G__20754 = l;
var G__20755 = m;
var G__20756 = n;
var G__20757 = o;
var G__20758 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__20743,G__20744,G__20745,G__20746,G__20747,G__20748,G__20749,G__20750,G__20751,G__20752,G__20753,G__20754,G__20755,G__20756,G__20757,G__20758) : self__.dispatch_fn.call(null,G__20743,G__20744,G__20745,G__20746,G__20747,G__20748,G__20749,G__20750,G__20751,G__20752,G__20753,G__20754,G__20755,G__20756,G__20757,G__20758));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20759 = a;
var G__20760 = b;
var G__20761 = c;
var G__20762 = d;
var G__20763 = e;
var G__20764 = f;
var G__20765 = g;
var G__20766 = h;
var G__20767 = i;
var G__20768 = j;
var G__20769 = k;
var G__20770 = l;
var G__20771 = m;
var G__20772 = n;
var G__20773 = o;
var G__20774 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__20759,G__20760,G__20761,G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768,G__20769,G__20770,G__20771,G__20772,G__20773,G__20774) : target_fn.call(null,G__20759,G__20760,G__20761,G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768,G__20769,G__20770,G__20771,G__20772,G__20773,G__20774));
});
var G__21343__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20775 = a;
var G__20776 = b;
var G__20777 = c;
var G__20778 = d;
var G__20779 = e;
var G__20780 = f;
var G__20781 = g;
var G__20782 = h;
var G__20783 = i;
var G__20784 = j;
var G__20785 = k;
var G__20786 = l;
var G__20787 = m;
var G__20788 = n;
var G__20789 = o;
var G__20790 = p;
var G__20791 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__20775,G__20776,G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785,G__20786,G__20787,G__20788,G__20789,G__20790,G__20791) : self__.dispatch_fn.call(null,G__20775,G__20776,G__20777,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785,G__20786,G__20787,G__20788,G__20789,G__20790,G__20791));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20792 = a;
var G__20793 = b;
var G__20794 = c;
var G__20795 = d;
var G__20796 = e;
var G__20797 = f;
var G__20798 = g;
var G__20799 = h;
var G__20800 = i;
var G__20801 = j;
var G__20802 = k;
var G__20803 = l;
var G__20804 = m;
var G__20805 = n;
var G__20806 = o;
var G__20807 = p;
var G__20808 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__20792,G__20793,G__20794,G__20795,G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806,G__20807,G__20808) : target_fn.call(null,G__20792,G__20793,G__20794,G__20795,G__20796,G__20797,G__20798,G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806,G__20807,G__20808));
});
var G__21343__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20809 = a;
var G__20810 = b;
var G__20811 = c;
var G__20812 = d;
var G__20813 = e;
var G__20814 = f;
var G__20815 = g;
var G__20816 = h;
var G__20817 = i;
var G__20818 = j;
var G__20819 = k;
var G__20820 = l;
var G__20821 = m;
var G__20822 = n;
var G__20823 = o;
var G__20824 = p;
var G__20825 = q;
var G__20826 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__20809,G__20810,G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826) : self__.dispatch_fn.call(null,G__20809,G__20810,G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823,G__20824,G__20825,G__20826));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20827 = a;
var G__20828 = b;
var G__20829 = c;
var G__20830 = d;
var G__20831 = e;
var G__20832 = f;
var G__20833 = g;
var G__20834 = h;
var G__20835 = i;
var G__20836 = j;
var G__20837 = k;
var G__20838 = l;
var G__20839 = m;
var G__20840 = n;
var G__20841 = o;
var G__20842 = p;
var G__20843 = q;
var G__20844 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__20827,G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844) : target_fn.call(null,G__20827,G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844));
});
var G__21343__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20845 = a;
var G__20846 = b;
var G__20847 = c;
var G__20848 = d;
var G__20849 = e;
var G__20850 = f;
var G__20851 = g;
var G__20852 = h;
var G__20853 = i;
var G__20854 = j;
var G__20855 = k;
var G__20856 = l;
var G__20857 = m;
var G__20858 = n;
var G__20859 = o;
var G__20860 = p;
var G__20861 = q;
var G__20862 = r;
var G__20863 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863) : self__.dispatch_fn.call(null,G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20864 = a;
var G__20865 = b;
var G__20866 = c;
var G__20867 = d;
var G__20868 = e;
var G__20869 = f;
var G__20870 = g;
var G__20871 = h;
var G__20872 = i;
var G__20873 = j;
var G__20874 = k;
var G__20875 = l;
var G__20876 = m;
var G__20877 = n;
var G__20878 = o;
var G__20879 = p;
var G__20880 = q;
var G__20881 = r;
var G__20882 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882) : target_fn.call(null,G__20864,G__20865,G__20866,G__20867,G__20868,G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882));
});
var G__21343__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__20883 = a;
var G__20884 = b;
var G__20885 = c;
var G__20886 = d;
var G__20887 = e;
var G__20888 = f;
var G__20889 = g;
var G__20890 = h;
var G__20891 = i;
var G__20892 = j;
var G__20893 = k;
var G__20894 = l;
var G__20895 = m;
var G__20896 = n;
var G__20897 = o;
var G__20898 = p;
var G__20899 = q;
var G__20900 = r;
var G__20901 = s;
var G__20902 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__20883,G__20884,G__20885,G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902) : self__.dispatch_fn.call(null,G__20883,G__20884,G__20885,G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20903 = a;
var G__20904 = b;
var G__20905 = c;
var G__20906 = d;
var G__20907 = e;
var G__20908 = f;
var G__20909 = g;
var G__20910 = h;
var G__20911 = i;
var G__20912 = j;
var G__20913 = k;
var G__20914 = l;
var G__20915 = m;
var G__20916 = n;
var G__20917 = o;
var G__20918 = p;
var G__20919 = q;
var G__20920 = r;
var G__20921 = s;
var G__20922 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919,G__20920,G__20921,G__20922) : target_fn.call(null,G__20903,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919,G__20920,G__20921,G__20922));
});
var G__21343__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__21343 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21343__1.call(this,self__);
case 2:
return G__21343__2.call(this,self__,a);
case 3:
return G__21343__3.call(this,self__,a,b);
case 4:
return G__21343__4.call(this,self__,a,b,c);
case 5:
return G__21343__5.call(this,self__,a,b,c,d);
case 6:
return G__21343__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21343__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21343__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21343__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21343__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21343__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21343__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21343__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21343__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21343__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21343__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21343__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21343__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21343__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21343__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21343__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21343__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21343.cljs$core$IFn$_invoke$arity$1 = G__21343__1;
G__21343.cljs$core$IFn$_invoke$arity$2 = G__21343__2;
G__21343.cljs$core$IFn$_invoke$arity$3 = G__21343__3;
G__21343.cljs$core$IFn$_invoke$arity$4 = G__21343__4;
G__21343.cljs$core$IFn$_invoke$arity$5 = G__21343__5;
G__21343.cljs$core$IFn$_invoke$arity$6 = G__21343__6;
G__21343.cljs$core$IFn$_invoke$arity$7 = G__21343__7;
G__21343.cljs$core$IFn$_invoke$arity$8 = G__21343__8;
G__21343.cljs$core$IFn$_invoke$arity$9 = G__21343__9;
G__21343.cljs$core$IFn$_invoke$arity$10 = G__21343__10;
G__21343.cljs$core$IFn$_invoke$arity$11 = G__21343__11;
G__21343.cljs$core$IFn$_invoke$arity$12 = G__21343__12;
G__21343.cljs$core$IFn$_invoke$arity$13 = G__21343__13;
G__21343.cljs$core$IFn$_invoke$arity$14 = G__21343__14;
G__21343.cljs$core$IFn$_invoke$arity$15 = G__21343__15;
G__21343.cljs$core$IFn$_invoke$arity$16 = G__21343__16;
G__21343.cljs$core$IFn$_invoke$arity$17 = G__21343__17;
G__21343.cljs$core$IFn$_invoke$arity$18 = G__21343__18;
G__21343.cljs$core$IFn$_invoke$arity$19 = G__21343__19;
G__21343.cljs$core$IFn$_invoke$arity$20 = G__21343__20;
G__21343.cljs$core$IFn$_invoke$arity$21 = G__21343__21;
G__21343.cljs$core$IFn$_invoke$arity$22 = G__21343__22;
return G__21343;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args20495){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20495)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20923 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__20923) : self__.dispatch_fn.call(null,G__20923));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20924 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__20924) : target_fn.call(null,G__20924));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20925 = a;
var G__20926 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__20925,G__20926) : self__.dispatch_fn.call(null,G__20925,G__20926));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20927 = a;
var G__20928 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__20927,G__20928) : target_fn.call(null,G__20927,G__20928));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20929 = a;
var G__20930 = b;
var G__20931 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__20929,G__20930,G__20931) : self__.dispatch_fn.call(null,G__20929,G__20930,G__20931));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20932 = a;
var G__20933 = b;
var G__20934 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__20932,G__20933,G__20934) : target_fn.call(null,G__20932,G__20933,G__20934));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20935 = a;
var G__20936 = b;
var G__20937 = c;
var G__20938 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__20935,G__20936,G__20937,G__20938) : self__.dispatch_fn.call(null,G__20935,G__20936,G__20937,G__20938));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20939 = a;
var G__20940 = b;
var G__20941 = c;
var G__20942 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__20939,G__20940,G__20941,G__20942) : target_fn.call(null,G__20939,G__20940,G__20941,G__20942));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20943 = a;
var G__20944 = b;
var G__20945 = c;
var G__20946 = d;
var G__20947 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__20943,G__20944,G__20945,G__20946,G__20947) : self__.dispatch_fn.call(null,G__20943,G__20944,G__20945,G__20946,G__20947));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20948 = a;
var G__20949 = b;
var G__20950 = c;
var G__20951 = d;
var G__20952 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__20948,G__20949,G__20950,G__20951,G__20952) : target_fn.call(null,G__20948,G__20949,G__20950,G__20951,G__20952));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20953 = a;
var G__20954 = b;
var G__20955 = c;
var G__20956 = d;
var G__20957 = e;
var G__20958 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__20953,G__20954,G__20955,G__20956,G__20957,G__20958) : self__.dispatch_fn.call(null,G__20953,G__20954,G__20955,G__20956,G__20957,G__20958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20959 = a;
var G__20960 = b;
var G__20961 = c;
var G__20962 = d;
var G__20963 = e;
var G__20964 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__20959,G__20960,G__20961,G__20962,G__20963,G__20964) : target_fn.call(null,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20965 = a;
var G__20966 = b;
var G__20967 = c;
var G__20968 = d;
var G__20969 = e;
var G__20970 = f;
var G__20971 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971) : self__.dispatch_fn.call(null,G__20965,G__20966,G__20967,G__20968,G__20969,G__20970,G__20971));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20972 = a;
var G__20973 = b;
var G__20974 = c;
var G__20975 = d;
var G__20976 = e;
var G__20977 = f;
var G__20978 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__20972,G__20973,G__20974,G__20975,G__20976,G__20977,G__20978) : target_fn.call(null,G__20972,G__20973,G__20974,G__20975,G__20976,G__20977,G__20978));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20979 = a;
var G__20980 = b;
var G__20981 = c;
var G__20982 = d;
var G__20983 = e;
var G__20984 = f;
var G__20985 = g;
var G__20986 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__20979,G__20980,G__20981,G__20982,G__20983,G__20984,G__20985,G__20986) : self__.dispatch_fn.call(null,G__20979,G__20980,G__20981,G__20982,G__20983,G__20984,G__20985,G__20986));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__20987 = a;
var G__20988 = b;
var G__20989 = c;
var G__20990 = d;
var G__20991 = e;
var G__20992 = f;
var G__20993 = g;
var G__20994 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__20987,G__20988,G__20989,G__20990,G__20991,G__20992,G__20993,G__20994) : target_fn.call(null,G__20987,G__20988,G__20989,G__20990,G__20991,G__20992,G__20993,G__20994));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__20995 = a;
var G__20996 = b;
var G__20997 = c;
var G__20998 = d;
var G__20999 = e;
var G__21000 = f;
var G__21001 = g;
var G__21002 = h;
var G__21003 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__20995,G__20996,G__20997,G__20998,G__20999,G__21000,G__21001,G__21002,G__21003) : self__.dispatch_fn.call(null,G__20995,G__20996,G__20997,G__20998,G__20999,G__21000,G__21001,G__21002,G__21003));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21004 = a;
var G__21005 = b;
var G__21006 = c;
var G__21007 = d;
var G__21008 = e;
var G__21009 = f;
var G__21010 = g;
var G__21011 = h;
var G__21012 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21004,G__21005,G__21006,G__21007,G__21008,G__21009,G__21010,G__21011,G__21012) : target_fn.call(null,G__21004,G__21005,G__21006,G__21007,G__21008,G__21009,G__21010,G__21011,G__21012));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21013 = a;
var G__21014 = b;
var G__21015 = c;
var G__21016 = d;
var G__21017 = e;
var G__21018 = f;
var G__21019 = g;
var G__21020 = h;
var G__21021 = i;
var G__21022 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21013,G__21014,G__21015,G__21016,G__21017,G__21018,G__21019,G__21020,G__21021,G__21022) : self__.dispatch_fn.call(null,G__21013,G__21014,G__21015,G__21016,G__21017,G__21018,G__21019,G__21020,G__21021,G__21022));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21023 = a;
var G__21024 = b;
var G__21025 = c;
var G__21026 = d;
var G__21027 = e;
var G__21028 = f;
var G__21029 = g;
var G__21030 = h;
var G__21031 = i;
var G__21032 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21023,G__21024,G__21025,G__21026,G__21027,G__21028,G__21029,G__21030,G__21031,G__21032) : target_fn.call(null,G__21023,G__21024,G__21025,G__21026,G__21027,G__21028,G__21029,G__21030,G__21031,G__21032));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21033 = a;
var G__21034 = b;
var G__21035 = c;
var G__21036 = d;
var G__21037 = e;
var G__21038 = f;
var G__21039 = g;
var G__21040 = h;
var G__21041 = i;
var G__21042 = j;
var G__21043 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21033,G__21034,G__21035,G__21036,G__21037,G__21038,G__21039,G__21040,G__21041,G__21042,G__21043) : self__.dispatch_fn.call(null,G__21033,G__21034,G__21035,G__21036,G__21037,G__21038,G__21039,G__21040,G__21041,G__21042,G__21043));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21044 = a;
var G__21045 = b;
var G__21046 = c;
var G__21047 = d;
var G__21048 = e;
var G__21049 = f;
var G__21050 = g;
var G__21051 = h;
var G__21052 = i;
var G__21053 = j;
var G__21054 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21044,G__21045,G__21046,G__21047,G__21048,G__21049,G__21050,G__21051,G__21052,G__21053,G__21054) : target_fn.call(null,G__21044,G__21045,G__21046,G__21047,G__21048,G__21049,G__21050,G__21051,G__21052,G__21053,G__21054));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21055 = a;
var G__21056 = b;
var G__21057 = c;
var G__21058 = d;
var G__21059 = e;
var G__21060 = f;
var G__21061 = g;
var G__21062 = h;
var G__21063 = i;
var G__21064 = j;
var G__21065 = k;
var G__21066 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21055,G__21056,G__21057,G__21058,G__21059,G__21060,G__21061,G__21062,G__21063,G__21064,G__21065,G__21066) : self__.dispatch_fn.call(null,G__21055,G__21056,G__21057,G__21058,G__21059,G__21060,G__21061,G__21062,G__21063,G__21064,G__21065,G__21066));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21067 = a;
var G__21068 = b;
var G__21069 = c;
var G__21070 = d;
var G__21071 = e;
var G__21072 = f;
var G__21073 = g;
var G__21074 = h;
var G__21075 = i;
var G__21076 = j;
var G__21077 = k;
var G__21078 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21067,G__21068,G__21069,G__21070,G__21071,G__21072,G__21073,G__21074,G__21075,G__21076,G__21077,G__21078) : target_fn.call(null,G__21067,G__21068,G__21069,G__21070,G__21071,G__21072,G__21073,G__21074,G__21075,G__21076,G__21077,G__21078));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21079 = a;
var G__21080 = b;
var G__21081 = c;
var G__21082 = d;
var G__21083 = e;
var G__21084 = f;
var G__21085 = g;
var G__21086 = h;
var G__21087 = i;
var G__21088 = j;
var G__21089 = k;
var G__21090 = l;
var G__21091 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085,G__21086,G__21087,G__21088,G__21089,G__21090,G__21091) : self__.dispatch_fn.call(null,G__21079,G__21080,G__21081,G__21082,G__21083,G__21084,G__21085,G__21086,G__21087,G__21088,G__21089,G__21090,G__21091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21092 = a;
var G__21093 = b;
var G__21094 = c;
var G__21095 = d;
var G__21096 = e;
var G__21097 = f;
var G__21098 = g;
var G__21099 = h;
var G__21100 = i;
var G__21101 = j;
var G__21102 = k;
var G__21103 = l;
var G__21104 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21092,G__21093,G__21094,G__21095,G__21096,G__21097,G__21098,G__21099,G__21100,G__21101,G__21102,G__21103,G__21104) : target_fn.call(null,G__21092,G__21093,G__21094,G__21095,G__21096,G__21097,G__21098,G__21099,G__21100,G__21101,G__21102,G__21103,G__21104));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21105 = a;
var G__21106 = b;
var G__21107 = c;
var G__21108 = d;
var G__21109 = e;
var G__21110 = f;
var G__21111 = g;
var G__21112 = h;
var G__21113 = i;
var G__21114 = j;
var G__21115 = k;
var G__21116 = l;
var G__21117 = m;
var G__21118 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21105,G__21106,G__21107,G__21108,G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116,G__21117,G__21118) : self__.dispatch_fn.call(null,G__21105,G__21106,G__21107,G__21108,G__21109,G__21110,G__21111,G__21112,G__21113,G__21114,G__21115,G__21116,G__21117,G__21118));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21119 = a;
var G__21120 = b;
var G__21121 = c;
var G__21122 = d;
var G__21123 = e;
var G__21124 = f;
var G__21125 = g;
var G__21126 = h;
var G__21127 = i;
var G__21128 = j;
var G__21129 = k;
var G__21130 = l;
var G__21131 = m;
var G__21132 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21119,G__21120,G__21121,G__21122,G__21123,G__21124,G__21125,G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132) : target_fn.call(null,G__21119,G__21120,G__21121,G__21122,G__21123,G__21124,G__21125,G__21126,G__21127,G__21128,G__21129,G__21130,G__21131,G__21132));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21133 = a;
var G__21134 = b;
var G__21135 = c;
var G__21136 = d;
var G__21137 = e;
var G__21138 = f;
var G__21139 = g;
var G__21140 = h;
var G__21141 = i;
var G__21142 = j;
var G__21143 = k;
var G__21144 = l;
var G__21145 = m;
var G__21146 = n;
var G__21147 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21133,G__21134,G__21135,G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143,G__21144,G__21145,G__21146,G__21147) : self__.dispatch_fn.call(null,G__21133,G__21134,G__21135,G__21136,G__21137,G__21138,G__21139,G__21140,G__21141,G__21142,G__21143,G__21144,G__21145,G__21146,G__21147));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21148 = a;
var G__21149 = b;
var G__21150 = c;
var G__21151 = d;
var G__21152 = e;
var G__21153 = f;
var G__21154 = g;
var G__21155 = h;
var G__21156 = i;
var G__21157 = j;
var G__21158 = k;
var G__21159 = l;
var G__21160 = m;
var G__21161 = n;
var G__21162 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21148,G__21149,G__21150,G__21151,G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162) : target_fn.call(null,G__21148,G__21149,G__21150,G__21151,G__21152,G__21153,G__21154,G__21155,G__21156,G__21157,G__21158,G__21159,G__21160,G__21161,G__21162));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21163 = a;
var G__21164 = b;
var G__21165 = c;
var G__21166 = d;
var G__21167 = e;
var G__21168 = f;
var G__21169 = g;
var G__21170 = h;
var G__21171 = i;
var G__21172 = j;
var G__21173 = k;
var G__21174 = l;
var G__21175 = m;
var G__21176 = n;
var G__21177 = o;
var G__21178 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21163,G__21164,G__21165,G__21166,G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178) : self__.dispatch_fn.call(null,G__21163,G__21164,G__21165,G__21166,G__21167,G__21168,G__21169,G__21170,G__21171,G__21172,G__21173,G__21174,G__21175,G__21176,G__21177,G__21178));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21179 = a;
var G__21180 = b;
var G__21181 = c;
var G__21182 = d;
var G__21183 = e;
var G__21184 = f;
var G__21185 = g;
var G__21186 = h;
var G__21187 = i;
var G__21188 = j;
var G__21189 = k;
var G__21190 = l;
var G__21191 = m;
var G__21192 = n;
var G__21193 = o;
var G__21194 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21179,G__21180,G__21181,G__21182,G__21183,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194) : target_fn.call(null,G__21179,G__21180,G__21181,G__21182,G__21183,G__21184,G__21185,G__21186,G__21187,G__21188,G__21189,G__21190,G__21191,G__21192,G__21193,G__21194));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21195 = a;
var G__21196 = b;
var G__21197 = c;
var G__21198 = d;
var G__21199 = e;
var G__21200 = f;
var G__21201 = g;
var G__21202 = h;
var G__21203 = i;
var G__21204 = j;
var G__21205 = k;
var G__21206 = l;
var G__21207 = m;
var G__21208 = n;
var G__21209 = o;
var G__21210 = p;
var G__21211 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204,G__21205,G__21206,G__21207,G__21208,G__21209,G__21210,G__21211) : self__.dispatch_fn.call(null,G__21195,G__21196,G__21197,G__21198,G__21199,G__21200,G__21201,G__21202,G__21203,G__21204,G__21205,G__21206,G__21207,G__21208,G__21209,G__21210,G__21211));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21212 = a;
var G__21213 = b;
var G__21214 = c;
var G__21215 = d;
var G__21216 = e;
var G__21217 = f;
var G__21218 = g;
var G__21219 = h;
var G__21220 = i;
var G__21221 = j;
var G__21222 = k;
var G__21223 = l;
var G__21224 = m;
var G__21225 = n;
var G__21226 = o;
var G__21227 = p;
var G__21228 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__21212,G__21213,G__21214,G__21215,G__21216,G__21217,G__21218,G__21219,G__21220,G__21221,G__21222,G__21223,G__21224,G__21225,G__21226,G__21227,G__21228) : target_fn.call(null,G__21212,G__21213,G__21214,G__21215,G__21216,G__21217,G__21218,G__21219,G__21220,G__21221,G__21222,G__21223,G__21224,G__21225,G__21226,G__21227,G__21228));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21229 = a;
var G__21230 = b;
var G__21231 = c;
var G__21232 = d;
var G__21233 = e;
var G__21234 = f;
var G__21235 = g;
var G__21236 = h;
var G__21237 = i;
var G__21238 = j;
var G__21239 = k;
var G__21240 = l;
var G__21241 = m;
var G__21242 = n;
var G__21243 = o;
var G__21244 = p;
var G__21245 = q;
var G__21246 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__21229,G__21230,G__21231,G__21232,G__21233,G__21234,G__21235,G__21236,G__21237,G__21238,G__21239,G__21240,G__21241,G__21242,G__21243,G__21244,G__21245,G__21246) : self__.dispatch_fn.call(null,G__21229,G__21230,G__21231,G__21232,G__21233,G__21234,G__21235,G__21236,G__21237,G__21238,G__21239,G__21240,G__21241,G__21242,G__21243,G__21244,G__21245,G__21246));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21247 = a;
var G__21248 = b;
var G__21249 = c;
var G__21250 = d;
var G__21251 = e;
var G__21252 = f;
var G__21253 = g;
var G__21254 = h;
var G__21255 = i;
var G__21256 = j;
var G__21257 = k;
var G__21258 = l;
var G__21259 = m;
var G__21260 = n;
var G__21261 = o;
var G__21262 = p;
var G__21263 = q;
var G__21264 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__21247,G__21248,G__21249,G__21250,G__21251,G__21252,G__21253,G__21254,G__21255,G__21256,G__21257,G__21258,G__21259,G__21260,G__21261,G__21262,G__21263,G__21264) : target_fn.call(null,G__21247,G__21248,G__21249,G__21250,G__21251,G__21252,G__21253,G__21254,G__21255,G__21256,G__21257,G__21258,G__21259,G__21260,G__21261,G__21262,G__21263,G__21264));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21265 = a;
var G__21266 = b;
var G__21267 = c;
var G__21268 = d;
var G__21269 = e;
var G__21270 = f;
var G__21271 = g;
var G__21272 = h;
var G__21273 = i;
var G__21274 = j;
var G__21275 = k;
var G__21276 = l;
var G__21277 = m;
var G__21278 = n;
var G__21279 = o;
var G__21280 = p;
var G__21281 = q;
var G__21282 = r;
var G__21283 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__21265,G__21266,G__21267,G__21268,G__21269,G__21270,G__21271,G__21272,G__21273,G__21274,G__21275,G__21276,G__21277,G__21278,G__21279,G__21280,G__21281,G__21282,G__21283) : self__.dispatch_fn.call(null,G__21265,G__21266,G__21267,G__21268,G__21269,G__21270,G__21271,G__21272,G__21273,G__21274,G__21275,G__21276,G__21277,G__21278,G__21279,G__21280,G__21281,G__21282,G__21283));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21284 = a;
var G__21285 = b;
var G__21286 = c;
var G__21287 = d;
var G__21288 = e;
var G__21289 = f;
var G__21290 = g;
var G__21291 = h;
var G__21292 = i;
var G__21293 = j;
var G__21294 = k;
var G__21295 = l;
var G__21296 = m;
var G__21297 = n;
var G__21298 = o;
var G__21299 = p;
var G__21300 = q;
var G__21301 = r;
var G__21302 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__21284,G__21285,G__21286,G__21287,G__21288,G__21289,G__21290,G__21291,G__21292,G__21293,G__21294,G__21295,G__21296,G__21297,G__21298,G__21299,G__21300,G__21301,G__21302) : target_fn.call(null,G__21284,G__21285,G__21286,G__21287,G__21288,G__21289,G__21290,G__21291,G__21292,G__21293,G__21294,G__21295,G__21296,G__21297,G__21298,G__21299,G__21300,G__21301,G__21302));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__21303 = a;
var G__21304 = b;
var G__21305 = c;
var G__21306 = d;
var G__21307 = e;
var G__21308 = f;
var G__21309 = g;
var G__21310 = h;
var G__21311 = i;
var G__21312 = j;
var G__21313 = k;
var G__21314 = l;
var G__21315 = m;
var G__21316 = n;
var G__21317 = o;
var G__21318 = p;
var G__21319 = q;
var G__21320 = r;
var G__21321 = s;
var G__21322 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__21303,G__21304,G__21305,G__21306,G__21307,G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316,G__21317,G__21318,G__21319,G__21320,G__21321,G__21322) : self__.dispatch_fn.call(null,G__21303,G__21304,G__21305,G__21306,G__21307,G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316,G__21317,G__21318,G__21319,G__21320,G__21321,G__21322));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__21323 = a;
var G__21324 = b;
var G__21325 = c;
var G__21326 = d;
var G__21327 = e;
var G__21328 = f;
var G__21329 = g;
var G__21330 = h;
var G__21331 = i;
var G__21332 = j;
var G__21333 = k;
var G__21334 = l;
var G__21335 = m;
var G__21336 = n;
var G__21337 = o;
var G__21338 = p;
var G__21339 = q;
var G__21340 = r;
var G__21341 = s;
var G__21342 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__21323,G__21324,G__21325,G__21326,G__21327,G__21328,G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338,G__21339,G__21340,G__21341,G__21342) : target_fn.call(null,G__21323,G__21324,G__21325,G__21326,G__21327,G__21328,G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338,G__21339,G__21340,G__21341,G__21342));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__21344 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__21344);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__14325__auto__,writer__14326__auto__,opt__14327__auto__){
return cljs.core._write(writer__14326__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__21349 = msg;
return Error(G__21349);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__21354 = x;
var G__21355 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__21354,G__21355) : pred.call(null,G__21354,G__21355));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__21356 = y;
var G__21357 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__21356,G__21357) : pred.call(null,G__21356,G__21357));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map